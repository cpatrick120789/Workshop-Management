<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfSpreadsheet.WPF</name>
    </assembly>
    <members>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.AllowEditInFormulaBar">
            <summary>
            Determines whether we can edit the cell using formula bar or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.HasCurrentCellState">
            <summary>
            Determines whether the renderer has current cell or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.Grid">
            <summary>
            Returns the Gris
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SupportDrawingOptimization">
            <summary>
            Determines whether the renderer supports drawing optimization.
            If it is true, then draw the content instead of load display uiElement.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SupportRenderOptimization">
            <summary>
            If it is true, load the display UI element in display mode and load the edit element only in edit mode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.DisplayElementOptimization">
            <summary>
            If it is true, load the display UIElement only when its content is not empty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.UseOnlyRendererElement">
            <summary>
            If it is true, load the edit UIElement directly even on display mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.CurrentCellRendererElement">
            <summary>
            Returns the edit UIElement of CurrentCell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.CurrentCellElement">
            <summary>
            Returns the cell container (GridCell) of the CurrentCell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellIndex">
            <summary>
            Returns the cell's row column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellElement">
            <summary>
            Returns the UI element of current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellRendererElement">
            <summary>
            Returns the content of the current cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SupportDrawingOptimization">
            <summary>
            Decide whether the element should drawing or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.MoveCurrentCell">
            <summary>
            Set as true, when current cell is first time edit the text or directly edit the text if that cell is not in edit mode whether cell is empty or not empty.
            And also if true, then only move the current cell when up or down key is pressed otherwise not move.
            Otherwise set as false.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.AllowEditInFormulaBar">
            <summary>
            Determines whether we can edit the cell using formula bar or not
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Add the Renderes to the Renderer dictionary.
            </summary>
            <param name="key"></param>
            <param name="renderer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key vallue
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the Corresponding Renderer Key.
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.ContainsValue(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase)">
            <summary>
            Cheks whether the Render Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.CopyTo(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase[],System.Int32)">
            <summary>
            Copy the Renderer values to Array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator for retriving the values.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the correspoding renderer for the corresponding Key value.
            </summary>
            <param name="key"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Values">
            <summary>
            Gets the Renderes in the collection
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Keys">
            <summary>
            Get the Key values of Renderes
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether elements can be recycled when scrolled out of view.
            In this case when a cell is scrolled out of view
            it is moved into a recycle bin and the next time a new element is scrolled into
            view the element is recovered from the recycle bin and reinitialized with the
            new content of the cell. The default value is false.
            </summary>
            <value><c>true</c> if elements can be recycled when scrolled out of view; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="!:GridVirtualizingCellRendererBase&lt;T&gt;"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="uiElement">The UI element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="canvas">The canvas.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Item(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase">
            <summary>
            Base Command used for defining commands
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for CommandBase class
            </summary>
            <param name="spreadsheetControl">The Spreadhsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.OnCanExecute(System.Object)">
            <summary>
            returns  
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.Execute(System.Object)">
            <summary>
            used to Execute the CommandBase
            </summary>
            <param name="parameter">true or false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.OnExecute(System.Object)">
            <summary>
            Used to Execute the Specified Command
            </summary>
            <param name="parameter">returns true or false</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.SfSpreadsheet">
            <summary>
            The SfSpreadsheet Control
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.CanExecuteChanged">
            <summary>
            Event is used to handle when OnCanExecute is changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AlignmentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Alignment Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Horizontal/VerticalAlignment, Increase/Decrease indent, MergeCells, WrapText Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Horizontal/VerticalAlignment, Increase/Decrease indent, MergeCells, WrapText command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClipboardCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ClipboardCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClipboardCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Cut, Copy and Paste Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClipboardCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the cut, copy and paste command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if HighlightCellRules, DataBars, ColorScales and IconSets Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the HighlightCellRules, DataBars, ColorScales and IconSets command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Delete Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if DeleteCells, DeleteSheetRows, DeleteSheetColumns and DeleteSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the DeleteCells, DeleteSheetRows, DeleteSheetColumns and DeleteSheet command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FontCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Font Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FontCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Bold, Italic, Underline, GrowFontSize, ShrinkFontSize and Border Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FontCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Bold, Italic, Underline, GrowFontSize, ShrinkFontSize and Border command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the  command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.GetNumberFormatType(System.String)">
            <summary>
            Get the numberformat type based on the numberformat read form xlsio.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.FindNumberFormat">
            <summary>
            Find the numberformat from the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.GetStyleFromExcel">
            <summary>
            Returns the horizontal alignment from the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.HasMultipleCells">
            <summary>
            Set the visibility of inside button icon in format cells window based on the cells in the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyHorizontalAlignment(System.Int32)">
            <summary>
            Set the horizontal alignment to range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyVerticalAlignment(System.Int32)">
            <summary>
            Set the vertical alignment to xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyWrapText(System.Boolean)">
            <summary>
            Set the wrap text to the xlsio range.
            </summary>
            <param name="haswraptext"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyMergeCells(System.Boolean)">
            <summary>
            Set the merge cells to the xlsio range.
            </summary>
            <param name="hasmerged"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyFontStyle(System.Int32)">
            <summary>
            Set the font style to the xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyUnderline(System.Int32)">
            <summary>
            Set the underline to the xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyCellBorders(Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Windows.Shapes.Line)">
            <summary>
            Set the cellborders to the xlsio range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.AddItemToCommandList(System.String)">
            <summary>
            Commands should be executed based on the items in the command list instead of all the commands,so we have maintained the list and
            items are added if the changes happens on specified command.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyLockedCells(System.Boolean)">
            <summary>
            Set the locked to the xlsio range.
            </summary>
            <param name="hasmerged"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyHiddenCells(System.Boolean)">
            <summary>
            Set the hidden cell to the xlsio range.
            </summary>
            <param name="hasmerged"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyBorderLineStyle(Syncfusion.XlsIO.ExcelLineStyle,System.Windows.Shapes.Line,System.Windows.Media.Color)">
            <summary>
            Apply the styles to the line.
            </summary>
            <param name="linestyle"></param>
            <param name="line"></param>
            <param name="bordercolor"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the  command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WindowCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for WindowCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WindowCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the WindowCommand
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeFirstColumnCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FreezeFirstColumn command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeFirstColumnCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezeFirstColumn command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeTopRowCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FreezeTopRow command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeTopRowCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezeTopRow command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GrowFontSizeCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for GrowFontSize Command
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GrowFontSizeCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if GrowFontSize Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GrowFontSizeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the GrowFontSize command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HiddenCellCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for LockCellCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HiddenCellCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if LockCell Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HiddenCellCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the LockCellCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Hyperlink command
            </summary>
            <param name="spreadsheetcontrol"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Hyperlink Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Hyperlink Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Insert Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if InsertCells, InsertSheetRows, InsertSheetColumns and InsertSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the InsertCells, InsertSheetRows, InsertSheetColumns and InsertSheet command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertCells Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertCells Command
            </summary>
            <param name="parameter">Pass parameter as InsertCells if Rows/Columns are to be inserted
            to delete entire row/column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.LockCellCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for LockCellCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.LockCellCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if LockCell Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.LockCellCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the LockCellCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NumberCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Number Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NumberCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if NumberFormat and IncreaseDecreaseDecimal Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NumberCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the NumberFormat and IncreaseDecreaseDecimal command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for OutlineCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Group, UnGroup, OutlineSetting, GroupColumnExpand, GroupRowExpand and CollapseAllGroup Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Group, UnGroup, OutlineSetting, GroupColumnExpand, GroupRowExpand and CollapseAllGroup command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ShrinkFontSizeCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ShrinkFontSize Command
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ShrinkFontSizeCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ShrinkFontSize Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ShrinkFontSizeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ShrinkFontSize command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnFreezePanesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for UnFreezePanesCommand command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnFreezePanesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the UnFreezePanesCommand command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand">
            <summary>
            To Set AutoFit for RowHeight/ColumnWidth
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for AutoFitCommand
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClearCommand">
            <summary>
            Commands used for clear the contents or complete content with format based on the parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClearCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClearCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ClearContentsCommand.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand">
            <summary>
            Collapses or Expands the group by rows/columns based on the outlinelevel value
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group in the Sfspreadsheet
            <code>
            
            //Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, false);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Int32,Syncfusion.XlsIO.ExcelGroupBy,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Initializes a new instance of CollapseAllGroupCommand class 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="labelNo">Outlinelevel value</param> 
            <param name="groupBy">Group Type</param>
            <param name="workSheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the CollapseAllGroupCommand Can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or False</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the CollapseAllGroupCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions">
            <summary>
            Provides the Interaction logic for commands in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FocusActiveGrid(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Set the Focus to the Active SpreadsheetGrid<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFontFamily(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Changes the font family for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> </param>
            <param name="fontFamily">Name of the FontFamily to be changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFontSize(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Double)">
            <summary>
            Changes the size of the font for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="size">Size of the Font to be changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFillColor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Windows.Media.Color)">
            <summary>
            Fills the color for the Selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="fillColor">Color to be Filled in the selected range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFontColor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Windows.Media.Color)">
            <summary>
            Changes the color of the font for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="fontColor">Font Color to be changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FormatIndent(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Boolean)">
            <summary>
            For changing the alignment of the selected cell/range of cells.
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="canincrease">True or False</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FormatIndentLevel(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Int32)">
            <summary>
            Set the indent based on the indent level value for the selected cell/range of cells
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="size">The indent level for the range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FormatOrientation(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Int32)">
            <summary>
            Changing the Orientation for the selected cell/range of cells.
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="angle"> Text rotation angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ConvertColor(System.Windows.Media.Color)">
            <summary>
            Converts ARGB to the color 
            </summary>
            <param name="color">Color to be converted</param>
            <returns>Color</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeNumberFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Sets the NumberFormat for the selected cell/range of cells
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="numberFormat">The number format to be set for the cell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetDatesOccuringConditionalFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,Syncfusion.XlsIO.CFTimePeriods)">
            <summary>
            Set the dates occuring conditional formats in range based on the input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="style">style name</param>
            <param name="timeperiodtype">XlsIO time period type </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetContainsConditionalFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,System.String,Syncfusion.XlsIO.ExcelComparisonOperator)">
            <summary>
            Set the contains text conditional formats in range based on the input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="value">condition value</param>
            <param name="style">style name</param>
            <param name="Operator">XlsIO operator such as greater,less</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetConditionConditionalFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,System.String,System.String,Syncfusion.XlsIO.ExcelComparisonOperator)">
            <summary>
            Set the conditional formats based on the cell value in range with input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="value1">condition value1</param>
            <param name="value2">condition value2</param>
            <param name="style">style name</param>
            <param name="Operator">XlsIO operator such as greater,less</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetConditionalFormatStyle(System.String,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Set the conditional format style into XlsIO based on the style option chosen from conditionalformat style ribbon combobox.
            </summary>
            <param name="style">different combination of styles</param>
            <param name="condition">XlsIO IConditionalFormat</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ApplyDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelDataType,Syncfusion.XlsIO.ExcelDataValidationComparisonOperator,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Apply the data validation for the selected range of cells with the specified criterias
            </summary> 
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="worksheet">Current worksheet</param>
            <param name="validationRange">Range where the data validation applied</param>
            <param name="allowType">Type of Validation test to be performed</param>
            <param name="ComparisonOperator">The comparison Operation for the data validation</param>
            <param name="conditionvalue1">Condition set for the first part of data validation</param>
            <param name="conditionvalue2">Condition set for the second part of data validation</param>
            <param name="PromptBoxTitle">Title of the PromptBox</param>
            <param name="PromptBoxText">Text in the PromptBox</param>
            <param name="ErrorBoxTitle">Title in the ErrorBox</param>
            <param name="ErrorBoxText">Text in the ErrorBox</param>
            <param name="ShowPromptBox">True if PromptBox need to be shown, else False</param>
            <param name="ShowErrorBox">True if ErrorBox need to be shown, else False</param>
            <param name="IgnoreBlank">True if empty values are allowed, else False</param>
            <param name="InCellDropDown">True if the dropdown needs to be visible, else False</param>
            <returns>True or False</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo">
            <summary>
            Represents a class that is to maintain the information about different data types for DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo.#ctor">
            <summary>
            Initializes a new instance of DV_ExcelDataTypeInfo class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo.DV_ExcelDataTypeName">
            <summary>
            Gets or sets the name of the data types in DataValidation 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo.DV_ExcelDataType">
            <summary>
            Gets or sets the type of the data in DataValidation
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo">
            <summary>
            Represents a class that is to maintain the information about the comparison operators in DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo.#ctor">
            <summary>
            Initializes a new instance of DV_ComparisionOperatorInfo
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo.DV_ComparisionOperatorName">
            <summary>
            Gets or sets the name of the comparison operator in DataValidation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo.DV_ComparisionOperator">
            <summary>
            Gets or sets the comparison operators in DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnSheetNavigating">
            <summary>
            Used to Notify when sheet nagivated
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCurrentCellEditing">
            <summary>
            Used to Notify when Current Cell is in Editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCurrentCellEndEdit">
            <summary>
            Used to Notify when Editing complete for the Currentcell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnSelectionChanged">
            <summary>
            Used to Notify when Selection is Changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnClipboardCopy">
            <summary>
            used to notify when copy the content
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to Notigt when Protecting Sheet
            </summary>
            <param name="worksheet">Worksheet to be protected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnUnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to Notify when UnProtecting sheet
            </summary>
            <param name="worksheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnProtecWorkbook">
            <summary>
            Used to Notify when Protecting Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnUnProtectWorkbook">
            <summary>
            Used to Notify when Unprotecting Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCommentEditing">
            <summary>
            Used to Notify when Comment is in Editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCommentEndEdit">
            <summary>
            Used to Notify when Editing Comment gets complete
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnDeleteComment">
            <summary>
            Used to Notify when deleting the Comment from the Current cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnFontSizeChanged">
            <summary>
            Used to Notify when Increase/Decrease the font size.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnOrientationChanged">
            <summary>
            Used to Notify when Orientation changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnGraphicCellSelectionChanged">
            <summary>
            Used to Notify when the Grahich Cells is selected
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.IsCommentInEditing">
            <summary>
            Indicates whether the Comment is in Editing, sets true if editing else sets false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontBold">
            <summary>
            Command used for Applying Font Weight as Bold
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontItalic">
            <summary>
            Command  used for Applying Font Style as Italic
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontUnderline">
            <summary>
            Command used for Applying TextDecorations as Underline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatBorder">
            <summary>
            Command used for Applying Borders for cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatVerticalAlignment">
            <summary>
            Command used for Vertical aligning of text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatHorizontalAlignment">
            <summary>
            Command used for Horizontal aligning of text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.IncreaseIndent">
            <summary>
            Command used for Increasing indent for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DecreaseIndent">
            <summary>
            Command used for Decreasing indent for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Orientation">
            <summary>
            Command used for orientation for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.GrowFontSize">
            <summary>
            Command used for Increasing font size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShrinkFontSize">
            <summary>
            Command used for Decreasing font size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.WrapText">
            <summary>
            Command used for Wrapping text in cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.MergeCells">
            <summary>
            Command used for Performing Merge Operations like Merge and Center,Merge Across, Merge cells and unmerge cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatNumber">
            <summary>
            Command used for applying Number Format for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.IncreaseDecreaseDecimalCommand">
            <summary>
            Command used for Increasing the Decimal Digits
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditonalFormattingHighlightCellsRules">
            <summary>
            Command used for applying Conditions for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditonalFormattingClearRules">
            <summary>
            Command used for applying Conditions for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditionalFormattingDataBars">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditionalFormattingIconSets">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditionalFormattingColorScales">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertSheetRows">
            <summary>
            Command used for inserting Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteSheetRows">
            <summary>
            Command used for deleting rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertSheetColumns">
            <summary>
            Command used for inserting columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteSheetColumns">
            <summary>
            Command used for deleting columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertSheet">
            <summary>
            Command used for inserting sheets
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteSheet">
            <summary>
            Command used for deleting the CurrentSheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatRowHeight">
            <summary>
            Command used for assigning RowHeight for Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatColumnWidth">
            <summary>
            Command used for assigning ColumnWidth for Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HideRows">
            <summary>
            Command used for Hiding/Unhiding Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HideColumns">
            <summary>
            Command used for Hiding/Unhiding Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HideSheet">
            <summary>
            Command used for hiding CurrentSheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileSave">
            <summary>
            Command used for Performing Save Operation as Excel File
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileClose">
            <summary>
            Command used for Exit the Application
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.AutoFitCommand">
            <summary>
            Command used for performing AutoFit Operations for RowHeight and ColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.RenameSheetCommand">
            <summary>
            Command used for Renaming the Current Sheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ProtectSheet">
            <summary>
            Command used for Protecting the Current Sheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileNew">
            <summary>
            Command used for creating a new blank workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatCellStyle">
            <summary>
            Command used for applying styles for the Cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ProtectWorkbook">
            <summary>
            Command used for Protecting Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertHyperlink">
            <summary>
            Command used for navigate cells/sheets using Hyperlinks
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.RemoveHyperlink">
            <summary>
            Command used for remove the hyperlinks from the range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OpenHyperlink">
            <summary>
            Command used for open the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertCells">
            <summary>
            Command used for Inseting Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteCells">
            <summary>
            Command used for Deleting Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileEncrypt">
            <summary>
            Command used for Encrypting the Application with a Password
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatDefaultColumnWidth">
            <summary>
            Command used to set Default width
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.NewComment">
            <summary>
            Command used to insert comment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.EditComment">
            <summary>
            Command used to insert comment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteComment">
            <summary>
            Command used to delete comment for the currentcell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DataValidation">
            <summary>
            Command used to apply DataValidation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.NameManager">
            <summary>
            Command used for Manage NameRanges in the Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.NewNameRange">
            <summary>
            Command used for show the new name range window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FreezePanes">
            <summary>
            Command used to freeze the rows/columns 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FreezeFirstColumn">
            <summary>
            Command used to freeze the first column
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FreezeTopRow">
            <summary>
            Command used to freeze the top row
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.UnFreezePanes">
            <summary>
            Command used to unfreeze the rows/columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Cut">
            <summary>
            Command used to Perform Cut Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Copy">
            <summary>
            Command used to Perform Copy Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Paste">
            <summary>
            Command used to perform Paste Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatAsTable">
            <summary>
            Command used to table formats.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Group">
            <summary>
            Command used for Grouping Rows/Cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Ungroup">
            <summary>
            Command used for Ungrouping Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OutlineSettings">
            <summary>
            Command Used to set the Outline Settings
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShowGridLines">
            <summary>
            Used to set the GridLinesVisibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShowHeadings">
            <summary>
            Used to Set the HeaderRowColumn Visibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShowFormulaBar">
            <summary>
            Used to Set the FormulaBar Visibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ClearContents">
            <summary>
            Clear the contents from the range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.GroupRowExpand">
            <summary>
            Used to Expand/Collapse the Group by Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.GroupColumnExpand">
            <summary>
            Used to Expand/Collapse the Group by Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.LockCell">
            <summary>
            Command used for Lock or UnLock the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatCells">
            <summary>
            Commands used for formatting cells window.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HiddenCell">
            <summary>
            Command used for formula hidden in formula bar.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GridLinesVisibilityCommand">
            <summary>
            Used to Set the Grid Lines Visibility
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GridLinesVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GridLinesVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HeadingsVisibilityCommand">
            <summary>
            Used to set the HeaderRowColumn Visibility
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HeadingsVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HeadingsVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormulaBarVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormulaBarVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBaseWindow.SfSpreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBaseWindow.WorkSheet">
            <summary>
            Gets or sets the SheetName to be Protected
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand">
            <summary>
            To set the conditionalformat for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormat Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if HighlightCellsRules Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the HighlightCellsRules Command
            </summary>
            <param name="parameter">Passes parameter as ExcelComparison Operator such as NotBetween,Between, Greater than, Equal To,etc..,</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingClearRulesCommand
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ClearRules Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the ClearRules command.
            </summary>
            <param name="parameter">SelectedCells or EntireSheet</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand">
            <summary>
            Set the conditional formatting of data bars for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingDataBarsCommand Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if DataBars Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the DataBars command.
            </summary>
            <param name="parameter">Colors for data bar either Gradient or Solid</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand">
            <summary>
            Set the conditional formatting of Icon sets for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingIconSetsCommand Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if IconSets Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the IconSets command.
            </summary>
            <param name="parameter">IconSets type from ExcelIconSetType</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand">
            <summary>
            Set the conditional formatting of Color Scales for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingColorScalesCommand Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ColorScales Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the ColorScales command.
            </summary>
            <param name="parameter">Different Color sets</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CutCommand">
            <summary>
            Command Used to Cut the Cells in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CutCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Cut Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CutCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Cut Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CopyCommand">
            <summary>
            Command used to copy the values in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CopyCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Copy Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CopyCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Copy Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.PasteCommand">
            <summary>
            Command used to Paste the Values 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.PasteCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Paste Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.PasteCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Paste Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationCommand">
            <summary>
            Command used for Applying DataValidation for the range
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommentCommand">
            <summary>
            Command used to Delete the Comment in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the DeleteComment can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommentCommand.OnExecute(System.Object)">
            <summary>
            Executed the DeleteComment
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand">
            <summary>
            To delete the columns from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Delete Column Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when DeleteColumn Command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteColumn Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand">
            <summary>
            To delete the Current Sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for DeleteSheet
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if DeleteCurrentSheet command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteCurrentSheet Command
            </summary>
            <param name="parameter">Null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand">
            <summary>
            To delete the Rows from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for DelteRowCommand
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when DeleteSheetRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Delete Row Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand">
            <summary>
            To exit the Application
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileClose
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileClose can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Exit command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand">
            <summary>
            Command used for Encrypt the Application with a Password
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Encrypt Command
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Encrypt Command can be Executed
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Encrypt command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand">
            <summary>
            Command used for Creating a NewWorkbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileNew
            </summary>
            <param name="SfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileNew can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.OnExecute(System.Object)">
            <summary>
            used to execute the Newcommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.ShowDialog">
            <summary>
            Method used to display the message whether to save the changes or not, if ok is clicked it saves the changes else rejects the changes
            and create a New Workbook
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveAsCommand">
            <summary>
            To Export the Application to Excel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveAsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileSaveAsCommand
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveAsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the FileSaveAsCommand Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand">
            <summary>
            Command used to save the Current Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileSave
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileSave can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the FileSave
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableCommand">
            <summary>
            To Apply Table formats in the sheet
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand">
            <summary>
            To set borders for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Border Command
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Border Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.OnExecute(System.Object)">
            <summary>
            used to execute the Border command
            </summary>
            <param name="parameter">Type of Borders such as BottomBorder, TopBorder, LeftBorder, RightBorder, AllBorder, OutSideBorder
            ThickBoxBorder, ThickBottomBorder, TopAndBottomBorder, TopAndThickBottomBorder, OutsideBorder
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ChangeBorder(Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Color,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Sets the border for the Cells or for a range
            </summary>
            <param name="excelBorderStyle">Type of Borders</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ChangeCellBorder(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Color,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Sets the Border for the Current Excel range
            </summary>
            <param name="range">Current Excel Range</param>
            <param name="excelBorderStyle">Type of Borders</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle">
            <summary>
            Gets the type of BorderStyles
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellStyleCommand">
            <summary>
            To set styles for the cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellStyleCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatCellStyle
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellStyleCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the CellStyle Command
            </summary>
            <param name="parameter">BuiltuInStyles such as Normal, Bad, Good, Accent1, Accent 2, etc..,</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand">
            <summary>
            To set the Column Width for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for the Column Width Command
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ColumnWidth Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand.OnExecute(System.Object)">
            <summary>
            used to execute the ColumnWidth Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand">
            <summary>
            Setting the default width of the column in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new instance of the FormatDefaultColumnWidthCommand class
            </summary>
            <param name="spreadsheetControl">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName">Name of the command</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.OnCanExecute(System.Object)">
            <summary>
            Determines the FormatDefaultColumnWidthCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or False</returns>
            <remarks>This command will not be executed when the current sheet is protected or the cell is in edit mode </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.OnExecute(System.Object)">
            <summary>
            Executes the FormatDefaultColumnWidthCommand to set the default width for the selected columns in SfSpreadsheet
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand">
            <summary>
            To set Bold for the range of Cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Bold Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Bold Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Bold Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand">
            <summary>
            To Set Italic Style for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatFontItalic
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Italic Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Italic Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand">
            <summary>
            Command used to Underline the text in the Cell 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatFontUnderline
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FormatFontUnderline can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand.OnExecute(System.Object)">
            <summary>
            Used to execute Underline Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand">
            <summary>
            To set the Horizontal Alignment for the Range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HorizontalAlignment Command
            </summary>
            <param name="SpreadhsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HorizontalAlignment Commmand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the HorizontalAlignment Command
            </summary>
            <param name="parameter">Passes type of Horizontal Alignment like Center, Right and Left</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand">
            <summary>
            To apply the number format for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for NumberFormat Command
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NumberFormat Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand.OnExecute(System.Object)">
            <summary>
            used to execute the NumberFormat Command
            </summary>
            <param name="parameter">passes the parameter as Format as string values</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand">
            <summary>
            To set the RowHeight of the cell/range of cellsS
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for RowHeight Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if RowHeigth Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand.OnExecute(System.Object)">
            <summary>
            Used to exeute the Row Height Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand">
            <summary>
            Command used to set the Vertical Alignment for the cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for VerticalAlignment Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if VerticalAlignment command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the VerticalAlignment Command
            </summary>
            <param name="parameter">Pass parameter as type of Vertical Alignment such as Top, Center and Bottom </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezePanesCommand">
            <summary>
            To Set Frozen Rows and Frozen Columns
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezePanesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FreezePanesCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezePanesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezePanesCommand.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand">
            <summary>
            Collapses or Expands the group by columns based on summary columns
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group by columns
            <code>
            
            //Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByColumns)
            SfSpreadsheet.ActiveGrid.ColumnWidths.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(false,true);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByColumns)
            SfSpreadsheet.ActiveGrid.SetColumnWidth(3, 6,SfSpreadsheet.ActiveGrid.GetColumnWidthFromSheet(3));
            SfSpreadsheet.RefreshOutlines(false,true);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand">GroupColumnExpandCommand</see> class. 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the GroupColumnExpandCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or false</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand.OnExecute(System.Object)">
            <summary>
            Executes the GroupColumnExpandCommand
            </summary>
            <param name="parameter">null</param>
            <remarks>The grouping range can be collapsed or expanded based on the summary columns</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupCommand">
            <summary>
            Command Used for Group by Rows/Columns
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the Group Command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the Group Command
            </summary>
            <param name="parameter">true</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand">
            <summary>
            Collapses or Expands the group by columns based on summary rows
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group by rows
            <code>
            
            /Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, false);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand">GroupRowExpandCommand</see> class. 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the GroupRowExpandCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or false</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand.OnExecute(System.Object)">
            <summary>
            Executes the GroupRowExpandCommand
            </summary>
            <param name="parameter">null</param>
            <remarks>The grouping range can be collapsed or expanded based on the summary rows</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand">
            <summary>
            To Hide the Selected columns from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HideColumn command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideColumn Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute HideColumn Command
            </summary>
            <param name="parameter">pass true if Column(s) are to be Hided and pass false if Column(s) are to be Unhided</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand">
            <summary>
            To hide the Selected Rows from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HideRows
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the HideRow Command
            </summary>
            <param name="parameter">passes true if Rows are to be hided else pass false if Rows are to be unhided</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand">
            <summary>
            To Hide the CurrentSheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HideCurrentSheet Command
            </summary>
            <param name="SpreadsheetControl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideCurrentSheet Command is to be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the HideCurrentSheet Command
            </summary>
            <param name="parameter">pass true when Sheet is to be hided and pass false when sheet is to be unhided</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand">
            <summary>
            To import the Excel File
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ImportFromExcelCommand
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ImportFromExcelCommand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute ImportFromExcel Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand">
            <summary>
            To increase the Decimal digit of a number
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for IncreaseDecimalCommand
            </summary>
            <param name="SpreadsheetControl">The SfSpreadseheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseDecreaseDecimalCommand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the IncreaseDecreaseDecimalCommand
            </summary>
            <param name="parameter">true if decimal digits are to be increased else false if decimal digits are to decreased</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.GetNumberFormat(Syncfusion.XlsIO.IRange,System.Boolean)">
            <summary>
            To Get the number format for the Current Excel Range
            </summary>
            <param name="range">Range to get the number format</param>
            <param name="increase">Whether to increase or decrease the decimal digits of a number</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand">
            <summary>
            To increase indent level of the cell/range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for IncreaseIndent Command
            </summary>
            <param name="SpreadhseetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseIndent can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Increase Indent Command
            </summary>
            <param name="parameter">true if indent level to be incresed else false if indent level to be decreased</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DecreaseIndentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for IncreaseIndent Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DecreaseIndentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseIndent can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DecreaseIndentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Increase Indent Command
            </summary>
            <param name="parameter">true if indent level to be incresed else false if indent level to be decreased</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentCommandBase">
            <summary>
            Command used to Insert/Add Comment for the CurrentCell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentCommandBase.OnExecute(System.Object)">
            <summary>
            Executes the InsertComment Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewCommentCommand">
            <summary>
            Command used to Insert a new Comment for the CurrentCell
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.EditCommentCommand">
            <summary>
            Command used to edit an existing cell comment
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand">
            <summary>
            Command used to Delete a row/column
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for DeleteCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if DeleteCells Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteCells Command
            </summary>
            <param name="parameter">Pass parameter as DeleteCells if Rows/Columns are to be inserted else pass parameter as DeleteCells
            to delete entire row/column</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand">
            <summary>
            Command used to Add, Edit or Delete Hyperlink
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Hyperlink command
            </summary>
            <param name="spreadsheetcontrol"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Hyperlink Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Hyperlink Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand">
            <summary>
            To insert column in the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertColumn Command
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetColumns can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the InsertSheetColumns
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand">
            <summary>
            To insert/add the sheet in the workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertSheet
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetComamnd can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertSheet command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OrientationCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Orientation Command
            </summary>
            <param name="SpreadhseetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OrientationCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Orientation command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OrientationCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Orientation Command
            </summary>
            <param name="parameter">true if change the orientation else false not</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand">
            <summary>
            To insert rows in the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertSheetRows
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertRow Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand">
            <summary>
            To perform merge operations for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for MergeCells
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if MergeCells can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the MergeCells
            </summary>
            <param name="parameter">Merge options such as MergeAndCenter,MergeAcross,MergeCells,UnMerge</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.FindSelectionOverlapped(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            returns true if the Selection overlapped else false
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
            <param name="activerange">active range</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.MergeCells(System.String)">
            <summary>
            Merges the cells.
            </summary>
            <param name="MergeOptions">Specifies the mergeoptions like MergeAcross, MergeAndCenter, MergeCells and UnMergeCells</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the MergeCells
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false.
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the NameManager.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.OpenHyperlinkCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OpenHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OpenHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to open the hyperlink for the contextmenu open option.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsCommand">
            <summary>
            Command used to set the Outline Settings
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the OutlineSettings can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsCommand.OnExecute(System.Object)">
            <summary>
            Executes the OutlineSettings
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand">
            <summary>
            To Protect the current sheet from the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ProtectCurrentSheet Command
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ProtectCurrenteSheet command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ProtectCurrentSheet command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand">
            <summary>
            Command used for Protecting the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ProtectWorkbook
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ProtectWorkbook command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand.OnExecute(System.Object)">
            <summary>
            used to execute the ProtectWorkbook Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.RemoveHyperlinkCommand">
            <summary>
            Commands used for remove hyperlink from workbook.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RemoveHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RemoveHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to remove the hyperlink from the range
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand">
            <summary>
            To rename the current sheet from the workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for RenameSheet
            </summary>
            <param name="SfSpreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if RenameSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the RenameSheet Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UngroupCommand">
            <summary>
            Command used for Ungroup the Row/Column
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UngroupCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the Ungroup Commmand Can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UngroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the Ungroup Command 
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand">
            <summary>
            Command used to set TextWrapping
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for WrapText
            </summary>
            <param name="SpreadsheetControl">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if WrapText can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the WrapText
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions">
            <summary>
            Defines copypaste options for SfSpreadsheet
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Paste">
            <summary>
            Copies the values,formats,formulas..
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Formula">
            <summary>
            Copies the Formula alone without any formatting
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Value">
            <summary>
            Copies the values alone without any formatting
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Format">
            <summary>
            Copies only the formatting alone without any values
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.FormulaFormat">
            <summary>
            Copies the formulas along with its formats
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.ValueFormat">
            <summary>
            Copies the values along with its formats
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem">
            <summary>
            Represents the class that uses a control template to design an interface for copy paste options
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.copyPaste">
            <summary>
            To access the methods,properties of SpreadsheetCopyPaste
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.pasteOption">
            <summary>
            To open and close the list popup, when pastebutton clicked
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem">PasteDropDownItem</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.#ctor(Syncfusion.UI.Xaml.Spreadsheet.IPasteOptionChanged)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem">PasteDropDownItem</see> class. 
            </summary>
            <param name="changedHandler">An instance for the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.IPasteOptionChanged"/> </param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the PasteDropDownItem when a new template is applied.
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteOptionPopup_Closed(System.Object,System.Object)">
            <summary>
            Occurs when popup closed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event fires when the pasteoption popup button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteFormulaButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when formula button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteValueButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when value button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteAllButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when value button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteFormulaFormatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when Formula and SourceFormatting button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteValueFormatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when value and SourceFormatting button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteFormatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when Format only button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.WireEvents">
            <summary>
            To hook Events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.UnWireEvents">
            <summary>
            To unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteOptionChangedHandler">
            <summary>
            To get or set the pasteoptions
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.IPasteOptionChanged">
            <summary>
            Interface for paste options
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste">
            <summary>
             This class is used to maintain all the clipboard operations such as Cut/Copy/Paste in Spreadsheet
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.isActivated">
            <summary>
            Determines whether the popup is activated in app or not
            </summary>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.isOptionChanged">
            <summary>
            Determines whether to copy the targetworkbookrange to tempworkbookrange or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.option">
            <summary>
            Maintains the pasteoption which the user selects, by default the option is Paste
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnGridLoaded">
            <summary>
            This function invoked when grid is loaded
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnCurrentCellActivated">
            <summary>
            This function is called when current cell is activated
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnCurrentCellBeginEdit">
            <summary>
            This function invoked when cell enters into edit mode
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.HasCopiedContent(System.Boolean@)">
            <summary>
            Used to enable copy paste option in context menu
            </summary>
            <param name="hasSourceRangeContent"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ShowPasteOptionPopup(System.Double,System.Double)">
            <summary>
            To set the horizontal and vertical offset
            </summary>
            <param name="vOffset">To set the Vertical Offset</param>
            <param name="hOffset">To set the Horizontal Offset</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ShowPasteOptionListPopup(System.Double,System.Double)">
            <summary>
            To set the horizontal and vertical offset for listpopup
            </summary>
            <param name="vOffset">To set the Vertical Offset</param>
            <param name="hOffset">To set the Horizontal Offset</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.HidePopup">
            <summary>
            To hide the popup when ribbon interaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ShowHidePastePopup(System.Boolean)">
            <summary>
            To show or hide popup when app activated/ deactivated.
            </summary>
            <param name="show">True indicates the app is activated or else deactivated</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ResetPastePopupPosition(System.Double,System.Double,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            To set the position of the popup in the grid
            </summary>
            <param name="xPos">represents X position of container</param>
            <param name="yPos">represents Y position of container</param>
            <param name="Grid">represents the current grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ActivateGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            To activate the grid and worksheet
            </summary>
            <param name="grid">current grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copy(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            To copy the values with the given range
            </summary>
            <param name="range">currently selected range</param>
            <param name="needToCut">determines whether to Copy/Cut</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Cut">
            <summary>
            This function performs the Cut Operation in Spreadsheet grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copy">
            <summary>
            This function performs the Copy Operation in Spreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Dispose">
            <summary>
            To dispose the copy paste instances
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Paste">
            <summary>
            This function Performs the Paste Operation in spreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteFromClipboard(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Paste the text from clipboard
            </summary>
            <param name="range">Grid range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteOptionChanged(Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            This function is called when the pasteoptions button is clicked
            </summary>
            <param name="e"> Option which user selects</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Paste(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            To paste the values in the given range
            </summary>
            <param name="range">Selected rangelist</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Paste(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            To paste the values based on the option in the given range
            </summary>
            <param name="range">Selected ranges</param>
            <param name="e">Selected Option</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.GetPasteDropDownItem">
            <summary>
            To get the PasteDropDown control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ClearClipboard(System.Boolean)">
            <summary>
            To clear the clipboard values
            </summary>
            <param name="clear">when true clears the clipboard</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CanCut">
            <summary>
            Checks if the Selected range can be cut and copied to the clipboard
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CanCopy">
            <summary>
            Checks whether the selected range can be copied or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CanPaste(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            Checks whether the copied range can be pasted
            </summary>
            <param name="mrangeList">currently selected rangelist</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CopyToClipboard(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Copies the text to the clipboard
            </summary>
            <param name="copyRange">Copied range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.MoveToTargetrange(System.Collections.ICollection)">
            <summary>
            Move the specified source range into target range.
            </summary>
            <param name="rangeList">the selected ranges to paste</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CopyToTemprange(System.Collections.ICollection,System.String)">
            <summary>
            Copy the specified source range into target range.
            </summary>
            <param name="rangeList">the selected ranges to paste</param>
            <param name="excelTargetRange">the excel range to paste</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateMergeRange">
            <summary>
            Update the pasted merge range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateSelection(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo})">
            <summary>
            Update selection selection frame
            </summary>
            <param name="mrangeList">the rangelist of the pasted ranges</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CommitTransaction(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            Commit trasanction
            </summary>
            <param name="rangeList">the rangelist of pasted ranges</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CopyToTargetrange(Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            To perform the paste operation based on the option provided
            </summary>
            <param name="Option">the option which user opts</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateTargetRange(System.String)">
            <summary>
            Update target range 
            </summary>
            <param name="excelTargetRange">the excelrange of selected range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CheckMergedCells">
            <summary>
            Returns the value of the source range merged cell intersects with Target range merged cells
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CheckPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not
            </summary>
            <param name="range">selected range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateTableSelectedRange">
            <summary>
            Returns Table range selected partially or not?.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.GetExpandedRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            Expands the Range list when it is Table, Rows, Cols to Cells.
            </summary>
            <param name="rangeList">The currently selected range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.GetClipboardText">
            <summary>
            Gets the Clipboard text which is stored when copied range of cells from spreadhsheet  
            or any external source such as excel,notepad..etc
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceGrid">
            <summary>
            Gets or sets the copied range grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceRange">
            <summary>
            Gets or sets the selected ranges which is used for copy/cut
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.TargetRange">
            <summary>
            Gets or sets the selected ranges which is used for paste
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteRangeList">
            <summary>
            Gets or sets the ranges which are selected for pasting
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ClipboardText">
            <summary>
            Gets or sets the copied text in clipboard when we perform paste operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceRangeText">
            <summary>
            Gets or sets the copied text in clipboard when we perform cut/copy operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceWorkbookRange">
            <summary>
            Gets or sets the active sheet range of Workbook when we perform cut/copy operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.TargetWorkbookRange">
            <summary>
            Gets or sets the active sheet range of workbook when we perform paste operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.TempWorkbookRange">
            <summary>
            Gets or sets the temp sheet range of workbook when we perform paste operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteDropdownItem">
            <summary>
            Gets or sets the dropdownitem
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ActiveWorksheet">
            <summary>
            Gets or sets the worksheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ActiveGrid">
            <summary>
            Gets or sets the current grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteOptionPopup">
            <summary>
            To get or set the paste popup
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteOptionListPopup">
            <summary>
            To get or set the pastelist popup
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem">
            <summary>
            Represents the class that uses a control template to design an interface for fill series elements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.#ctor">
            <summary>
            Initializes a new instance of FillDropDownItem class
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of FillDropDownItem class with the specified SpreadsheetGrid
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the FillDropDownItem when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.MovingDirection">
            <summary>
            Enum to determine the direction of the CopyCells and FillSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController">
            <summary>
            Represents the class that provides support for extending the selection and auto fill the cells with data that completes a pattern in the Selected region.
            </summary>
            <remarks>
            Fills the selected range of cells in the spreadsheet with a series of numbers, characters, or dates. The content of the first cell in the selected range is used as the starting value for the series.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of FillSeriesController Class with the specified SpreadsheetGrid
            </summary>
            <param name="spreadsheetGrid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.AutoScroller_AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            When Auto Scrolling FillRange is updated 
            </summary>
            <param name="sender">sender</param>
            <param name="args">AutoScrollerValueChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CheckPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionPopup_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            To change the cursor when the pointer is moved over the popup.
            </summary>
            <param name="sender">sender</param>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.PointerPressed(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines the pressed position of pointer of the FillSeriesController
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.IsPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.PointerReleased(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines the released position of pointer of the FillSeriesController
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CopyCells(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Copys the OldRange to newRange based on the fillOption
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.AddCoveredCellsIntoGrid">
            <summary>
            Add merged ranges of the specified grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.IsFillRangeIntersectsMergeCell">
            <summary>
            To check whether the fill range intersects any merge range in worksheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillSeries(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Fills the Selected range based upon the content of the cell Like Numbers, string, Formula or DateTime
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CopyToRange(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelCopyRangeOptions)">
            <summary>
            Used to copy excel ranges
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="option">Option</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ProcessFillSeriesDragSelection(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines the state of the mouse position and the selected range of the FillSeries
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionChanged(System.String)">
            <summary>
            Determines the operation to be performed based on the selected fillseries option
            </summary>
            <param name="Content">The option to determine the operation</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.HitTest(System.Windows.Input.MouseEventArgs)">
            <summary>
            Hit Test for the FillSeriesController
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CheckClearHeader(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            To check that the selection is at the top edge or at the left side edge
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.UnWireEvents">
            <summary>
            Unwire the events associated with FillSeriesController
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillRange">
            <summary>
            FillRange Contains the range for which has to be Filled.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.OriginalRange">
            <summary>
            OriginalRange is the range which is obtained before filling the datas
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.AllowFillSeries">
            <summary>
            Determines whether to allow fill series or copy series operation
            </summary>
            <value>True or False</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController">
            <summary>
            Represents a class which is used to control/handle the selection of the GraphicCells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionController">GraphicSelectionController</see> class. 
            </summary>
            <param name="model">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicModel"/></param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.AddSelection(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl})">
            <summary>
            Adds the selection to the mentioned shapes.
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Handles the pointer operations
            </summary>
            <param name="args"></param>
            <param name="cellElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.HandleKeyDown(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Handles the KeyDown operation.
            </summary>
            <param name="e"></param>
            <param name="CellElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangingEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Helper method to raise the <see cref="!:GraphicSelectionChanging"/> event.
            </summary>
            <param name="oldshapes"></param>
            <param name="newcells"></param>
            <param name="trigger"></param>
            <returns>Returns true, if event is not canceled</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangedEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Helper method to raise the <see cref="!:GraphicSelectionChanged"/> event.
            </summary>
            <param name="oldcells"></param>
            <param name="newcells"></param>
            <param name="trigger"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.ProcessTabKeyNavigation(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            The selection operations performed in SfSpreadsheet while pressing the Tab key on the Graphic Cell
            </summary>
            <param name="cell">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicCell"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.OnPointerPressed(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Invoked when the pointer is pressed on <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicCell"/> and performs the operations.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <param name="cell">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicCell"/></param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RemoveSelectedGraphicCells">
            <summary>
            Remove the selected GraphicCells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.SelectAllGraphicCells">
            <summary>
            Used to select all GraphicCells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.SetCurrentGraphicObject(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Used to set the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/> to renderer.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.BringShapeIntoView(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Scrolls the grid to bring the selected <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> into view.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.WireEvents">
            <summary>
            Hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.UnWireEvents">
             <summary>
            UnHook the events
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.CellGrid_CellClick(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs)">
            <summary>
            This method is used to remove the selection from <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>
            when click on the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.Grid_SelectionChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs)">
            <summary>
            Used to remove the selection from GraphicCells when grid cell is selected.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionController"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.SelectedShapes">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which are selected.
            </summary>
            <value>List of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>      
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController">
            <summary>
            Helper Control which is used to resize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController">MoveResizeController</see> class. 
            </summary>
            <param name="graphicModel">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerPressed(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when a pointer pressed within this element
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerReleased(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when a pointer released after press action within this element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerMoved(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when a pointer moves while the pointer remains within the hit test area of this element.
            </summary>
            <param name="e"><see cref="T:System.Windows.Input.MouseEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerExited(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when a pointer leaves the hit test area of this element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.HandleKeyDown(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Used to handle key down operations
            </summary>
            <param name="e"></param>
            <param name="graphicCellControl"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.MoveUsingKey(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
             Move the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> when appropriate key is pressed
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <param name="graphicCellControl">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.ResizeUsingKey(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Used to resize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> when appropriate key is pressed
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <param name="graphicCellControl">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Resize(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            To resize the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> with X and Y axis.
            </summary>
            <param name="diffX">X-axis difference</param>
            <param name="diffY">Y-axis difference</param>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Move(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Method to move the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="diffX">X-axis difference</param>
            <param name="diffY">Y-axis difference</param>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Resize(System.Windows.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Helper method to resize the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="pointerPos"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Move(System.Windows.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Helper method to move the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="pointerPos"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.AutoScroller_AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Used to move/resize the GraphicCell when the element is dragged over auto scroll bounds
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.GetResizeLocation(System.Windows.Point)">
            <summary>
            Used to get the resize area based on pointer position and also set the 
            cursor based on resize area
            </summary>
            <param name="pointerPos">Pointer position</param>
            <returns><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.ResizeLocation"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.CanDrag(System.Windows.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to determines whether the pointer is in correct position
            to start drag/move <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
            <param name="pointerPos">Pointer position</param>
            <returns><see cref="!:shape"/><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.SetCursor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.CursorsType)">
            <summary>
            Hepler method to set the cursor
            </summary>
            <param name="cursorType"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.CursorsType"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.ResizeLocation">
            <summary>
            Used to determines the starting location of resizing.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.CursorsType">
            <summary>
            Enumeration for type of cursors
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell">
            <summary>
            Represents a class that is used to maintain/reuse the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.#ctor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> class with the specified GraphicModel.
            </summary>
            <param name="model">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicModel"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.SetFocus">
            <summary>
            Used to set the focus to <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.UpdateGraphicCell">
            <summary>
            Used to update the information(Renderer, GraphicCellControl, etc.) of GraphicCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.UpdateGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl@,System.Boolean)">
            <summary>
            Used to update the the renderer and <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="control"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="isSelected">Sets true, if GraphicCell is selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.UpdateRenderer(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl@)">
            <summary>
            Used to update the renderer of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>
            and unload the UIElement if renderer is changed.
            </summary>
            <param name="graphicObject"><see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.GraphicObject"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicCell"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Region">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Control">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in normal scrollable area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.FrozenRowControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in frozen row area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.FrozenColumnControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in frozen column area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.FrozenControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in non scrollable area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Renderer">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> based on cell type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.GraphicObject">
            <summary>
            Gets or sets the GraphicObject of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.IsEnsured">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is ensured or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Visibility">
            <summary>
            Sets the visibility of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion">
            <summary>
            Determines the regions of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>.
            (i.e., Where the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed (Frozen row area, Frozen column area and scrollable area).
            Load the duplicate controls based on the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.Normal">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in normal scrollable area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.Frozen">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in non scrollable area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.FrozenRow">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in Frozen rows area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.FrozenColumn">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in Frozen columns area.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl">
            <summary>
            ContentControl which is used to load the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.#ctor">
            <summary>
            Initializes a new instance of the GraphicCellControl class
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.IsSelectedProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Spreadsheet.GraphicCellControl dependency property.
            </summary>        
            <remarks>
            The identifier for the Syncfusion.UI.Xaml.Spreadsheet.GraphicCellControl dependency property.
            </remarks>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the GraphicCellControl when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown"/> attached routed event
            reaches an element in its route that is derived from this class. Implement this
            method to add class handling for this event. 
            </summary>
            <remarks>Occurs when a pointer pressed within this element</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>
            that contains the event data. The event data reports that one or more mouse
            buttons were pressed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove"/> attached event reaches an element in its route that is derived from this
            class. Implement this method to add class handling for this event. 
            </summary>
            <remarks>Occurs when the mouse moves while the pointer remains within the hit test area of this element.</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp"/> routed event reaches an element in its route that is derived from this class.
            Implement this method to add class handling for this event. 
            </summary>
            <remarks>Occurs when a pointer released after press action within this element.</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>
            that contains the event data. The event data reports that the mouse button was
            released.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on
            this element. Implement this method to add class handling for this event.
            </summary>
            <remarks>
            Occurs when a pointer leaves the hit test area of this element.
            </remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"/> routed event reaches
            this class in its route. Implement this method to add class handling for this
            event.
            </summary>
            <remarks>
            Skip the contextmenu opening while right click on the graphic cells.
            </remarks>
            <param name="e">The <see cref="T:System.Windows.Controls.ContextMenuEventArgs"/>
            that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled Keyboard.KeyDown attached event reaches an element in its route that is derived from this class. 
            Implement this method to add class handling for this event.         
            </summary>
            <remarks>Occurs when a key pressed within the element from this class</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicCellControl"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.IsSelected">
            <summary>
            Determines whether the GraphicCellControl is selected or not.
            </summary>
            <value>True or False</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionControl">
            <summary>
            Represents a control which is used to show the selection on GraphicCellControl
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionControl.#ctor">
            <summary>
            Initializes an instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionControl"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel">
            <summary>
            A custom virtualizing panel used to load the graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.#ctor(System.String)">
            <summary>
            creates an instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel"/>
            </summary>
            <param name="name">Name of the panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arrange the GraphicCellControl which are only in viewable area.
            </summary>
            <param name="finalSize">finalsize of the panel</param>
            <returns><see cref="T:System.Windows.Size"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeGraphicCells(System.Windows.Size)">
            <summary>
            Arrange the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> which are only in viewable area.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeChartAsGraphiCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell,System.Windows.Size)">
            <summary>
            Used to Arrange the IChart
            </summary>
            <param name="graphicCell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeGraphicCellControl(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Clip and arrange the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> into the specified rect.
            </summary>
            <param name="graphicCell"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="control"></param>
            <param name="containerRect"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.EnsureGraphicCells(System.Windows.Size)">
            <summary>
            Based on the current viewable area, create/update the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and load its content based on celltype. 
            And then measure <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.EnsureChartAsGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,System.Windows.Size)">
            <summary>
            Create or measure the IChart
            </summary>
            <param name="graphicObject"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.MeasureGraphicCells(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Rotate and measure the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="graphicCell"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="Control"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="shape"><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.CreateGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion)">
            <summary>
            Create a new <see cref="!:GraphicElement"/> or recycle it from RecycleGraphicElementsBin
            </summary>
            <param name="graphicCell">GraphicCell</param>
            <returns><see cref="!:GraphicCellElement"/></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.Grid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1">
            <summary>
            Defines the default implementation of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/>.
            You can create the custom GraphicCell renderer with this as a base class.
            </summary>
            <typeparam name="T">Element type of the Custom <see cref="N:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells"/></typeparam>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer">
            <summary>
            An interface for a graphic cell renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.Arrange(System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Arrange the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.Measure(System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Measure the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.PrepareUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content
            </summary>
            <param name="cellContainer"></param>
            <param name="shape"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.InitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize the element of <see cref="!:GrpahicCellControl"/>.
            </summary>
            <param name="cellcontainer"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Unload the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.RaiseSaveChanges">
            <summary>
            Raised when want to save the changes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.GetControlValue">
            <summary>
            Used to get the current value from control
            </summary>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.ShouldTryToHandleKeyDown(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.KeyEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="e"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.CurrentRendererElement">
            <summary>
            Gets or sets the rendered element of current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.CurrentGraphicObject">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.IsEditable">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> is editable or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.GraphicModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.RaiseSaveChanges">
            <summary>
            Raised when want to save the changes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.GetControlValue">
            <summary>
            Used to get the current value from control
            </summary>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Arrange(System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Arrange the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Measure(System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Measure the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.ShouldTryToHandleKeyDown(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.KeyEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="e"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.PrepareUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content
            </summary>
            <param name="cellContainer"></param>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.InitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize the element of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="cellcontainer"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,`0,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="!:GrpahicCellControl"/> and it s content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element">content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="shape"><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CreateOrRecycleElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Create or recycle the UIElement.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates the new UIElement.
            </summary>
            <param name="style"><see cref="!:GraphicStyleInfo"/></param>
            <returns>UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.WireUIElement(`0)">
            <summary>
            Hook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.UnWireUIElement(`0)">
            <summary>
            Unhook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.UnloadUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Unload the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="uiElement"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Dispose" -->
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CurrentRendererElement">
            <summary>
            Gets or sets the rendered element of current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CurrentGraphicObject">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.IsEditable">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> is editable or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.GraphicModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Enqueue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="uiElement">The UI element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Dequeue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="canvas">The canvas.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Item(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection">
            <summary>
            Collection of <see cref="!:IGrapihcCellRenderer"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add the Renderes to the Renderer dictionary.
            </summary>
            <param name="key"></param>
            <param name="renderer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key vallue
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the Corresponding Renderer Key.
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.ContainsValue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Cheks whether the Render Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.CopyTo(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer[],System.Int32)">
            <summary>
            Copy the Renderer values to Array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator for retriving the values.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the correspoding renderer for the corresponding Key value.
            </summary>
            <param name="key"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Values">
            <summary>
            Gets the Renderes in the collection
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Keys">
            <summary>
            Get the Key values of Renderes
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer">
            <summary>
            Custom GraphicCellRenderer for <see cref="T:System.Windows.Controls.Image"/> celltype.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a new <see cref="T:System.Windows.Controls.Image"/>.
            </summary>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
            <returns><see cref="T:System.Windows.Controls.Image"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Controls.Image,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element"><see cref="T:System.Windows.Controls.Image"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer">
            <summary>
            Custom GraphicCellRenderer for <see cref="T:System.Windows.Controls.RichTextBox"/> celltype.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a new <see cref="T:System.Windows.Controls.RichTextBox"/>.
            </summary>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
            <returns><see cref="T:System.Windows.Controls.RichTextBox"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element"><see cref="T:System.Windows.Controls.RichTextBox"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.WireUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Hook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.UnWireUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Unhook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.ShouldTryToHandleKeyDown(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.KeyEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="control">GraphicCellControl</param>
            <param name="e"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel">
            <summary>
            Holds that all information about Graphic Cells and offers many events to notify the actions
            or to modify the behavior of the Graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicModel">GraphicModel</see> class. 
            </summary>
            <param name="grid">An instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.CommitValue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,System.Object)">
            <summary>
            Used to commit the edited value into the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="graphicObject"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.InitializeCellRendererCollection">
            <summary>
            Initialize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GetCellRenderer(Syncfusion.XlsIO.ExcelShapeType)">
            <summary>
            Used to get the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> based on celltype of <see cref="!:GraphicStyleInfo"/>
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.OnGraphicSelectionChanging(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs)">
            <summary>
            Helper method to trigger the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanging"/> event.
            </summary>
            <param name="args"></param>
            <returns>Returns false, if the selection changing is canceled.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.OnGraphicSelectionChanged(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs)">
            <summary>
            Helper method to trigger the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanged"/> event.
            </summary>
            <param name="args"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.InvalidateGraphicVisual">
            <summary>
            Invalidates the visual layout of GraphicCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.AddSelectedShapes(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Adds the selected shapes in the list
            </summary>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.ClearSelection">
            <summary>
            Clears the selection from shapes and move the selection to Grid
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.InvalidateGraphicObjects">
            <summary>
            Invalidates or clears the cached content of GraphicObjects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicModel"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicObjects">
            <summary>
            Returns the collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicCellRenderers">
            <summary>
            Gets the collection of <see cref="!:GraphicCellRendererBase"/> objects for the
            current grid view method.
            </summary>
            <value>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> which displays the data in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController">
            <summary>
            Gets the instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionController"/> which handles
            the selection of Graphic Cells .
            </summary>
            <value>
            An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionController"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SelectedShapes">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which are selected .
            </summary>
            <value>
            List of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.Spreadsheet" -->
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.MoveResizeController">
            <summary>
            Returns the move/resize controller of GraphicCells
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanging">
            <summary>
            This event occurs before the selection of GraphicCells to be changed. 
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanged">
            <summary>
            This event occurs after the selection of GraphicCells changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject">
            <summary>
            Represents a class that maintains the information about the GraphicObject (Shape, Value and Name).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.#ctor(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Object)">
            <summary>
            Initializes an instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
            <param name="shape">An instance of<see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
            <param name="content">Content of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Shape">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information about implementation of Shapes.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Chart">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.XlsIO.IChart"/> which
            represents a chart sheet.
            </summary>
            <value>
            An instance of <see cref="T:Syncfusion.XlsIO.IChart"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Content">
            <summary>
            Gets or sets the content of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information
            about implementation of Shapes.
            </summary>
            <remarks>
            Contents like TextBox, Image,..
            </remarks>
            <value>
            Content of the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Name">
            <summary>
            Gets or sets the name of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information
            about implementation of Shapes..
            </summary>
            <value>Name of the shape</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.BoolToVisiblityConverter">
            <summary>
            Converter class which is used to convert <see cref="T:System.Boolean"/> to <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventHandler">
            <summary>
            Event handler to denotes the selection changing of GraphicCell
            </summary>
            <param name="sender"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
            <param name="args"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs">
            <summary>
            Provides data for the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionChanging"/> event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.OldSelectedShapes">
            <summary>
            Gets or sets the collection of previously selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>  
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.NewSelectedShapes">
            <summary>
            Gets or sets the collection of currently selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.SelectionTrigger">
            <summary>
            Gets or sets how the selection is triggered in Graphic Cells .
            </summary>
            <value>One of the <see cref="!:Syncfusion.UI.Xaml.CellGrid.ActivationTrigger"/> that specifies the activation options</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventHandler">
            <summary>
            Event handler to denotes the selection changed of GraphicCell
            </summary>
            <param name="sender"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
            <param name="args"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionChanged"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.OldSelectedShapes">
            <summary>
            Gets or sets the collection of previously selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.NewSelectedShapes">
            <summary>
            Gets or sets the collection of currently selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.SelectionTrigger">
            <summary>
            Gets or sets how the selection is triggered in Graphic Cells .
            </summary>
            <value>One of the <see cref="!:Syncfusion.UI.Xaml.CellGrid.ActivationTrigger"/> that specifies the activation options</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper">
            <summary>
            Helper class for GraphicCells related stuffs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddGraphicChartCellRenderer(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> for charts, if charts need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for Chart</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddSparklineCellRenderer(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/> for sparklines, if sparklines need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for Sparkline</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddImage(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.IO.Stream)" -->
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddChart(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Add Chart to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.IChart"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddTextBox(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Size,System.String)">
            <summary>
            Add TextBox to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <param name="rowColumnIndex">rowColumnIndex where TextBox is to be placed</param>
            <param name="size">size of the RichTextBox</param>
            <param name="richText">rich text</param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.TextBoxShapeImpl"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeHeight(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape height which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape width which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeLeft(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape left position which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeTop(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape top position which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.SheetFamilyId">
            <summary>
            Sheet family id - This is used to identify a family of grids.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportExcelToGrid(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorkbook,System.Int32)">
            <summary>
            Imports all worksheets from excel workbook to GridCollection.
            </summary>
            <param name="workbook">The Workbook.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportWorksheetToGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Imports single sheets from excel to Grid.
            </summary>
            <param name="model">The grid.</param>
            <param name="sheet">The sheet.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportChartToGrid(Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import chart sheet into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="chart">IChart</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportImagesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import pictures into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportTextBoxesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import textboxes into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportChartsToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import charts into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportRowsAndColumns(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to import the row and column information(row/column count, height, width). 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ResetHeightAndWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to reset the row height and column width of the Grid.
            </summary>
            <param name="grid"></param>
            <param name="sheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportNamedRange(Syncfusion.UI.Xaml.CellGrid.FormulaEngine,Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Copies the named range from Workbook into formula engine.
            </summary>
            <param name="engine">Specified FormmulaEngine</param>
            <param name="workbook">Specified workbook , which need to import named ranges</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportMergesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Copies merged ranges into grid.
            </summary>
            <param name="sheet">Destination worksheet.</param>
            <param name="grid">Source grid.</param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.GetFormat(System.String)">
            <summary>
            convert the excel format into grid supports formats.
            </summary>
            <param name="format">The format.</param>
            <returns>The format</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ConvertExcelBorder(Syncfusion.XlsIO.ExcelLineStyle,System.Drawing.Color)">
            <summary>
            Converts excel border into Pen.
            </summary>
            <param name="border">Border to convert.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper">
            <summary>
            Making an optimized formula calculation -> Initially formulas are parsed in engine and saved in ParsedFormulas collection.
            Now engine will add precedent cells and dependent cells as per the parsed formula. While editing any cell , now look at the precendent cells.
            If it is available in the hashtable , all the dependencies will be recalculated by using the method RecalculateDependencyCells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OpenWorkbookInZipArchive(System.IO.Stream,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Open file stream in ZipArchiveExt
            All the elements are saved in the collection of xmlItems.
            CalcChainXml holds the collection of formula cells only
            SpreadsheetCalcChain holds the collection of the formula cells
            Workbook.xml holds the collection of sheets,defined names, etc.
            </summary>
            <param name="fileStream"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ReadCalcChainXMLElements(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            After 2003 excel version , excel has a CalcChain xml, that maintains the information about formula cells. So we could get formula cells only from that xml.
            Parse the formula and stored in list for future usage. While calculating specified cell, the parsed formula read from list.
            </summary>
            <param name="xml">CalcChain text</param>
            <param name="sfSpreadsheet">owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseXLSFormatFormulas(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Parse xls format formula cells. 
            Xls format don't have CalcChain xml so we couldn't able to find which are formula cells.
            Read used cells to avoid unwanted iteration
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseCalcChainFormulas(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.String)">
            <summary>
            Formula Parsing in grid engine
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid"></param>
            <param name="cellRef">Cell reference</param>
            <param name="excelRange">Specified excel range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnEndEdit(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell)">
            <summary>
            If a cell is formula cell , that needs to be parsed into engine and compute the value.
            In before editing, if the cell contains formula, previously parsed formula need to be removed from ParsedFormulas list.
            </summary>
            <param name="grid"></param>
            <param name="cell"></param>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnCommitCellValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Int32,System.Int32)">
            <summary>
            Compute value for a specified cell
            While entering formula in a cell,it should be calculated.
            </summary>
            <param name="grid"></param>
            <param name="currentCell">Specified Cell</param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RefreshDependencyCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Recalculate dependency cells.
            RecalculateDependencyCells() will be recalculated for dependency cells. 
            </summary>
            <param name="grid"></param>
            <param name="precedentCell">PrecedentCell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RecalculateDependencyCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            When a precedent cell value changed, that dependency cells should be recalculated. 
            </summary>
            <param name="grid"></param>
            <param name="precedentCell">PrecedentCell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RefreshCell(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.Int32,System.Int32)">
            <summary>
            Refresh cell will updated dependency cells when it's as precedent cell
            it parse and compute value when it's as formula cell
            It will compute value if it already parsed in engine
            </summary>
            <param name="grid"></param>
            <param name="sfSpreadsheet"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnPaste(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            On paste formula cells thats need to be parsed and compute the cell value.
            </summary>
            <param name="grid"></param>
            <param name="gridRangeInfo"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnFillSeries(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            On performing fill series, formula cells need parse and compute the cell value.
            </summary>
            <param name="grid"></param>
            <param name="gridRangeInfo"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseandComputeRange(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Parse and compute value for specified range.
            Iterate the range and parse and computed value for formula cells
            </summary>
            <param name="grid"></param>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.Parse(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Parse a specified formula and stored in parsed formulas list for feature usage
            </summary>
            <param name="grid"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="key"></param>
            <param name="formula"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseandCompute(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Parse the specified range formulas and stored in parsed formula list.
            Compute an every formula cell and stored in specified worksheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ComputeValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Compute formula cell and stored in specified worksheet.
            </summary>
            <param name="grid"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="parsedFormula"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.MarkDirtyCells(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Mark dirty cells for recalculation.
            When a precedent cell value updated, The dependency cells of the precedent cell should be recalcuated.
            Listed dirty cell collections in a list. this will helps to avoid unwanted calculation. 
            Example-> B2 formula => =A1+B1, A1 => 5 , B1=> C1+D1. When update the A1 cell value, in OnGetDependent methos will try 
            to calculate the value of the C1+D1. This is unwanted calculation. We can get the value from directly from worksheet.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="grid"></param>
            <param name="precedentCell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.UpdateDirtyCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Listed dirty cells of the specified precedent cell.
            Mark dirty cells for recalculation.
            When a precedent cell value updated, The dependency cells of the precedent cell should be recalcuated.
            Listed dirty cell collections in a list. this will helps to avoid unwanted calculation. 
            Example-> B2 formula => =A1+B1, A1 => 5 , B1=> C1+D1. When update the A1 cell value, in OnGetDependent method will try 
            to calculate the value of the C1+D1. This is unwanted calculation. We can get the value from directly from worksheet.
            </summary>
            <param name="grid"></param>
            <param name="dirtyCells"></param>
            <param name="precedentCell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnGetDependentCellValue(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32,System.Int32)">
            <summary>
            GetDependentCellValue
            Gets the depedent cell of the specified cell index.
            If value already computed, it can get form calculated list
            </summary>
            <param name="spreadsheet">Owner</param>
            <param name="grid">Grid of the specified range</param>
            <param name="rowIndex">Specified RowIndex</param>
            <param name="colIndex">Specified ColIndex</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.SetCalculatedValue(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.String)">
            <summary>
            Set the formatted text excel range. When applied number formats, the calculated value should be converted as per the format.
            </summary>
            <param name="row">Row index of the specified range</param>
            <param name="col">Col index of the specified range</param>
            <param name="mWorksheet">Worksheet of the specified range</param>
            <param name="calculatedValue">CalculatedValue</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnUpdateColumn(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs)">
            <summary>
            For hug workbook, the formulas can't be parsed immediately. so resolve this problem,  ReverseParsing is proposed.
            Here view layout formula cells parsed initially. suppose if any formula cell depend in out of view, that will be parsed immediately.
            </summary>
            <param name="args"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ReverseRecursiveParsing(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            If initial parsing didn't completed,Viewlayout cells will be parsed immediately. Suppose if cell referred out of viewlayout , that will be parsed by using reverse recursive parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetGrid(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Gets Grid from Grid collection
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="sheetName">specified name</param>
            <returns>Specified grid</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.SetWorksheetNames(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Set worksheets name in a collection
            </summary>
            <param name="xml"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnInsertingNameRange(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Update error formulas after inserted a name or updated name.
            Normally name error may occur due to incorrect name reference. So while inserting a new name or updating existing name we should ensure this.
            </summary>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnDeletingNameRange(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Recalculate the dependency cells of the deleted name range
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="referToRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RecalculateEditedCells(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Recalculate edited cells. 
            For a hug sheet, initial formula parsing does not get complete immediately. So edited cells has been stored and once completed the parsing 
            we should recalculate all the dependency cells of the edited cells.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetExcelExportType(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns excel export type of the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.HasFormula(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            returns specified cell is formula or not? 
            </summary>
            <param name="worksheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnDisposingOldInstance(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            OnDisposingOldInstance, all the formula related variables should be initialized.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RegisterIntoFormulaEngine(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Int32)">
            <summary>
            Register grid into formula engine.
            </summary>
            <param name="grid"></param>
            <param name="name"></param>
            <param name="sheetFamilyId"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.UnregisterFromFormulaEngine(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Unrigister old instance from formula engine
            </summary>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnSheetDeleting(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Removing deleted sheet parsed formulas from the ParsedFormula list. If not cleared, it will be maintained unnecessarily.
            </summary>
            <param name="sheetRef">Delete sheet key</param>
            <param name="spreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetCellReference(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32,System.Int32)">
            <summary>
            Get the Cell reference of the specified grid.
            </summary>
            <param name="grid"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetSheetToken(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Boolean)">
            <summary>
            Get sheet token of the specified grid
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZipArchiveExt">
            <summary>
            Class for Open an excel file and convert its elements as list
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZipArchiveExt.XMLItems">
            <summary>
            Holds the collection of workbook and CalcChain xml.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZipArchiveExt.GetAllRelation">
            <summary>
            Read all the elements from excel and stored in list
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt">
            <summary>
            used for create a custom xml and stored formula cells index. For optimized parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt.SaveFormulaCellsInXML(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Save all the formula cells in XML list with sheet cell reference. When re-open the workbook by XlsIO this will help to get all the formula cells for parsing.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt.CreateXMLFile(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Xml.Linq.XElement)">
            <summary>
            Create an custom XML file in the XlsIO workbook. To get the formula cells only.
            </summary>
            <param name="formulaCells"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt.ReadCalcChainXMLElements(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.IO.Stream)">
            <summary>
            CalcChain.xml support not available in XlsIO. So we have maintained formula cells manually and stored as Custom.Xml.
            Whenever reopen by SfSpreadsheet, formula cells can read from Custom.xml.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="mStream"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.DrawRichText(System.Windows.Media.DrawingContext,System.Windows.Rect,System.Windows.Documents.FlowDocument,Syncfusion.XlsIO.IStyle)">
            <summary>
            Draw the richtextbox based on the richtextbox converted to visual brush.
            </summary>
            <param name="dc"></param>
            <param name="rc"></param>
            <param name="document"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.GetVisualBrush(System.Windows.Size,System.Windows.Documents.FlowDocument,Syncfusion.XlsIO.IStyle)">
            <summary>
            convert the richtextbox to visualbrush to draw the richtextbox cell.
            </summary>
            <param name="size">cell rect size</param>
            <param name="fd">flowdocument</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.ConvertRunToIFont(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Windows.Documents.Run,Syncfusion.XlsIO.IFont)">
            <summary>
            ConvertRunToIFont() method converts the formatting from Run to IFont. 
            </summary>
            <param name="run"></param>
            <param name="fontstyle"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.ApplyPreviewInputTextFormat(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IRichTextString)">
            <summary>
            Set the preview text when edit the richtext.
            </summary>
            <param name="text"></param>
            <param name="richText"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.ConvertRichTextToFlowDocument(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRichTextString)">
            <summary>
            Create the flowdocument from the richtext of required content.
            </summary>
            <param name="grid">active grid</param>
            <param name="excelstyle">IStyle of current excelrange</param>
            <param name="richText">richtextstring</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.AppendFormat(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IFont,System.Windows.Documents.Run)">
            <summary>
            This method returns <param name="run"/> which append the next character when both have same font format. 
            </summary>
            <param name="charfont"></param>
            <param name="run"></param>
            <param name="isnewline">If the character falls in new line set True, other wise False.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventHandler">
            <summary>
            Deleagte handler for QueryRange Event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs">
            <summary>
            Class which holds the properties of the QueryRange event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.Cell">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/> of the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.CellValue">
            <summary>
            Gets or sets the CellValue
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.CellType">
            <summary>
            Gets or sets the type of the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.Worksheet">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.ExcelRange">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IRange"/> of the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.ExcelStyle">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.XlsIO.IStyle"/> of the cell
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventHandler">
            <summary>
            Delegate handler for WorkbookCreating event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs">
            <summary>
            Class which holds the properties of WorkbookCreating event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs.SheetCount">
            <summary>
            Determines the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> count of the workbook.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventHandler">
            <summary>
            Delegate handler for WorksheetRemoving event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs">
            <summary>
            Class which holds the properties of WorksheetRemoving event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs.SheetName">
            <summary>
            Name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that going to be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs.Cancel">
            <summary>
            Determines whether to stop removing the sheet or else proceed further to remove the sheet.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventHandler">
            <summary>
            Delegate handler for WorksheetRemoved event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs">
            <summary>
            Class which holds the properties of WorksheetRemoved event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs.SheetName">
            <summary>
            Name of removed <see cref="T:Syncfusion.XlsIO.IWorksheet"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventHandler">
            <summary>
            Delegate handler for WorksheetAdding event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs">
            <summary>
            Class which holds the properties of WorksheetAdding event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs.SheetName">
            <summary>
            Name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that going to be added.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs.Cancel">
            <summary>
            Determines whether to stop adding the sheet or else proceed further to add the sheet.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventHandler">
            <summary>
            Delegate handler for WorksheetAdded event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs">
            <summary>
            Class which holds the properties of WorksheetAdded event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs.SheetName">
            <summary>
            Name of newly added <see cref="T:Syncfusion.XlsIO.IWorksheet"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventHandler">
            <summary>
            Delegate handler for WorkbookLoaded event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs">
            <summary>
            Class which holds the properties of WorkbookLoaded event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs.Workbook">
            <summary>
            Loaded Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs.GridCollection">
            <summary>
            Spreadsheet Grid Collection
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventHandler">
            <summary>
            Delegate handler for WorkbookUnloaded event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">
            <summary>
            Class which holds the properties of WorkbookUnloaded event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.Workbook">
            <summary>
            Loaded Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.GridCollection">
            <summary>
            Spreadsheet Grid Collection
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger">
            <summary>
            Specifies the zoom trigger options.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventHandler">
            <summary>
            Delegate handler for ZoomFactorChanging event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">
            <summary>
            Class which holds the properties of ZoomFactorChanging event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.SheetName">
            <summary>
            Name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that going to be zoom in or out.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.ZoomFactor">
            <summary>
            Gets the zoom factor.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.ZoomTrigger">
            <summary>
            Specifies what triggers the zoom factor changing.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventHandler">
            <summary>
            Delegate handler for ZoomFactorChanged event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">
            <summary>
            Class which holds the properties of ZoomFactorChanged event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.SheetName">
            <summary>
            Name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that going to be zoom in or out.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.ZoomFactor">
            <summary>
            Gets the zoom factor.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.ZoomTrigger">
            <summary>
            Specifies what triggers the zoom factor changing.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs">
            <summary>
            Provides data for the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CommandExecuted"/> and <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CommandExecuting"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommandExecutionEventArgs class with the command name 
            </summary>
            <param name="commandName">Command Name</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs.CommandName">
            <summary>
            Gets or sets the name of the command 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CommandExecuted"/> and <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CommandExecuting"/> events. 
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">A <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CommandExecutionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper">
            <summary>
            Helper class to Convert Grid range to excel range, and excel range to grid range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertToGlobalWorkbookRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Convert the GridRange To workbook range (Address Global = "'Sheet1'!$A$1")
            </summary>
            <param name="range">GridRangeInfo</param>
            <param name="grid"></param>
            <returns>string - Global Address</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(Syncfusion.XlsIO.IRange)">
            <summary>
            Covert the ExcelRange to the corresponding Grid Range
            </summary>
            <param name="range">Excel Range to be converted as Grid Range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Convert the ExcelRange to the corresponding Grid Range, if whole columns, rows or cells.
            </summary>
            <param name="range">Excel Range to be converted as Grid Range</param>
            <param name="grid">Active Grid, for check whole column or rows are selected.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(System.String)">
            <summary>
            Convert to excel range from the range as string.
            </summary>
            <param name="range">excel range by string</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.RowIndex(System.String)">
            <summary>
            Parse the rowIndex.
            </summary>
            <param name="s">row index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ColumnIndex(System.String)">
            <summary>
            Parse the column index
            </summary>
            <param name="s">column index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertGridRangeToExcelRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Converts the GridRange to the corresponding Excel Range
            </summary>
            <param name="gridRangeInfo">Grid Range to be converted as ExcelRange</param>
            <param name="grid">Active Grid</param>
            <returns>Excel Range as string value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.IsRangeContainsHyperlink(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Check whether the hyperlink present in the ranges or not.
            </summary>
            <param name="selectedranges"></param>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.IsRangeContainsComment(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Check whether the comments present in the ranges or not.
            </summary>
            <param name="range"></param>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.GetExpandRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Gets the Expanded range when the column/row/table is selected
            </summary>
            <param name="range">Range to be expanded</param>
            <param name="grid">Current Grid</param>
            <returns>Expanded range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.GetConditionalFormats(Syncfusion.XlsIO.IRange)">
            <summary>
            Get the conditional formats from the range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.GetCellValue(Syncfusion.XlsIO.IRange)">
            <summary>
            Get the cell value
            </summary>
            <param name="excelRange">Excel range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.UpdateRowHeight(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            To autofit a cell if it contains wrap text
            </summary>
            <param name="range">range</param>
            <param name="grid">active grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanSelectUnLockedCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Select Unlocked cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanSelectLockedCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is select locked cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanFormatRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanFormatColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanFormatCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanDeleteRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Delete rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanDeleteColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Delete columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanInsertRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Insert rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanInsertColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Insert columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanEditObjects(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Edit objects
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanInsertHyperlink(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Returns True when protect sheet option is insert hyperlink and and cell should be unlocked.
            </summary>
            <param name="sheet"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.MeasureText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Double,System.Boolean,System.Int32,System.Object@)">
            <summary>
            Measures the size of the text using either FormattedText or GlyphRun.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="text">Text which size is to be measured</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="cellWidth">Width of the cell</param>
            <param name="wraptext">True, if text is wrapped in a cell</param>
            <param name="lineCount">If text is wrapped, maximum possible line count</param>
            <param name="textElement">Returns the TextElement(GlyphRun or FormattedText) which used to measure</param>
            <returns>Size of the text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.MeasureTextUsingFormattedText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IStyle,System.Double,System.Boolean,System.Int32,System.Object@)">
            <summary>
            Measures the size of the text using FormattedText.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="text">Text which size is to be measured</param>
            <param name="excelStyle">IStyle of the cell</param>
            <param name="cellWidth">Width of the cell</param>
            <param name="wraptext">True, if text is wrapped in a cell</param>
            <param name="lineCount">If text is wrapped, maximum possible line count</param>
            <param name="textElement">Returns the TextElement(FormattedText) which used to measure</param>
            <returns>Size of the text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.MeasureTextUsingGlyphs(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IStyle,System.Boolean@,System.Object@)">
            <summary>
            Measures the size of the text using GlyphRun which is faster than FormattedText.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="text">Text which size is to be measured</param>
            <param name="excelStyle">IStyle of the cell</param>
            <param name="isCalculated">True, if size is calculated</param>
            <param name="textElement">Returns the TextElement(FormattedText) which used to measure</param>
            <returns>Size of the text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.DrawText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draw the text using GlyphRun or FormattedText based on the style and text.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="rowcolIndex">RowColumnIndex</param>
            <param name="dc">DrawingContext where the text is to be drawn</param>
            <param name="cellRect">Rect of the cell</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="textElement">TextElement(GlyphRun or FormattedText), if already got while measuring the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.DrawFormattedText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draw the text using FormattedText
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="rowcolIndex">RowColumnIndex</param>
            <param name="dc">DrawingContext where the text is to be drawn</param>
            <param name="cellRect">Rect of the cell</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="textElement">TextElement(FormattedText), if already got while measuring the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.DrawGlyphs(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draw the text using GlyphRun, which is faster than DrawFormattedText.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="rowcolIndex">RowColumnIndex</param>
            <param name="dc">DrawingContext where the text is to be drawn</param>
            <param name="cellRect">Rect of the cell</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="textElement">TextElement(GlyphRun), if already got while measuring the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.ConvertExcelHorizontalAlignment(Syncfusion.XlsIO.ExcelHAlign)">
            <summary>
            Converts ExcelHAlign into TextAlignment.
            </summary>
            <param name="excelHAlign"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetTypefaceFromExcel(Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the Typeface from font properties in the provided IStyle
            </summary>
            <param name="excelStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetTextDecorationsFromExcel(Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the TextDecorationCollection from the IStyle. 
            </summary>
            <param name="excelStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.CreateFormattedText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IStyle,System.Double@)">
            <summary>
            Creates the FormattedText
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.AddTextMargin(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Used to adjust the cellRect based on margin.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetFontLineHeightValue(System.Windows.Media.FontFamily,System.Double)">
            <summary>
            Used to get the lineheight of the font.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.ApplyTextOrientation(System.Double,System.Double,System.Double)">
            <summary>
            Apply the text orientation based on horizontal and vertical alignment
            </summary>
            <param name="excelStyle">excel Style from XlsIO</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextXPosition(System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Windows.TextAlignment,System.Double,System.Double,System.Double@)">
            <summary>
            Get the rotated text X position for Glyphs
            </summary>
            <param name="cellRect">Cell rect</param>
            <param name="column">Current column</param>
            <param name="textAlign">Horizantal alignment</param>
            <param name="adjustedLineHeight">Text line height</param>
            <param name="textWidth">Text width</param>
            <param name="xPos">Adjusted X position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextYPosition(System.Windows.Rect,Syncfusion.XlsIO.IStyle,System.Windows.VerticalAlignment,System.Double,System.Double,System.Double@)">
            <summary>
            Get the rotated text Y position for Glyphs
            </summary>
            <param name="cellRect">Cell Rect</param>
            <param name="column">Current Column</param>
            <param name="excelAlign">Vertical Alignment</param>
            <param name="adjustedLineHeight">Text line height</param>
            <param name="textWidth">Text width</param>
            <param name="yPos">Adjusted Y position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextXPosition(System.Windows.Media.FormattedText,Syncfusion.XlsIO.IStyle,System.Windows.Rect,System.Windows.TextAlignment,System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Get the rotated text X position for FormattedText.
            </summary>
            <param name="excelStyle">Excel Style from XlsIO</param>
            <param name="cellRect">Cell Rect</param>
            <param name="textAlign">Horizontal alignment</param>
            <param name="width">Text width</param>
            <param name="fontSize">Font size</param>
            <param name="lineHeight">Text line height</param>
            <param name="xPos">X position for draw rotated text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextYPosition(System.Windows.Media.FormattedText,Syncfusion.XlsIO.IStyle,System.Windows.Rect,System.Double,System.Double,System.Windows.VerticalAlignment,System.Double,System.Double@)">
            <summary>
            Get the rotated text Y position for FormattedText.
            </summary>
            <param name="excelStyle">Excel style from XlsIO</param>
            <param name="cellRect">Cell rect</param>
            <param name="lineHeight">Text line height</param>
            <param name="width">Text width</param>
            <param name="excelVAlign">Vertical Alignment</param>
            <param name="fontSize">Font size</param>
            <param name="yPos">Y position for draw rotated text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetFontSize(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the font size which is adjusted based on zoom.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetDisplayText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Windows.Size)">
            <summary>
            Used to convert the formula error, datetime or number value into exponential format or replace
            its all character with "#" to fit the displaytext into cellsize.
            </summary>
            <param name="grid"></param>
            <param name="column"></param>
            <param name="cellSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.CanRotateText(Syncfusion.XlsIO.IStyle,System.Double@)">
            <summary>
            Can rotate the text based on orientation
            </summary>
            <param name="excelStyle">Excel style from XlsIO</param>
            <param name="angle">No need to rotate the text if angle is 0 otherwise must rotate the text</param>
            <returns>Rotate the text if true else not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotatedTextSize(Syncfusion.XlsIO.IStyle,System.Windows.Size,System.Boolean)">
            <summary>
            Get the rotated text width
            </summary>
            <param name="excelStyle">Excel style from XlsIO</param>
            <param name="textSize">Measured text size</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper">
            <summary>
            TableFormats are applied based on the specific table style type such as lighttablestyles,darktablestyles,mediumtablestyles.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ClearStyles(Syncfusion.XlsIO.IStyle)">
            <summary>
            Clear the existing table style before apply the new table style.
            </summary>
            <param name="TableStyle">Where we have maintain the table format style</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableHeaderStyle(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell for excel version 2013.
            </summary>
            <param name="table">The Table.</param>
            <param name="excelStyle">The CellStyle from XlsIO range.</param>
            <param name="excelRange">current excel range</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableHeaderStyle1(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell for Excel Version below 2013.
            </summary>
            <param name="table">The Table.</param>
            <param name="excelStyle">The CellStyle from XlsIO range.</param>
            <param name="excelRange">current excel range</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentStyle(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Table format content styles such as table format background,border applied based on associeated table format name.
            </summary>
            <param name="table">IListObject from the XlsIO.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">Current XlsIO cell range</param>
            <param name="tablestyle">TableFormatStyle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentBorders(Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IListObject,System.Int32)">
            <summary>
            Apply the table content borders based on the table style name and border style was changed in different cases such
            banded rows,banded columns,first column,last column.
            </summary>
            <param name="tableStyle">where we have maintain the table style based on the table style name.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">XlsIO cell range.</param>
            <param name="table">list object from the xlsio</param>
            <param name="row">used whether it is even or odd.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentBorders1(Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IListObject,System.Int32)">
            <summary>
            Apply the table content borders based on the table style name and border style was changed in different cases such
            banded rows,banded columns,first column,last column.
            </summary>
            <param name="tableStyle">where we have maintain the table style based on the table style name.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">XlsIO cell range.</param>
            <param name="table">list object from the xlsio</param>
            <param name="row">used whether it is even or odd.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentForeground(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground for Excel version 2013.
            </summary>
            <param name="tablestyle">Table style name like in MSExcel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentForeground1(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground  for Excel version below 2010.
            </summary>
            <param name="tablestyle">Table style name like in MSExcel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentBackGround(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content background for Excel version 2013.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="headerBackgroundColor">Color for the header background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentBackGround1(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content background for Excel version below 2010.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="headerBackgroundColor">Color for the header background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.ApplyHighlightedCellsRules(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IConditionalFormat,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean@,System.Boolean@)">
            <summary>
            Render the hightlighted cell rules conditional formatting.
            </summary>
            <param name="value">Cell value</param>
            <param name="excelConditionalFormat">Excel conditional formats for hightlighted rules</param>
            <param name="address">Its indicates the conditional formatting range</param>
            <param name="isBackgroundApplied">If true, background is applied for the cell</param>
            <param name="isStyleApplied">If true, the excel style is already is created.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.ApplyColorScales(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IColorScale,System.String,System.String,System.Boolean@)">
            <summary>
            Apply the color scales based on getting IColorScale from XlsIO.
            </summary>
            <param name="column">Current column</param>
            <param name="colorScale">Color Scale object from XlsIO</param>
            <param name="value">Cell value</param>
            <param name="formatRange">The selected range for conditional formats</param>
            <param name="isStyleApplied">If True, ExcelStyle is applied</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetVisualBrush(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.Double)">
            <summary>
            Get the visual brush for icon sets.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon Set object</param>
            <param name="formatRange">Icon Sets format range</param>
            <param name="cellValue">Current cell value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetVisualBrushOnReverseOrder(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.Double)">
            <summary>
            Gete the visual brush for the icons Sets reverse order.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon Set object</param>
            <param name="formatRange">Icon Sets format range</param>
            <param name="cellValue">Current cell value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetDataBar(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IDataBar@,System.String@)">
            <summary>
            Get the dataBar.
            </summary>
            <param name="dataBarFormats">collection of databars formats</param>
            <param name="address">databar format ranges</param>
            <param name="dataBar">data bar object</param>
            <param name="dataBarRange">databar range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSets(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IIconSet@,System.String@)">
            <summary>
            Get the IconSets
            </summary>
            <param name="iconSetFormats">Collection of iconsets formats</param>
            <param name="address">iconset format ranges</param>
            <param name="iconSets">icon sets object</param>
            <param name="iconSetsRange">icon sets range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetColorScales(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IColorScale@,System.String@)">
            <summary>
            Get the ColorScales
            </summary>
            <param name="colorScalesFormats">Collection of color scales formats</param>
            <param name="address">Color scales format ranges</param>
            <param name="colorScales">color scale object</param>
            <param name="colorScaleRange">color scales range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.UpdateExcelStyle(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the excel Style from ExcelRange.CellStyle if ExcelStyle is null and ExcelRange.HasStyle. Otherwise create the detault style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSetIcon(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.String)">
            <summary>
            Get the iconset icon.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon set object</param>
            <param name="value">Current cell value</param>
            <param name="formatRange">Icon set format range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetCellValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,System.Double@)">
            <summary>
            Get the cell value double.
            </summary>
            <param name="value">Cell value</param>
            <param name="result">Return the double value if parsed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetPointValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IConditionValue,System.String,System.Double@)">
            <summary>
            Get the conditional value for different format types for conditional formats.
            </summary>
            <param name="column">Indicates the current column</param>
            <param name="condition">Conditional value for conditional format objects (DataBar, IconSets, ColorScales)</param>
            <param name="range">Indicates the selected range for conditional format</param>
            <param name="result">Returns the value if present in the condition object. Otherwise returns 0</param>
            <returns>Returns true if value present in the condition object otherwise returns false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetMinValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Double@)">
            <summary>
            Get the min value from the selected range for conditional formats
            </summary>
            <param name="spreadsheetGrid">SpreadsheetGrid</param>
            <param name="range">Indicates the selected range</param>
            <param name="result">Returns the min value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetMaxValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Double@)">
            <summary>
            Get the max value from the selected range for conditional formats
            </summary>
            <param name="spreadsheetGrid">SpreadsheetGrid</param>
            <param name="range">Indicates the selected range</param>
            <param name="result">Returns the max value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateColorScaleColor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IColorScale,System.Double)">
            <summary>
            Evaluate the color scales color
            </summary>
            <param name="column">Current SpreadsheetColumn</param>
            <param name="range">Indicates the format range when selected</param>
            <param name="colorScale">Color Scale object from XlsIO</param>
            <param name="cellValue">Cell value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetGradientColor(System.Double,Syncfusion.XlsIO.IDataBar,System.Boolean)">
            <summary>
            Get the gradient color for DataBar
            </summary>
            <param name="axisBarPosition">Which indicates the negative bar axis position</param>
            <param name="dataBar"></param>
            <param name="isNegativeBar">Indicates whether its negative bar or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateDataBarLength(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IDataBar,System.Double,System.Windows.Rect,System.String,System.Double@,System.Boolean@)">
            <summary>
            Evaluate the data bar length based on min and max value by format types
            </summary>
            <param name="dataBar"></param>
            <param name="value">Its denote cell value.</param>
            <param name="dataBarRect">Indicates the cell rect</param>
            <param name="axisBarPosition">Which indicates the negative bar axis position</param>
            <param name="isNegativeBar">Indicates whether its negative bar or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.ResetFormattingRangeMinMaxValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Reset the max and min value of formatting range. Because while cell value changed need to updated max or min based on updated value, so reset it and which is calculated in EvaluateDataBarLength
            </summary>
            <param name="formatRange">Which indicates selected cells range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSetConditionValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IConditionValue,System.String,System.Boolean@)">
            <summary>
            Get the condition value and check the operator of condition
            </summary>
            <param name="column">Current column</param>
            <param name="condition">Icon Set condition</param>
            <param name="formatRange">Icon set format range</param>
            <param name="isGreaterThan">If true, the operator is greaterThan, else greater than equalto</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateColor(System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Evaluate the color for color scales.
            </summary>
            <param name="cellValue">Indicates the cell value</param>
            <param name="minValue">Indicates the min value in the selected range</param>
            <param name="maxValue">Indicates the max value in the selected range</param>
            <param name="lowestColor">Indicates the loweset color that applied for color scales range</param>
            <param name="highestColor">Indicates the highest color that applied for color scales range</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand">
            <summary>
            Class for memory transactions of HistoryAutofitColumnCommand
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand">
            <summary>
            A class that encapsulates a command to be executed at a later point in time.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)"/> method is overriden in specialized command classes and
            performs the command that is saved in this command.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase">
            <summary>
            An abstract class that encapsulates a command to be executed at a later point in time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the command this object represents.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Description">
            <summary>
            Get a description for the command.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Range">
            <summary>
            Gets/Sets the specified excel range for performing undo/redo action
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet">
            <summary>
            Gets/Sets the Owner
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand"/> and associates it with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.Pop(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.SetDescription(System.String)">
            <summary>
            Changes the description of this command.
            </summary>
            <param name="value">The new description text.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Boolean)">
            <summary>
            Initialize HistoryAutofitColumnCommand
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="isAutofit"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand">
            <summary>
            Class for memory transactions of HistoryAutofitColumnCommand
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Boolean)">
            <summary>
            Initialize HistoryAutofitColumnCommand
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="isAutofit"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.IsAutofit">
            <summary>
            Gets or sets whether is auto fit row or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.OldHeight">
            <summary>
            Holds the row height for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.IsBadFontHeight">
            <summary>
            Gets or sets the whether the height of the row has changed or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand">
            <summary>
            Class for memory transactions of Bold
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize Bold command
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand.IsBold">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand">
            <summary>
            Class for memory transactions of Borders
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initilize BorderStyle command
            </summary>
            <param name="range">Source Range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.TopBorderColor">
            <summary>
            Holds the value of the TopBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.LeftBorderColor">
            <summary>
            Holds the value of the LeftBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.RightBorderColor">
            <summary>
            Holds the value of the RightBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.BottomBorderColor">
            <summary>
            Holds the value of the BottomBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.RightBorderStyle">
            <summary>
            Holds the Value of the RightBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.BottomBorderStyle">
            <summary>
            Holds the Value of the BottomBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.LeftBorderStyle">
            <summary>
            Holds the Value of the LeftBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.TopBorderStyle">
            <summary>
            Holds the Value of the TopBorderStyle for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand">
            <summary>
            Class for memory transactions of CellCommentCommand
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the CellCommentCommand
            </summary>
            <param name="range"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CellComment">
            <summary>
            Holds the value of the Cell comment for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CommentText">
            <summary>
            Holds the current comment text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CommentWidth">
            <summary>
            Holds the value of the width of the comment window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CommentHeight">
            <summary>
            Holds the value of the height of the comment window
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand">
            <summary>
            Class for memory transactions of CellValueCommand. CellValueChanged has been stored in this command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String,System.String)">
            <summary>
            Initialize for CellValueCommand
            </summary>
            <param name="range">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="parsedFormula">Parsedformula</param>
            <param name="cellRef"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.OldValue">
            <summary>
            Holds the current text for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.ParsedFormula">
            <summary>
            Holds the Parsed formula for reuse
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.CellRef">
            <summary>
            Holds the value CellRef.It contains => sheet+CellIndex.Its used for addding/removing the parsed formula from list.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand">
            <summary>
            Class for memory transactions of HistoryClearCommand.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryClearCommand
            </summary>
            <param name="sourceRange">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand">
            <summary>
            Class for memory transactions of HistoryClipBoardCommand.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryClipBoardCommand
            </summary>
            <param name="sourceRange">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryClipBoardCommand
            </summary>
            <param name="sourceRange">Copied excel range</param>
            <param name="destinationRange">Pasted excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.GridRange">
            <summary>
            Holds the value of the Source grid range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.DestinationGridRange">
            <summary>
            Holds the value of the destination grid range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.DestinationRange">
            <summary>
            Holds the vlaue of the destination excel range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand">
            <summary>
            Class for memory transactions of RangeConditionalFormatCommand.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the RangeConditionalFormatCommand
            </summary>
            <param name="range"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateConditionalFormats">
            <summary>
            Update the conditional format transaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateHightlightCellsRules(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the highlight cells rules properties to XlsIO.
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateDataBars(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the databar properties to XlsIO.
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateIconSets(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the IconSets properties to XlsIO
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateColorScales(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Set the color scales to XlsIO
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.ConditionalFormats">
            <summary>
            Store the conditional formats from the range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand">
            <summary>
            Class for memory transactions of HistoryCopyFillSeriesCommand.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryCopyFillSeriesCommand
            </summary>
            <param name="sourceRange">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand.GridRange">
            <summary>
            Holds the value of the Source grid range
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand">
            <summary>
             Class for memory transactions of HistoryDataValidationCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initilize DataValidation Command
            </summary>
            <param name="range"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.CloneValidationRule(Syncfusion.XlsIO.IDataValidation,Syncfusion.XlsIO.IDataValidation)">
            <summary>
            Clone validation rule
            </summary>
            <param name="sourceObject"></param>
            <param name="destinationObject"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.UpdateDataValidation">
            <summary>
            validation transaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.DataValidationWrapper">
            <summary>
            Holds the validation rule
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand">
            <summary>
            Class for memory transactions of StandardWidth
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize StandardWidth command
            </summary>
            <param name="range">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand.DefaultWidth">
            <summary>
            Gets/Sets the DefaultWidth value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand">
            <summary/>
             Class for memory transactions of HistoryDeleteCommand.
            <summary/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.RangeType">
            <summary>
            Holds the Range type for memory trasaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.GridRange">
            <summary>
            Holds the grid range for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand">
            <summary>
             Class for memory transactions of FontCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the font command.
            </summary>
            <param name="range">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.ExistingFontFamily">
            <summary>
            Holds the font family for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.ExistingFontSize">
            <summary>
            Holds the font size for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.ExistingForeColor">
            <summary>
            Holds the font color memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand">
            <summary>
             Class for memory transactions of HistoryFormatCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initilize for the HistoryFormatCommand.
            </summary>
            <param name="range">Specified excel range</param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.IndentLevel">
            <summary>
            Holds the value of the indent level for memory transaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.ExistingBackColor">
            <summary>
            Holds the value of the color for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand">
            <summary>
            Class for memory transactions of format table
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IRange,System.Boolean,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Initialize FormatTable command
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="isNewTable">InsertNewTable</param>
            <param name="builtInStyles">Table style</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.UpdateTableStyles(System.Boolean,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Store the table style for memory transaction
            </summary>
            <param name="isNewTable"></param>
            <param name="builtInStyles"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.IsNewTable">
            <summary>
            Gets/Sets the values to find isNewTable or not?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.RowIndex">
            <summary>
            Gets/Sets Row index of the specified excel range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.ColumnIndex">
            <summary>
            Gets/Sets the Col index of the specified excel range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.GridRanges">
            <summary>
            Gets/Sets the gird ranges of the specified grid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.BuiltInStyles">
             <summary>
            Applied table styles 
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand">
            <summary>
             Class for memory transactions of HistoryHAlignCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryHAlignCommand
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand.HorizontalAlignment">
            <summary>
            Holds the horizontal alignment for memory transaction.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize LockCell command
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand.IsHidden">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand">
            <summary>
             Class for memory transactions of HistoryHyperlinkCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize for the HistoryHyperlinkCommand.
            </summary>
            <param name="range"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.IsEmpty">
            <summary>
            Holds the value to find out the empty link or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.RowIndex">
            <summary>
            Gets/Sets the Row index of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.ColumnIndex">
            <summary>
            Gets/Sets the Col index of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.GridRanges">
            <summary>
            Grid ranges of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.Type">
            <summary>
            Gets/Sets the type of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.Address">
            <summary>
            Gets/Sets the hyperlink address
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.TextToDisplay">
            <summary>
            Gets/Sets the display text of the hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.IsEmptyCell">
            <summary>
            Gets/Sets the value to find out in empty cell or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand">
            <summary>
             Class for memory transactions of HistoryInsertCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize for the HistoryInsertCommand.
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Initialize for the InsertCommand.
            </summary>
            <param name="range">Specified excel range</param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="rangeType">Rnage type</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.Cell">
            <summary>
            Holds the value of the current cell for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.RangeType">
            <summary>
            Holds the value of the range type for transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.GridRange">
            <summary>
            Holds the GridRange for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand">
            <summary>
             Class for memory transactions of HistoryItalicCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryItalicCommand
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand.IsItalic">
            <summary>
            Holds the value of the italic for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager">
            <summary>
            This class manages undo and redo commands for a grid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager"/> and associates it 
            with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Pop(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Pop a command from respective stack and pushed.
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Push(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase)">
            <overload>
            Pushes a command onto the undo stack.
            </overload>
            <summary>
            Pushes a command onto the undo stack.
            </summary>
            <param name="cmd">The <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> with undo information.</param>
            <remarks>
            When the spredsheet performing an <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo"/>, the command will be pushed onto the redo stack. Otherwise, 
            commands are pushed onto the undo stack.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)">
            <summary>
            Starts a transaction that combines several subsequent commands into one transaction.
            </summary>
            <param name="s">A description for the transaction. This text can appear for example as "Undo" information in a menu 
            to give feedback to the user about command on the undo stack.
            </param>
            <remarks>
            is switched into a special mode where new commands will not be pushed onto the undo stack. Instead all new commands
            will be pushed into the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> instance. 
            <para/>
            When you call <see>
                <cref>CommitTrans</cref>
            </see>
                , the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/>  command will be pushed
            onto the undo stack and the <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                will switch back to its default behavior
            where new commands are pushed onto the undo stack.
            <para/>
            When you call <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/>, an internal counter will increase but no additional <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> is
            created. Only once you call <see>
                <cref>CommitTrans</cref>
            </see>
                as many times as you have called <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> will the
            transaction will be considered complete and the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> command will be pushed
            onto the undo stack.
            <para/>
            That means nested transactions are supported. But when you <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo"/> or <see>
                <cref>Rollback</cref>
            </see>
                a transaction,
            all nested transaction will be treated as one single transaction.
            </remarks> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.CommitTransaction">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> for discussion about transaction in a Spreadsheet.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.CommitTransaction(Syncfusion.XlsIO.IRange[])">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> for discussion about transaction in a SpreadsheetCommandStack.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.GetExcelRanges">
            <summary>
            Gets the excel ranges
            </summary>
            <returns />
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo">
            <summary>
            Execute the latest command from the undo stack.
            </summary>
            <remarks>
            The redo stack will be cleared.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Redo">
            <summary>
            Execute the latest command from the redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Poped the command form specified stack
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.OnkeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when keyDown on SpreadsheetGrid or VisualContainer
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.TransactionName">
            <summary>
            Gets the name of current transaction. If no transaction is in progress, then returns string.Empty. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.InTransaction">
            <summary>
            Gets/Sets the value to transcation mode.
            If group of the transaction pushed into stack, It should be in enable and initialize once all the commands pushed into stack.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Enabled">
            <summary>
            Gets/Sets the value to enabling the command stack. By default it has been in disabled mode.
            When enabled this, command actions are save in undo stack for memory transaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.SfSpreadsheet">
             <summary>
            Owner of the command stack
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.RedoStack">
            <summary>
            Gets the stack with redo commands.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.UndoStack">
            <summary>
            Gets the stack with undo commands.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode">
            <summary>
            Defines current undo logging context in the Spreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode.Undo">
            <summary>
            Spreadsheet is currently in process of undoing commands. <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode.Redo">
            <summary>
            Spreadsheet is currently in process of redoing commands. <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Redo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.IsValidRange(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Gets the value find out the specified row/column has been used or not?.
            </summary>
            <param name="worksheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns>If true , edited cell should push into stack</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.GetTab(System.String,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Gets the specified TabItem 
            </summary>
            <param name="name"></param>
            <param name="sfSpreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.OnDeletingRange(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Push delete commands into command stack
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.PushClipBoardCommands(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Push all the commands in memory stack for restore transaction.While handling CutCopyPaste, all the commands need to be restored when applying redo the trasaction.
            </summary>
            <param name="command"></param>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.OnRowColDeleting(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Push all the commands in memory stack for restore transaction.
            When handling delete row/column, all the commands need to be restored when applying redo the trasaction.
            </summary>
            <param name="command">Transaction Command</param>
            <param name="range">ExcelRange</param>
            <param name="rangeType">RangeType</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.UpdateGridSelectionFrame(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo},System.Int32,System.Int32)">
            <summary>
            Update Grid selection frame while performing undo/redo action
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid">specified grid</param>
            <param name="gridRanges">selected ranges</param>
            <param name="rowIndex">current cell row</param>
            <param name="columnIndex">current cell col</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.SelectionIsCurrentCell(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Check grid selection is current cell or not?.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.SetGridFocus(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Set focus to grid. When navigating from one sheet into another sheet, current grid can't be focused. So we have to set focus manually.
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid">Current grid</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand">
            <summary>
             Class for memory transactions of HistoryMergeCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo},System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo},Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initialize of the HistoryMergeCommand
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="existingConveredCells">ExistingConveredCells</param>
            <param name="coveredCells">CurrentCoverRanges</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.CoverdCells">
            <summary>
            Collection of the current cover ranges
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.ExistingConveredCells">
            <summary>
            Collection of the existing cover range of the specified range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.Grid">
            <summary>
            Grid of the specified action
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.SourceGrid">
            <summary>
            Parent Grid
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand">
            <summary>
             Class for memory transactions of NameRangeCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange,Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange)">
            <summary>
            Initilize for the NameRangeCommand
            </summary>
            <param name="range">Specified excel range</param>
            <param name="nameRange"></param>
            <param name="sfSpreadsheet">Owner</param>
            <param name="oldNameRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand">
            <summary>
             Class for memory transactions of HistoryNumberFormatCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the number format
            </summary>
            <param name="range"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand.NumberFormat">
            <summary>
            Holds the number format for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand">
            <summary>
            Class for memory transactions of HistoryOutlinesCommand
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize Outlines command
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.OutlineWrappers">
            <summary>
            Collection of outlines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.CopyOutlinesFromCollection(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Copy outlines from OutlineWrappers into worksheet OutlineWrappers.
            </summary>
            <param name="sheet"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.ClearOutlines(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Clear 
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines">
            <summary>
            Holds the value of the outlines
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines.Range">
            <summary>
            Specified range of the outline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines.GroupBy">
            <summary>
            Grouping mode of the outline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines.IsCollapsed">
            <summary>
            Collapsed state of the outline.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand">
            <summary>
             Class for memory transactions of HistoryResizeColumnCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the ResizeColumnCommand.
            </summary>
            <param name="range"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Executes memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand.ColumnWidth">
            <summary>
            Holds the value of the column width memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand">
            <summary>
             Class for memory transactions of HistoryResizeRowCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryResizeRowCommand.
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execcute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.RowHeight">
            <summary>
            Holds the row height for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.IsBadFontHeight">
            <summary>
            Gets or sets the whether the height of the row has changed or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand">
            <summary>
             Class for memory transactions of StyleCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand.CellStyle">
            <summary>
            Holds the cell style for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand">
            <summary>
            Holds a collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> objects that should all be executed together as one command
            when the <see>
                <cref>SpreadsheetCommandManager.Undo</cref>
            </see>
                or <see>
                    <cref>SpreadsheetCommandManager.Redo</cref>
                </see>
                of a grid <see>
                    <cref>SpreadsheetCommandManager.CommandStack</cref>
                </see>
                is called.
            </summary>
            <remarks>
            The <see>
                <cref>SpreadsheetCommandManager.BeginTrans</cref>
            </see>
                of a <see>
                    <cref>SpreadsheetCommandManager.CommandStack</cref>
                </see>
                object will create
            a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and redirect subsequent commands into the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object 
            until <see>
                <cref>SpreadsheetCommandManager.CommitTrans</cref>
            </see>
                is called.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IRange[],Syncfusion.UI.Xaml.CellGrid.GridCurrentCell)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                .
            </overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                .
            <param name="sfSpreadsheet"></param>
            <param name="ranges"></param>
            <param name="currentCell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                and sets a description text.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="description"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <override/>
            <summary>Executes the command.</summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Push(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase)">
            <summary>
            Adds a new command to the current transaction.
            </summary>
            <param name="cmd">The Command.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Peek">
            <summary>
            Returns a reference to the latest command in the stack and leaves the command on the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Pop(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Stack">
            <summary>
            Gets a reference to the stack with all commands that belong to this transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand">
            <summary>
             Class for memory transactions of HistoryUnderlineCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize for the HistoryUnderlineCommand.
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Exceute the memory transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand.IsUnderline">
            <summary>
            Holds the value of the underline for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand">
            <summary>
             Class for memory transactions of HistoryVAlignCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initilize of the HistoryVAlignCommand
            </summary>
            <param name="range">Specifed excdl range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction.
            </summary>
            <param name="mode">Execute mode</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand.VerticalAlignment">
            <summary>
            Holds the vertical alignment for memory transaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize LockCell command
            </summary>
            <param name="range">Source range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the trasaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand.IsLocked">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand">
            <summary>
             Class for memory transactions of HistoryOrientationCommand.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initialize of the HistoryItalicCommand
            </summary>
            <param name="range">Specifed excel range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the transaction
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand.RotationAngle">
            <summary>
            Holds the angle of the rotation for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText">
            <summary>
             Class for memory transactions of HistoryWrapText.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            initilize of the CommandStackWrapText.
            </summary>
            <param name="range">Specified range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.#ctor(System.Boolean,Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            initilize of the CommandStackWrapText.
            </summary>
            <param name="isWrapText">Value of the wrap text</param>
            <param name="range">Specified range</param>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Execute the memory transaction.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.IsWrapText">
            <summary>
            Holds the value of the wrap text
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.IndexToBoolConverter">
            <summary>
            Convert the String value to Bool Value
            </summary>
            <remarks>if the Value is not equal to "AnyValue" returns true else false</remarks>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.IndexToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.IndexToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToBoolConverter">
            <summary>
            To Convert the String value to Bool Value (i.e) if the Value is not equal to "Any Value" returns true else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityforMinValue">
            <summary>
            To Convert the String Value to Visibility for MinValue TextBox 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibiltyforMaxValue">
            <summary>
            To Convert the String value to Visibility for MaxValue TextBox
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataTypeToStringConverter">
            <summary>
            To Convert the ExcelDataType to String value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataValidationComparisonOperatorToStringConverter">
            <summary>
            To Convert ExcelDataValidationComparisonOperator to String value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.DateToStringConverter">
            <summary>
            Associates the value for converting into date or text of the binding object 
            </summary>
            <remarks> Converts 
            to <see cref="T:System.DateTime"/> or simple text based on the value.
            </remarks> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DateToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Invoked when the value changes from binding source to binding target
            </summary>
            <param name="value">The value from binding source</param>
            <param name="targetType">The type to convert to</param>
            <param name="parameter">The converter parameter to use</param>
            <param name="culture">The current culture</param>
            <returns>A Converted Value</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.DateToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" -->
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NullToStringConverter">
            <summary>
            Converts the null value to a specified text
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.BoolToVisibilityConverter">
            <summary>
            Associates the bool value for changing the visibility state of the binding object 
            </summary>
            <remarks> Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:System.Windows.Visibility"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Invoked when the value changes from binding source to binding target
            </summary>
            <param name="value">The value from binding source</param>
            <param name="targetType">The type to convert to</param>
            <param name="parameter">The converter parameter to use</param>
            <param name="culture">The current culture</param>
            <returns>A Converted Value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Invoked when the value changes from binding target to binding source
            </summary>
            <param name="value">The value from binding target</param>
            <param name="targetType">The type to convert to</param>
            <param name="parameter">The converter parameter to use </param>
            <param name="culture">The current culture</param>
            <returns>A converted value</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ColorConverter">
            <summary>
            Associates the value for converting the Color to SolidColorBrush
            </summary>
            <remarks> Converts <see cref="T:System.Windows.Media.Color"/> 
            to <see cref="T:System.Windows.Media.SolidColorBrush"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Invoked when the value changes from binding source to binding target
            </summary>
            <param name="value">The value from binding source</param>
            <param name="targetType">The type to convert to</param>
            <param name="parameter">The converter parameter to use</param>
            <param name="culture">The current culture</param>
            <returns>A Converted Value</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.ColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" -->
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.LeftAlignToBoolConverter">
            <summary>
            Associates the bool value for changing the left alignment of the binding object 
            </summary>
            <remarks> Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:Syncfusion.XlsIO.ExcelHAlign"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.LeftAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.LeftAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.RightAlignToBoolConverter">
            <summary>
            Associates the bool value for changing the right alignment of the binding object 
            </summary>
            <remarks> Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:Syncfusion.XlsIO.ExcelHAlign"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.RightAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.RightAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CenterAlignToBoolConverter">
            <summary>
            Associates the bool value for changing the center alignment of the binding object 
            </summary>
            <remarks> Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:Syncfusion.XlsIO.ExcelHAlign"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CenterAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Invoked when the value changes from binding source to binding target
            </summary>
            <param name="value">The value from binding source</param>
            <param name="targetType">The type to convert to</param>
            <param name="parameter">The converter parameter to use</param>
            <param name="culture">The current culture</param>
            <returns>A Converted Value</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.CenterAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" -->
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.TopAlignToBoolConverter">
            <summary>
            To Convert Top Alignment to Bool Value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.MiddleAlignToBoolConverter">
            <summary>
            Associates the bool value for changing the middle alignment of the binding object 
            </summary>
            <remarks> Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:Syncfusion.XlsIO.ExcelVAlign"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.MiddleAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.MiddleAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.BottomAlignToBoolConverter">
            <summary>
            Associates the bool value for changing the bottom alignment of the binding object 
            </summary>
            <remarks> Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:Syncfusion.XlsIO.ExcelVAlign"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BottomAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Invoked when the value changes from binding source to binding target
            </summary>
            <param name="value">The value from binding source</param>
            <param name="targetType">The type to convert to</param>
            <param name="parameter">The converter parameter to use</param>
            <param name="culture">The current culture</param>
            <returns>A Converted Value</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.BottomAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" -->
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.UnderlineToBoolConverter">
            <summary>
            To Convert Underline to Bool Value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NullToBoolConverter">
            <summary>
            Converts null value to bool value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ProtectSheetVisibleConverter">
            <summary>
            Associates the bool value for changing the visibility of the binding object when the sheet is protected
            </summary>
            <remarks>Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:System.Windows.Visibility"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ProtectSheetVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a bool value to the visibility mode. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ProtectSheetVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.UnProtectSheetVisibleConverter">
            <summary>
            To Set Visibility When Sheet in UnProtected
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToFontStyleConverter">
            <summary>
            Converts string to font style.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToFontWeightConverter">
            <summary>
            Converts the string to font weight.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.NumberFormatSourceProperty">
            <summary>
            Dependency Property as the backing store for NumberFormatSource
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontFamilyNamesProperty">
            <summary>
            DependencyProperty as the backing store for FontFamilyNames.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontSizeSourceProperty">
            <summary>
            Dependency Property as the backing store for FontSizeSource
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.MyDataContextProperty">
            <summary>
            Dependency Property as backing store for MyDataContext
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnMyDataContextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Indicates that the MyDataContext is changed
            </summary>
            <param name="dependencyObject">The Source</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnMyDataContextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            To wire And Unwire Events When MyDataContext is changed
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Wire(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            To Wire the Events that are to be used in SfSpreadsheet Control
            </summary>
            <param name="spreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UnWire(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            To UnWire Events that are Wired in SfSpreadsheet Control
            </summary>
            <param name="spreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnSpreadSheetPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event raised when the Excel Property is changed
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.CloseBackStage">
            <summary>
            To Close the BackStage that is opened
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.RibbonBackStageOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Backstage opening. 
            It should be cancel while datavalidation failed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateBorderSplitButton(System.String)">
            <summary>
            To update the last selected border in the Border Split Button
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateMergeAndCenter">
            <summary>
            Maintain the selection of merge and center option button in ribbon if the selected ranges intersects the merged cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateLockCell">
            <summary>
            Update the lock cell toggle button when current cell changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateOrientation">
            <summary>
            Update the orientation types of toggle button when current cell changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateRibbonItems(System.Boolean,System.Boolean)">
            <summary>
            Update the RibbonItems when edit, protect workbook or worksheet.
            </summary>
            <param name="isInProtection">If true, need to update for protect or unprotect workbook or worksheet else in cell editing or comment editing</param>
            <param name="enable">If true, Need to enable item else disable</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Dispose">
            <summary>
            Disposes the old instances that are maintained
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.NumberFormatSource">
            <summary>
            Gets or sets the collection of Number Formats to be used
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontFamilyNames">
            <summary>
            Gets or sets the collection of System installed Fonts
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontSizeSource">
            <summary>
            Gets or sets the collection of different font sizes to be used
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.SfSpreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.MyDataContext">
            <summary>
            Gets or sets the DataContext for the SfSpreadhsheetRibbon
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat">
            <summary>
            Represents a class which is for assigning number format to a cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat">NumberFormat</see> class. 
            </summary>
            <param name="name">Name of the number format</param>
            <param name="format">Value of the number format</param>
            <param name="imageuri">Image to be displayed</param>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.Name">
            <summary>
            Gets or sets the name of the number format.
            </summary>
            <value>A string that represents the number format name</value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.Format">
            <summary>
            Gets or sets the value of the number format.
            </summary>
            <value>A string that represents the number format value</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.ImageUri">
            <summary>
            Gets or sets the uri of the image to displayed as combobox item.
            </summary>
            <value>A string that represents the uri of the image</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Initialize the display value of combobox cell renderer.
            </summary>
            <param name="rowColumnIndex">initializing element rowindex and column index</param>
            <param name="uiElement">textblock</param>
            <param name="style">cellstyle</param>
            <param name="text">display text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ComboBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Initialize the edit element of combobox while loading in the grid.
            </summary>
            <param name="rowColumnIndex">edit element rowcolumnindex</param>
            <param name="uiElement">combobox</param>
            <param name="style">cellstyle</param>
            <param name="text">displaytext</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ComboBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the edit elements while scrolling the grid.
            </summary>
            <param name="cellRowColumnIndex">cellRowColumnIndex</param>
            <param name="uiElement">Combobox</param>
            <param name="style">cellstyle</param>
            <param name="text">display text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the display element while scrolling the grid.
            </summary>
            <param name="cellRowColumnIndex">cellRowColumnIndex of updating cell</param>
            <param name="uiElement">combobox</param>
            <param name="style">cellstyle</param>
            <param name="text">display text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnWireEditUIElement(System.Windows.Controls.ComboBox)">
            <summary>
            Hook the required editelement events from this method.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.ComboBox)">
            <summary>
            UnHook the required editelement events from this method.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnSaveChanges">
            <summary>
            save the modified text into the specified range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnWireEditUIElement(System.Windows.Controls.TextBox)">
            <summary>
            Hook the required editelement events from this method.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.TextBox)">
            <summary>
            UnHook the required editelement events from this method.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnSaveChanges">
            <summary>
            save the modified text into the specified range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnRender(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Richtextbox rendering operations are performed.
            </summary>
            <param name="cellRowColumnIndex">render cellrowcolumnindex</param>
            <param name="dc">drawingcontext</param>
            <param name="cellRect">rect of cell</param>
            <param name="column"></param>
            <param name="textElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            used to load the display element.
            </summary>
            <param name="rowColumnIndex"></param>
            <param name="uiElement"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            load the edit element
            </summary>
            <param name="rowColumnIndex">cell rowcolumnindex</param>
            <param name="uiElement">richtextbox</param>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the edit uielements 
            </summary>
            <param name="cellRowColumnIndex"></param>
            <param name="uiElement"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.GetControlValue">
            <summary>
            Gets the richtextbox control value as flowdocument.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnSaveChanges">
            <summary>
            save edited changes into xlsio by converting from flowdocument to richtextbox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.GetFormattedText(Syncfusion.XlsIO.IStyle)">
            <summary>
            Gets the text from richtextbox.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnWireEditUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Wire the edit uielement events.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Unwire the edit uielement events.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Load the edit element with previewtext.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handle the keys to perform the key operation.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.uiElement_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Method is used to set the Selection start since if the focus is set to a text box then the selection start moves to the first index
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn">
            <summary>
            Holds the information about each and every cell which are in view
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="grid"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateRenderer(System.String)">
            <summary>
            Used to update renderer based on the cell type.
            </summary>
            <param name="celltype"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateCellElement(System.Boolean)">
            <summary>
            Initializes or updates the cell element using appropriate cell renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.RenderBackground(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to draw the background color of the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.CheckWrapText">
            <summary>
            Helper method for check whether the floating cell height changed when apply the horizontal alignment to center and whether Alt+Enter pressed.
            Because if center alignment applied, then set the wrapping for further process happen like normal TextWrapping, when next or prev cell goes to out of view. 
            So that time no need to increase the height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.OnRender(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to render the text, background, etc. of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PointerReleased(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when pointer/mouse released over <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">Mouse or Pointer eventargs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PointerPressed(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer/mouse pressed on <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">Mouse or Pointer eventargs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PointerMoved(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer/mouse hover the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">Mouse or Pointer eventargs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.OnUpdateColumn(System.Windows.FrameworkElement@)">
            <summary>
            Update the column properties such as renderer, row index, column index, cell element etc.
            </summary>
            <param name="oldElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateCellBorders">
            <summary>
            Update the cell borders
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateFloatingCellBorders">
            <summary>
            Update the borders on floating cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateHeaderCellBorders">
            <summary>
            Used to update the selection highlighted borders on header cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyConditionalFormats(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Apply the conditional formatting
            </summary>
            <param name="drawingContext">Drawing context of the cell</param>
            <param name="cellRect">Current cell rect</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyDataBars(System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.XlsIO.IDataBar,System.String,System.String)">
            <summary>
            Apply the data bars for DataBar Conditional Formatting.
            </summary>
            <param name="drawingContext">Drawing context</param>
            <param name="cellRect">Indicates the cell rect</param>
            <param name="dataBar"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PushGuideLineSet(System.Windows.Media.DrawingContext,System.Windows.Rect,System.Double)">
            <summary>
            Helper method to solve the alising problem for border or line element
            </summary>
            <param name="drawingContext">Drawing context</param>
            <param name="cellRect">Indicates the cell rect</param>
            <param name="thickness">The thickness of the border.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyIconSets(Syncfusion.XlsIO.IIconSet,System.Windows.Media.DrawingContext,System.Windows.Rect,System.String,System.String)">
            <summary>
            Render the icon sets based on getting IIconSet from XlsIO
            </summary>
            <param name="iconSet">IIconSet from XlsIO</param>
            <param name="drawingContext"></param>
            <param name="value">Cell value</param>
            <param name="formatRange">The selected range for conditional formats</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateSparklines(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to update the sparklines
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyTableFormats">
            <summary>
            Excel like table formats operation are performed here with checking the XlsIO contains the List objects or not.
            If it contains the list objects then based on the table style we have applied the background color,Forground color
            and border in our spreadsheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyExcelStyle(Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange)">
            <summary>
            Apply the tableformat borders if the cell is table format cell and check whether the cell style does not contain the
            some other border style.Table borders only apply when the cell border style is none.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.EnsureFloatingCellSize(System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridColumn},System.Windows.Size,System.Int32)">
            <summary>
            Calculate the floating cell size
            </summary>
            <param name="elements"></param>
            <param name="cellSize"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.EnsureFloatingCellSizeOnEdit(System.String)">
            <summary>
            Calculate the floating cell size on editing
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetDisplayTextSize(System.String,System.Windows.Size,System.Boolean)">
            <summary>
            Calculate the display text size with help of MeasureText() based on cellsize
            And FloatingCellSize if FloatingCellSize is not an empty.
            </summary>
            <param name="text">Display text</param>
            <param name="cellSize">cell size</param>
            <param name="wrapText">true if textwrapping is applied else false</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.SetTextWrapping(System.Boolean)">
            <summary>
            Set and Reset the text wrapping while editing in floating cell
            </summary>
            <param name="setWrapText"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetTextWrapping">
            <summary>
            Get the textwrapping from style
            </summary>
            <returns>Returns true, if text is wrapped</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetTextAlignment">
            <summary>
            Helper methods to get the horizontal alignment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetCurrentCellRendererElement">
            <summary>
            Used to Get the CurrentCellRendererElement
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Dispose(System.Boolean)">
            <summary>
            Dispose the live instances.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Renderer">
            <summary>
            Gets or sets the cell renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ExcelRange">
            <summary>
            Gets or sets the appropriate <see cref="T:Syncfusion.XlsIO.IRange"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ExcelStyle">
            <summary>
            Gets or set the appropriate <see cref="T:Syncfusion.XlsIO.IStyle"/> which might be modified based on conditional formats, table formats, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasNumber">
            <summary>
            Determines whether the display text of the cell is numeric or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasDateTime">
            <summary>
            Determines whether the display text of the cell is datetime or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasError">
            <summary>
            Determines whether the display text of the cell is formula error or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Sparkline">
            <summary>
            Gets or sets the XlsIO's Sparkline of this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.SparklineGroup">
            <summary>
            Gets or sets the XlsIO's SparklineGroup of this cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell">
            <summary>
            Maintains  the CurrentCell of the Grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnProtectSheet">
            <summary>
            To enable/disable the selection of cell when sheet in protected mode
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnUnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            To render the selection after unprotecting the sheet.
            </summary>
            <param name="worksheet"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.CanMove(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)" -->
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.BeginEdit(System.Boolean)">
            <summary>
            Begins the editing of CurrentCell
            </summary>
            <param name="forceEdit">Set this true to avoid triggering events</param>
            <returns>Returns true, if current cell enters into edit mode</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.EndEdit(System.Boolean)">
            <summary>
            Finish the editing of CurrentCell
            </summary>
            <param name="canCommit">If true, commit the new changes otherwise revert to old value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.GetControlValue">
            <summary>
            Used to get the control value from renderer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetControlValue(System.Object)">
            <summary>
            Used to set the control value to renderer
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetFocus(System.Boolean)">
            <summary>
            Used to set the focus using renderer
            </summary>
            <param name="needToFocus">If true, set focus to edit element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Determines whether renderer handles key down or not.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.ResetCurrentCellState">
            <summary>
            Used to reset the current cell state of the renderer
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetCurrentCellState">
            <summary>
            Used to set the CurrentCellState of the Renderer
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetColumn(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Set the GridColumn of CurrentCell
            </summary>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnGraphicSelectionChanging">
            <summary>
            Ocucrs when selection occurs on GraphicCell
            </summary>
            <returns>Returns false, if selection handled by currentcell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Used to denotes the TextInput to renderer
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.MoveToLastUsedRange(System.Boolean)">
            <summary>
            Move current cell to last used range in a grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.HasCurrentCellState">
            <summary>
            Returns the current cell state of renderer
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.Column">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.Style">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IStyle"/> of Current cell.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.calculatedCells">
            <summary>
            Indentifying recalculated cells in RecalculateDependencyCells method to avoid re caclculation of calculated cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes given number of columns from the specified index.
            </summary>
            <param name="removeAtColumnIndex">The column index.</param>
            <param name="count">Number of columns to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of columns at the specified column index.
            </summary>
            <param name="insertAtColumnIndex">The column index to insert.</param>
            <param name="count">Number of columns to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts specified number of rows at the given row index.
            </summary>
            <param name="insertAtRowIndex">The row index to insert.</param>
            <param name="count">Number of rows to be inserted</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Deletes given number of rows from the specified index.
            </summary>
            <param name="removeAtRowIndex">The row index.</param>
            <param name="count">Number of rows to be removed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.Grid">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.FormulaEngine">
            <summary>
            Gets the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.FormulaEngine"/>
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.ColumnsRemoved">
            <summary>
            Occurs after a range of columns has been removed.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.ColumnsInserted">
            <summary>
            Occurs after a range of columns has been inserted.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RowsRemoved">
            <summary>
            Occurs when a range of rows is removed.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RowsInserted">
            <summary>
            Occurs after a range of rows has been inserted.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ZoomFactorProperty">
            <summary>
            Identifies the zoom dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetColumnWidthFromSheet(System.Int32)">
            <summary>
            Used to get the column width from worksheet by adjusting with the zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetRowHeightFromSheet(System.Int32)">
            <summary>
            Used to get the row height from worksheet by adjusting with the zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.AdjustColumnWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,System.Boolean)">
            <summary>
            Adjust the column width when cell has number or date time format values.
            </summary>
            <param name="column">current column</param>
            <param name="displayText">display text</param>
            <param name="excelStyle">Excel style, used for measure the size for adjust the column width. Because the excel style is set in OnUpdateColumn
            But this method will called before that method called So pass the excel style as parameter</param>
            <param name="hasNumber">true when cell value is number otherwise false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetExponentialFormatText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Get the formatted text in exponential format for number format.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.InvalidateConditionalFormats(Syncfusion.XlsIO.IRange)">
            <summary>
            Invalidate the range when conditional formatting has changed while edit.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.InvalidateSparklines(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Invalidate the Sparklines after editing when any of the Sparkline's DataRange contains this range .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SpreadsheetGrid_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> loaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCreateCopyPaste">
            <summary>
            To initialize the Spreadsheet Copy/Paste 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.AutoFitHeaderColumn">
            <summary>
            Helper method to fit the header column width to its content like Excel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ScrollRows_Changed(System.Object,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll rows changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ScrollColumns_Changed(System.Object,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll columns changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SetExcelLikeHeaders(Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs)">
            <summary>
            Modify the Style of header cells based on selection like Excel
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ShowOrHidePopup(System.Boolean)">
            <summary>
            Show or Hide the FillSeries, Paste and ContextMenu popup.
            </summary>
            <param name="show">If true the show the popup else hide it.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ProcessShortCutKeys(System.Windows.Input.KeyEventArgs)">
            <summary>
            Display the current date like Excel when press the (Ctrl+;) keys.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SetCellValue(Syncfusion.XlsIO.IRange,System.String)">
            <summary>
            Sets the value to the given range
            </summary>
            <param name="currentExcelRange">Range</param>
            <param name="cellValue">Value to be displayed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.DeleteValuesFromSelectedRanges">
            <summary>
            Helps to delete the value of cell in a selected ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ShowHidePopup(System.Boolean)">
            <summary>
            To show and hide popup's when moved to another application
            </summary>
            <param name="show">True, is show the popup</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCurrentCellValidating(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            Complete Datavalidation operation triggers from this overided OnCurrentCellValidating method
            </summary>
            <param name="e">CurrentCellValidatingEventArguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.UnWireEvents">
            <summary>
            Unwire the Grid events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.WireEvents">
            <summary>
            Wire the Grid events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCellRequestNavigateEvent(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Hyperlink cell request navigate event to provide support to navigation between different cells.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetDisplayText(System.Int32,System.Int32)">
            <summary>
            Used to get the display text of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell</param>
            <param name="colIndex">ColumnIndex of the cell</param>
            <returns>Returns the display text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetCellValue(System.Int32,System.Int32)">
            <summary>
            Used to get the value of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell</param>
            <param name="colIndex">ColumnIndex of the cell</param>
            <returns>Returns the cell value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CanPerformAutoScroll">
            <summary>
            Below code is used to Check whether Autro Scrolling can be performed or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetPointerDownRowColumnIndex">
            <summary>
            Used to get the pointer down rowcolumnindex by considering formularange selection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetPointerMoveRowColumnIndex">
            <summary>
            Used to get the pointer move rowcolumnindex, formularange selection considered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetActiveRange">
            <summary>
            Used to get the Active range, formularange selection considered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCellContextMenuOpening(Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs)">
            <summary>
            Customize the visibility of of items in the contextmenu
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.RefreshCellContextMenu">
            <summary>
            Set the visibility of all the contextmenu items as visible.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CurrentCell">
            <summary>
            Gets the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SheetName">
            <summary>
            Gets the tab sheet name
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GraphicModel">
            <summary>
            Gets the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GraphicModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Worksheet">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of the grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CellRenderers">
            <summary>
            Gets the CellRenderer collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FillSeriesController">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FillSeriesController"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ZoomFactor">
            <summary>
            Gets or sets the zoom factor. Value must be in range from 0.5 to 4.0.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Container">
            <summary>
            Gets or sets the visual container.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Spreadsheet">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GridConditionalFormats">
            <summary>
            Gets or sets the conditional formats.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.QueryRange">
            <summary>
            Occurs when grid queries for <see cref="T:Syncfusion.XlsIO.IRange"/> information about a specifc cell while rendering
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt">
            <summary>
            Represents the class which is used to maintain and remove the fillseries border selection   
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt">SelectionPanelExt</see> class. 
            </summary>
            <param name="name">Name of the panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt.RenderSelectedCells">
            <summary>
            Invoked inorder to draw the borders while fillSeries selection in SpreadsheetGrid
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt">SelectionPanelExt</see>.
            </summary>     
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt">
            <summary>
            Extension visual container for <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.manipulationOrigin">
            <summary>
            Used to store the manipulation origin when manipulation is started.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.#ctor">
            <summary>
            Creates an instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationStarting(System.Object,System.Windows.Input.ManipulationStartingEventArgs)">
            <summary>
            Occurs when manipulation is starting and used to set the manipulation container.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Occurs when manipulation started and used to set the manipulation mode for zooming.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationDelta(System.Object,System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Occurs when position changes during manipulation and used to perform the scale transform for zooming.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Occurs when manipulation is completed and used to set zoom factor of Grid from the scale of RenderTransform.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.CheckManipulationContainer(System.Windows.IInputElement)">
            <summary>
            Used to check whether the manipulation container is scrollowner or not.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.WireEvents">
            <summary>
            Wire the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.UnWireEvents">
            <summary>
            Unwire the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.InitializeChildPanels">
            <summary>
            Initialize and add child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.MeasureChildPanels(System.Windows.Size)">
            <summary>
            Measure the child panels.
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.ArrangeChildPanels(System.Windows.Rect)">
            <summary>
            Arrange the child panels.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.InvalidateMeasureInfo">
            <summary>
            Invalidates the GraphicsPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.CreateSelectionPanel">
            <summary>
            Creates the SelectionPanel
            </summary>
            <returns>SelectionPanelExt</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.MouseWheelDown">
            <summary>
            Occurs when mouse wheel down. Used to descrease the zoom factor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.MouseWheelUp">
            <summary>
            Occusrs on mouse wheel up and used to increase the zoom factor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.Dispose">
            <summary>
            Dispose the live instances.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.CreateFormulaRangePanel">
            <summary>
            Creates the SelectionPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.Grid">
            <summary>
            Gets the SpreadsheetGrid
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar">
            <summary>
            Represents the class which includes the implementation of NameBox, FormulaTextBox, EndEdit Button and CancelEdit Button.
            </summary>
            <remarks>
            <para>The Formula Bar is located above the worksheet area of the spreadsheet. The formula bar displays the data or formula stored in the active cell</para>
            <para>The Name Box is located next to the formula bar above the worksheet area. The Name Box normally displays the cell reference of the active cell.</para>
            <para>The EndEdit Button is used to enter the data and CancelEdit Button is used to delete the data.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.#ctor">
            <summary>
            Creates an instance
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.OnApplyTemplate">
            <summary>
            Builds the visual tree for the FormulaBar when a new template is applied
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.OnPointerReleased">
            <summary>
            Used to update the NameBox when the Pointer is Released
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.UpdateNameBox">
            <summary>
            Used to update the namebox text
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.SetNameBoxText(System.String)">
            <summary>
            Used to Set the NameBox Text
            </summary>
            <param name="text">Text to be displayed in the NameBox</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.GetNameBoxText">
            <summary>
            Used to get the Text entered in the NameBox
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.WireEvents">
            <summary>
            Hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.UnWireEvents">
            <summary>
            Unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.UpdateFormulaTextBoxBinding(System.Boolean)">
            <summary>
            Used to update the formula textbox binding
            </summary>
            <param name="isEditing"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.GetCellName(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the cellname for the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.AddSelection">
            <summary>
            Used to Add Selection using the Specified Text (i.e) Text entered in the NameBox
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.AddNamedRange(System.String,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Add the named range to the GridFormulaEngine and Workbook
            </summary>
            <param name="name">NamedRange Name</param>
            <param name="range">GridRangeInfo</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController">
            <summary>
            Represents the control of the Formula Range Selection in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.#ctor">
            <summary>
            Initializes a new instance of the FormulaRangeSelectionController class
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.lastSelectedRange">
            <summary>
            Used to maintain the last selected formula range
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isInSelection">
            <summary>
            Used to notify whether the Formula Range selection is in process
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isInKeyNavigation">
            <summary>
            Used to notify whether the key navigation is in process
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isInMove">
            <summary>
            Used to notify whether the Formula range drag selection is in process
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isCtrlKeyPressed">
            <summary>
            Used to Check whether the Control key is pressed or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.rText">
            <summary>
            Used to get the text to be set as rendered text while navigating grid
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.StartRowColumnIndex">
            <summary>
            Used to notify the Starting RowColumnIndex of the formula range
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.LastRowColumnIndex">
            <summary>
            Used to maintain the last selected RowColumnIndex of the formula range
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.FormulaRange">
            <summary>
            Used to update the current formula range while navigating through Shift + key navigation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ActiveGrid">
            <summary>
            Used to get information about the Active Grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the Pointer/Mouse Operations in SfSpreadsheet
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs"/> that contains the event data</param>
            <param name="rowcolIndex">Current Row and Column index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnUiElement_PointerPressed">
            <summary>
            Used to Notify that the Pointer pressed on UiElement
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnUiElementGotFocus">
            <summary>
            Used to notify that the UiElement got focus
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.SetEditingGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Sets the Editing Grid Where the Current Cell will be in Editing
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ActiveGridChanging(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Notify that the Active Grid is to be Changed
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ActiveGridChanged(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Notify that the Active Grid is Changed
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellValidating">
            <summary>
            Used to Notify the Current Cell is on Validating and Auto Correct formula if it is a formula cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellStartEditing">
            <summary>
            used to notify when the Current Cell Starts editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellEndEdit">
            <summary>
            Used to Nofify that the Current Cell Completes editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnTextChanged">
            <summary>
            Used to Notify When the CurrentCellRenderer Text is changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnFormulaBarLeftButtonDown">
            <summary>
            Used to Notify when the Formulabar is Clicked
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnFormulaBarKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Notify that the Key is pressed when the Formula Bar is in focus
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.CanSelectFormulaRange(System.String)">
            <summary>
            Determines whether the formula range selection need to be performed or not
            </summary>
            <param name="renderedText">Text in the current range</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key operations that are processed in SfSpreadsheet
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data. </param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnPointerPressed(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is pressed in SfSpreadsheet
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnPointerMoved(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is moved in SfSpreadsheet
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnPointerReleased(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is released in SfSpreadsheet
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessHeaderSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Extend the Header selection upto the given range of cells in SfSpreadsheet
            </summary>
            <param name="rowColIndex">RowColumn index where the selection is to be moved</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessShiftKeyNavigation(System.Windows.Input.KeyEventArgs)">
            <summary>
             Process the Shift Key Navigation in SfSpreadsheet
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessKeyNavigation(System.Windows.Input.KeyEventArgs)">
            <summary>
             Navigate or Select the formula ranges in SfSpreadsheet 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ParseRendererText(System.String)">
            <summary>
            Parse the Rendered Text and if the cells is a valid range then add it in the corresponding collection
            </summary>
            <param name="renderedText"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.SetRendererText(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Used to Set the CurrentCellRenderer Text
            </summary>
            <param name="gridRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.GetGridRange(System.String)">
            <summary>
            Used to get the Grid range from the string value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.GetParsedText(System.String)">
            <summary>
            Used to get the Parsed Text from the Rendered Text
            </summary>
            <param name="text">Rendered Text</param>
            <returns>returns string list which denotes the formula ranges of the Current Cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessAutoScrollFormulaRangeSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Below code is used to Process Auto Scroll when Formula Range Selection is Performed
            </summary>
            <param name="rowColIndex"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.CurrentCellRendererElement">
            <summary>
            Used to get the CurrentCell Renderer Element
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.AllowMouseSelection">
            <summary>
            Determines whether FormulaRange Selection is to be performed with Mouse or not
            </summary>
            <value>True or False</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.AllowSelectionOnEditing">
            <summary>
            Determines whether FormulaRange Selection need to be performed while editing
            </summary>
            <value>True or False</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.IsFormulaEditing">
            <summary>
            Determines whether the formula is in editing
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.CurrentFormulaRange">
            <summary>
            Used to update the currentFormulaRange while doing selection with mouse
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.BackToEditingGrid">
            <summary>
            Used to Notify that the Sheet is to be moved to the editing grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.IsInSheetReference">
            <summary>
            Used to notify that the Formula range selection is to be done with Sheet Reference
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.IsSheetNavigated">
            <summary>
            Used to indicated that the sheet is navigated
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.EnableKeyNavigation">
            <summary>
            Used to specify whether Key Navigation can be performed
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.EditingGrid">
            <summary>
            Used to get information about the Editing Grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.SelectedFormulaRanges">
            <summary>
            Gets or sets the collection of newly Selected formula ranges
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ExistingFormulaRanges">
            <summary>
            Gets or sets the collection of existing formula range of a cell
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel">
            <summary>
            Panel used for Displaying Formula Ranges in the Grid
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.NormalBorders">
            <summary>
            Contains the list of Normal Borders used in this panel to intimate the Selection with Colors
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.DottedBorders">
            <summary>
            Contains the list of Dotted borders used in this panel to intimate the Dotted border selection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Determines the size of the FormulaRangeSelection Panel
            </summary>
            <param name="availableSize">The size that the  panel can occupy</param>
            <returns>The desired size of FormulaRangeSelection Panel </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the FormulaRangeSelection panel in SfSpreadsheet
            </summary>
            <param name="finalSize">The final size which the panel used to arrange itself</param>
            <returns>The actual size used</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.EnsureFormulaRanges">
            <summary>
            used to ensure the Formula Range Elements used in this panel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.GetBorderBrush(System.Int32)">
            <summary>
            Gets the color of the border color to be used for intimating the Formula range selection
            </summary>
            <param name="index">position of the specified range in the current cell formula range. </param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.ActiveGrid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement">
            <summary>
            Represents a class that maintains the information about the borders in the FormulaRangeSelection
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Element">
            <summary>
            Border which is used to intimate the Formula Range Selection
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Range">
            <summary>
            Intimates the Formula Range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.IsEnsured">
            <summary>
            Gets or sets true if the Element is ensured else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel">
            <summary>
            Represents a panel which is used to position and arrange the grouped rows and columns
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel">OutlinesPanel</see> class. 
            </summary>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for
            child elements and determines a size for the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/>-derived class. 
            </summary>
            <param name="availableSize">The available size that this element can give to
            child elements. Infinity can be specified as a value to indicate that the
            element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its
            calculations of child element sizes.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a
            size for a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> derived class. 
            </summary>
            <param name="finalSize">The final area within the parent that this element
            should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the content of a <see cref="T:System.Windows.Media.DrawingContext"/>
            object during the render pass of a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> element. 
            </summary>
            <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext"/> object
            to draw.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.AddGroupingElements(Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper)">
            <summary>
            Used to Add the GroupButton as a Panel element
            </summary>
            <param name="outlineWrapper">Contains the Information about the Outline</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.AddOutlineLabelButtons(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Adds the Outline Label Buttons as Panel elements
            </summary>
            <param name="worksheetImpl"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Group(Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Method used to Add Grouping Elements, when Grouping/Ungrouping Operation is Performed
            </summary>
            <param name="GroupBy">Grouping Type either ByRows or ByColumns</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.InitializeGroupingElements(Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to Initialize the Grouping Elements, while importing or navigating to next sheet
            </summary>
            <param name="GroupBy">Grouping Types either ByRows or ByColumns</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.RefreshButtonState">
            <summary>
            Used to Refresh the Button State while Resizing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.UpdateGroupingState(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton)">
            <summary>
            Used to set the Grouping State for the SpreadsheetGroupButton
            </summary>
            <param name="button">The SpreadsheetGroupButton</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ConvertRangeToRect(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Method used to Convert the Specified range into Rect
            </summary>
            <param name="range">Range to be Converted as Rect</param>
            <returns>returns Rect for the Specified range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetLastRowHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the row height for the last row in the specified range if summary row below else
            gets the row height for the first row in the specified range
            </summary>
            <param name="IsSummaryRowBelow">indicates the page setup for the Active sheet</param>
            <param name="range"></param>
            <returns>returns the first/last row height</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetLastColumnWidth(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the column width for the last column in the specified range if summary column right else
            gets the column width for the first column in the specified range
            </summary>
            <param name="IsSummaryColumnRight">indicates the page setup for the active sheet</param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetButtonHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Gets the Button Height, used to check when the Group Buttons are to be displayed at the Top / Bottom corner of the screen
            </summary>
            <param name="GroupingRange"></param>
            <param name="IsSummaryRowBelow">Indicates the PageSetup of the Active Sheet</param>
            <param name="AdjacentRowHeight">indicates the next row height when summary row below else indicates previous row height</param>
            <returns>returns the button height</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetAdjacentRowHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the Adjacent Row Height
            </summary>
            <param name="IsSummaryRowBelow">PageSetup for Active sheet returns true if Row Details to be displayed below else false</param>
            <param name="range">Grouping range</param>
            <returns>returns the row height of the next row if Summary Row below else returns the row height
            of the previous row</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetAdjacentColumnWidth(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the Adjacent Column Width
            </summary>
            <param name="IsSummaryRowBelow">PageSetup for Active sheet returns true if Column Details to be displayed right else false </param>
            <param name="range">Grouping range</param>
            <returns>returns the next column width if Summary Column Right else returns the Previous Column width </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.SfSpreadsheet">
            <summary>
            Gets or sets the instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> control .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> </value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ActiveGrid">
            <summary>
            Gets or sets the instance of the active <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> which displays the data in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.IsSummaryRowBelow">
            <summary>
            Gets or sets the Page Setup of the Active sheet, if Summary Rows to be displayed below, returns true else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.IsSummaryColumnRight">
            <summary>
            Gets or sets the Page Setup of the Active sheet, if Summary Columns to be displayed Right, returns true else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Orientation">
            <summary>
            Gets or sets the orientation of the Grouping panel.
            </summary>
            <value>One of the <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GroupingOrientaion"/> enumeration that specifies the panel orientation</value>
            <remarks>The Orientation of the panel is either horizontal or vertical</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion">
            <summary>
            Defines the direction that specifies orientation for grouping panel
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion.Vertical">
            <summary>
            Vertical orientation of the grouping panel
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion.Horizontal">
            <summary>
            Horizontal orientation of the grouping panel 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton">
            <summary>
            Expander/Collapse buttons placed in the SpreasheetGroupPanel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton.OutlineWrapper">
            <summary>
            Contains information about Outline
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.DataValidation">
            <summary>
            DataValidation operation for spreadsheet was done in this class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.Validate(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Validating current cell data
            </summary>
            <param name="worksheet">Worksheet</param>
            <param name="currentCell">currentCell</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.FormulaDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Datavalidation support with formulas and cell references.
            </summary>
            <param name="currentCell"> Data validation applied cell</param>
            <param name="ExcelSheet">current excel sheet</param>
            <param name="args">currentcell validating event arguments</param>
            <param name="spreadsheet"> spreadsheet need to access formulaengine</param>
            <returns>boolean result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellIntegerDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Integer Data validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">Excelsheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellDecimalDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Decimal Validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.DisplayErrorMessage(Syncfusion.XlsIO.IDataValidation,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            DisplayErrorMessage while get invalid data
            </summary>
            <param name="validation">IDataValidation rule</param>
            <param name="currentCell">Current Cell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.SelectAll(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell)">
            <summary>
            select all the text on the datavalidation applied cells if the condition fails.
            </summary>
            <param name="currentCell">datavalidation applied cell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellDateDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Date validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">Excel sheet</param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellTextLengthDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            TextLength Validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellListValuesValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            List validation
            </summary>
            <param name="currentCell">CurrenCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.ValidateFormula(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Validate the formula if the cellvalue present in the list or not.
            </summary>
            <param name="currentCell">cerrentcell</param>
            <param name="formula">formula list</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet">
            <summary>
            SfSpreadsheet is a control for viewing, editing and creating Excel files.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.isDisposingInstance">
             <summary>
            Gets the state of the  Old instance disposing.
            When a hug workbook imported in Spreadsheet. Its formulas are parsing by background thread.
            When suddenly opened new workbook  or other workbook. Backgroup execution should be stopped.
            Suppose if missed, Thread will try to get the value for disposed workbook.
            The field should not be used for any other purpose.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectedTabIndexProperty">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ImportNamedRanges">
            <summary>
            Used to add the NamedRanegs in the Workbook in a collection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UpdateTabSheetName(System.String,System.String)">
            <summary>
            Update the sheet name to grid and worksheets in XlsIO if renamed.
            </summary>
            <param name="tabItem"></param>
            <param name="currentSheetName"></param>
            <param name="prevSheetName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CheckTabSheetNameExists(System.String,System.String)">
            <summary>
            Used to find the sheet name is already exists in worksheets.
            </summary>
            <param name="prevSheetName"></param>
            <param name="currentSheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetDefaultCellContextMenu">
            <summary>
            Create the context menu with the default items which needs to show.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetDefaultTabItemContextMenu">
            <summary>
            Gets the Default context menu items to be displayed
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.tab_ContextMenuOpening(System.Object,System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Event raised when Context Menu is to opened
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.ContextMenuEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.InitializeGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.ITabSheet,Syncfusion.Windows.Tools.Controls.TabItemExt)">
            <summary>
            Initializes the Grid with Default Row Count and Default Column count
            </summary>
            <param name="grid">Spreadhseet Grid to be Initialized</param>
            <param name="sheet">Sheet to be loaded in the grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshFormulaBarRowDefinition">
            <summary>
            To refresh the formula bar visibility whether to visible or hidden
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetDecryptedStream(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Convert encrypted stream into decrypted stream.
            ZipArchive can't open encrypted file. So we have decrypt it.
            </summary>
            <param name="encryptedWorkbook"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CreateCustomXML">
            <summary>
            CalcChain.xml support not available in XlsIO. So we have maintained formula cells manually and stored as Custom.Xml.
            Whenever specified workbook(Saved by XlsIO) open by SfSpreadsheet, formula cells can read from Custom.xml.
            FYI-> If the file opened by excel, it will create CalcChain.xml
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetNameRange(Syncfusion.XlsIO.IName)">
            <summary>
            Gets the NameRange object for specified name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RenameSheet(System.String)">
            <summary>
            Rename the specified sheet name
            </summary>
            <param name="name">name of the sheet to be renamed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AddSheet">
            <summary>
            Add a new sheet in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AddSheet(System.String,System.Int32)">
            <summary>
            Add the sheet at the given position
            </summary>
            <param name="name">name of the sheet</param>
            <param name="insertAt">index position where the sheet is to be inserted</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RemoveSheet(System.String)">
            <summary>
            Removes the Specified Sheet from the Workbook
            </summary>
            <param name="name">Name of the sheet to be removed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HideSheet(System.String)">
            <summary>
            Hides the specified sheet name
            </summary>
            <param name="name">name of the sheet to be Hided</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UnhideSheet(System.String)">
            <summary>
             Unhides the Specified sheet name
            </summary>
            <param name="name">name of the sheet to be unhided</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Create(System.Int32)">
            <summary>
            Loads a new workbook
            </summary>
            <param name="sheetCount">no of sheets to be present in the Workbook</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Open(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Loads the excel workbook
            </summary>
            <param name="workbook">Workbook to be imported into Spreadsheet</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Open(System.IO.Stream)">
            <summary>
            Loads the excel workbook
            </summary>
            <param name="file">Stream of the file to be imported</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Open(System.String)">
            <summary>
            Loads the excel workbook
            </summary>
            <param name="file">name of the file to be imported</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SaveAs(System.String)">
            <summary>
            save changes to the workbook with the specified file name
            </summary>
            <param name="filename">file name to save into</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SaveAs(System.IO.Stream)">
            <summary>
            save the workbook as stream
            </summary>
            <param name="stream">Stream that will receive workbook data</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Save">
            <summary>
            Save the changes that are made in the file else if file is not created yet, then it prompts to enter the filename to save
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SaveAs">
            <summary>
            Gets the name of the file and save the changes made in the file
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UnProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String)">
            <summary>
            Unprotects worksheet's content with password.
            </summary>
            <param name="worksheet"></param>
            <param name="password">Password to unprotect and returns true if password is correct else false.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String)">
            <summary>
            Protects the current worksheet
            </summary>
            <param name="worksheet">current worksheet</param>
            <param name="password">Password to lock</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.XlsIO.ExcelSheetProtection)">
            <summary>
            Protect the current worksheet based on option
            </summary>
            <param name="worksheet">current sheet</param>
            <param name="password">password to lock</param>
            <param name="option">protection option based on user selection</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Protect(System.Boolean,System.Boolean,System.String)">
            <summary>
            Protect the <see cref="T:Syncfusion.XlsIO.IWorkbook"/>
            </summary>
            <param name="isProtectWindow"></param>
            <param name="isProtectContent"></param>
            <param name="password"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Unprotect(System.String)">
            <summary>
            Unprotect the <see cref="T:Syncfusion.XlsIO.IWorkbook"/>
            </summary>
            <param name="password"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetZoomFactor(System.String,System.Int32)">
            <summary>
            Set the zoom factor of the worksheet. Value must be within 50 to 400.
            </summary>
            <param name="sheetName">Name of the <see cref="!:IWorksheeet"/></param>
            <param name="zoomFactor">zoom factor.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnZoomFactorChanging(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32@,Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Used to trigger ZoomFactorChanging event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnZoomFactorChanged(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32,Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Used to trigger ZoomFactorChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ChangeColumnWidth(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Used to Change the Column Width
            </summary>
            <param name="Worksheet"></param>
            <param name="width">value to be set as width</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ChangeRowHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Change the Row Height for the Specified range
            </summary>
            <param name="gridRange">grid range where the height to be changed </param>
            <param name="height">height to be changed for the specified range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ChangeDefaultColumnWidth(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Change the Default Column Width for the Specified Sheet
            </summary>
            <param name="worksheet"></param>
            <param name="gridRange"></param>
            <param name="standardwidth"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Group(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            To Group the Specified range
            </summary>
            <param name="gridRange">range to be grouped</param>
            <param name="GroupBy">Grouping Types either group by rows or columns</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UnGroup(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to UnGroup the Specified range
            </summary>
            <param name="gridRange">range to be ungrouped</param>
            <param name="GroupBy"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshOutlines(System.Boolean,System.Boolean)">
            <summary>
            Used to Refresh the Outlines of the group
            </summary>
            <param name="refreshRows"></param>
            <param name="refreshColumns"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AddNamedRange(System.String,System.String,System.String)">
            <summary>
            Used to Add the named range
            </summary>
            <param name="namerange">name of the range</param>
            <param name="refersto">address</param>
            <param name="scope">scope</param>
            <remarks>
            The address should be a string such as Sheet1!$D$5.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.EditNamedRange(System.String,System.String,Syncfusion.XlsIO.IName)">
            <summary>
            Used to Edit the named range
            </summary>
            <param name="namerange">new name</param>
            <param name="refersto">address</param>
            <param name="iname">old name</param>
            <remarks>
            The address is string such as Sheet1!$D$5.
             The iname shall be like Spreadsheet.Workbook.Names["SYNCFUSION"].
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DeleteNamedRange(Syncfusion.XlsIO.IName)">
            <summary>
            Used to Delete the named range
            </summary>
            <param name="iname">name to be deleted</param>
            <remarks>
             The iname shall be like Spreadsheet.Workbook.Names["SYNCFUSION"].
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetGridLinesVisibility(System.Boolean)">
            <summary>
            Sets the Grid Lines Visibility to true or false
            </summary>
            <param name="isVisible">true or false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetRowColumnHeadersVisibility(System.Boolean)">
            <summary>
            Sets the RowColumn Header Visibility to true or false
            </summary>
            <param name="isVisible">true or false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetCurrentGridChanged(System.String)">
            <summary>
            To set the properteis for changed Grid
            </summary>
            <param name="sheetName">Name of the Sheet</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshRowGroupPanel">
            <summary>
            Sets the RowGroupPanel Width when the OutlineRowCount greater than 0 and Invalidates the RowGroupPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshColumnGroupPanel">
            <summary>
            Sets the ColumnGroupPanel Height when the ColumnOutlineLevels are greater than 0 and Invalidate the ColumnGroupPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshCurrentCell">
            <summary>
            Refreshes the CurrentCellValue
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RaiseCellRequestNavigate(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Hyperlink bookmark support that is to navigate cells between different sheets or same sheets.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetGroupingSettings">
            <summary>
            To set the Grouping Settings (i.e) to set the Page Setup for the Active Sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorkbookUnloaded">
            <summary>
            Used to raise the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookUnloaded"/> event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorkbookLoaded">
            <summary>
            Used to raise the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookLoaded"/> event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetAdding(Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs)">
            <summary>
            Used to raise the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdding"/> event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetAdded(System.String)">
            <summary>
            Used to raise the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdded"/> event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetRemoved(System.String)">
            <summary>
            Used to raise the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoved"/> event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetRemoving(System.String)">
            <summary>
            Used to raise the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoving"/> event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DisposeOldInstances">
            <summary>
            Disposes the Old instances that are maintained
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Dispose">
            <summary>
            Disposes all the instances when not required
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectedTabIndex">
            <summary>
            Gets or sets the selected tab index of sfspreadsheet.
            </summary>
            <value> The index of the selected tab</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaBarVisibility">
            <summary>
            Gets or sets the Visibility of FormulaBar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowZooming">
            <summary>
            Determines whether allow zooming or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowTabItemContextMenu">
            <summary>
            Gets or sets whether TabItemContextMenu is to be displayed
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.TabItemContextMenu">
            <summary>
            Gets or sets the ContextMenu Items for TabItem
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.IsCustomTabItemContextMenuEnabled">
            <summary>
            Gets or sets whether Custom ContextMenu is to be Enabled
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowCellContextMenu">
            <summary>
            Gets or sets whether CellLevelContextMenu is to be displayed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HistoryManager">
            <summary>
            Gets the command stack of the SpreadsheetControl.By default it has been enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FileName">
            <summary>
            Gets or sets the Name of the File
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowExtendRowColumnCount">
            <summary>
            If true, extend row/column count upto default row/column count when used range is less than default row/column count.
            Else, loads used range only while importing workbook. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DefaultRowCount">
            <summary>
            Gets or sets the default row count
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DefaultColumnCount">
            <summary>
            Gets or sets the default column count
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ActiveGrid">
            <summary>
            Gets the active <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Workbook">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellRange">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IRange"/> of current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellStyle">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IStyle"/> of current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellValue">
            <summary>
            Gets the value of current cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaRangeSelectionController">
            <summary>
            FormulaRangeSelectionController Gets the controller for formula range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowFormulaRangeSelection">
            <summary>
            Determines whether to allow the formula range selection or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GraphicChartCellRenderer">
            <summary>
            Gets or sets the GraphicCellRenderer for Chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SparklineCellRenderer">
            <summary>
            Gets or sets the CellRenderer for Sparkline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.NamedRanges">
            <summary>
            Contains all the NamedRanges in the Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.IsFormulaParsingInProgress">
            <summary>
            Gets/Sets the value to find out an initial formula parsing completed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HasSelectedRange">
            <summary>
            Determines whether the grid has selection on single cell or multiple cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CopyPaste">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste"/> to share the same instance of all grids.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SheetCollection">
            <summary>
            Holds the collection of the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ParsedFormulas">
            <summary>
            Formulas are parsed into the formula engine and tha parsed values are stored in the list for reusing, when calculating the value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DirtyCells">
             <summary>
            Holds the collection of the dirty cells of the specified precedent cell. 
             While updating precedent cell, It holds the collection which needs to be calculate.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CalculatedValue">
            <summary>
            While updating the precedent cells, the dependency cells has been recalculated and stored in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.EditedCells">
            <summary>
            Holds edited cell collection for formula optimization.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ParsedFormulaCount">
            <summary>
            Gets/sets the parsed formula count at run time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.TotalFormulasCount">
            <summary>
            The number of formulas are present for initial parsing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FilePath">
            <summary>
            Gets or sets the Path of the Excel File to be opened
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormatStyle">
            <summary>
            Returns the <see cref="T:Syncfusion.XlsIO.IStyle"/> which is used to apply the 
            formatted(conditional format,table format or some other custom format) style while rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HeaderStyle">
            <summary>
            Returns the <see cref="T:Syncfusion.XlsIO.IStyle"/> which is used to apply formatted style for header cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaCellsList">
            <summary>
            Holds the collection of the formula cells in XML format.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ZoomFactorChanged">
            <summary>
            Occurs when the zoom factor is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ZoomFactorChanging">
            <summary>
            Occurs when the zoom factor is going to be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookCreating">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is going to be created
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdding">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is going to be added
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdded">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is added
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoving">
            <summary>
            Occurs when the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is going to be removed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoved">
            <summary>
            Occurs when the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is removed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookUnloaded">
            <summary>
            Occurs after the exisiting <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is unloaded from <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookLoaded">
            <summary>
            Occurs after the <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is loaded into <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.PropertyChanging">
            <summary>
            Occurs when property value is changing.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition">
            <summary>
            Interaction logic for BetweenNotBetweenCondition.xaml
            </summary>
            <summary>
            BetweenNotBetweenCondition
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow">
            <summary>
            Interaction logic for ConditionalFormatWindow.xaml
            </summary>
            <summary>
            ConditionalFormatWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationWindow">
            <summary>
            Interaction logic for DataValidationWindow.xaml
            </summary>
            <summary>
            DataValidationWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationWindow.ValidationRange">
            <summary>
            Gets or Sets the Range of the Cells where DataValidation is applied or to be applied
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition">
            <summary>
            Interaction logic for DateOccurringCondition.xaml
            </summary>
            <summary>
            DateOccurringCondition
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DefaultWidthWindow">
            <summary>
            Interaction logic for DefaultWidthWindow.xaml
            </summary>
            <summary>
            DefaultWidthWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DefaultWidthWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow">
            <summary>
            Interaction logic for EncryptCommandWindow.xaml
            </summary>
            <summary>
            EncryptCommandWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.#ctor">
            <summary>
            Constructor for EncryptCommandWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when ok button is clicked
            </summary>
            <param name="sender">The source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Cancel Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow">
            <summary>
            Interaction logic for FormatAsTableWindow.xaml
            </summary>
            <summary>
            FormatAsTableWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow.IsRangeSingleCell">
            <summary>
            Gets or sets the value of IsRangeIntersectCell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow.IsIntersectCell">
            <summary>
            Gets or sets the value of IsIntersectCell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow">
            <summary>
            Interaction logic for FormatAsTableWindow.xaml
            </summary>
            <summary>
            FormatCellsWindow
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.oldnumberformat">
            <summary>
            We have shown the sample text in window by getting the display text after applying the numberformats directly into
            range so we have to maintain it for the purpose to revert the number format if the user cancel the operation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.numberformat">
            <summary>
            currentexcelrange numberformat
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.selectedtabindex">
            <summary>
            Need to open the window with different tab in active.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.#ctor">
            <summary>
            Initialize the values from the constructor
            </summary>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.OnClosed(System.EventArgs)">
            <summary>
            close the window.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.WireEvents">
            <summary>
            Hook the required events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Hidden_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the hidden item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Locked_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the locked item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontSize_TxtBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Add the Fontsize item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontType_TxtBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Add the Fonttype item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontStyle_TxtBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Add the Fontstyle item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Merge_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the mergecells item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Wrap_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the wraptext item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Vertical_Combo_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Add the vertical item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Horizontal_Combo_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
             Add the horizontal item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NormalFont_Check_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Underline_Combo_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Update the underline in preview window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.StrikeThrough_Check_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Update the strikethrough in preview window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.TypeList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Update the numberformat based on the selected numberformat.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_VCenterBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the vertical center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_VCenterBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the vertical center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_TopBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the top border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_TopBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the top border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_RightBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the right border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_RightBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the right border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_HCenterBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the horizontal center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_HCenterBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the horizontal center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_BottomBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the bottom border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_BottomBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the bottom border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_LeftBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            clear the left border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_LeftBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the left border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_OutsideBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the borders(left,right,top,bottom) borders in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_InsideBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Make the center border in preview border window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_NoneBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the borders in preview border window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.ApplyButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to apply the settings after press the Ok button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FillColor_Palette_PreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Excel like toggle button should be unchecked if mouse pressed in fillcolor palette.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NoColor_Btn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Excel like default color should be applied when click the NoColor toggle button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Indent_UpDown_ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Excel like Horizontal combobox option should be changed when Indent value was changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CustomTypeTextBox_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Excel like delete button should be enabled when try to edit the custom textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.DeleteBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Delete the items from the custom type list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CustomTypeList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Delete button should be enable if the selected listvalue is not default one.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NegativeNumberList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Need to update the numberformat based on the selected negativenumberlist value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Separator_Checkbox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to update the values in the preview text if the checkbox value changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.DecimalPlaces_UpDown_ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Need to update the values in the sample text if the decimalupdown values are changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NegativeNumberList_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Initialize the negative numberlist.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.BorderColorPicker_ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Color picker dropdown should be closed once choose the value.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontColor_Palette_ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Color picker dropdown should be closed once choose the value.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Category_List_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Change the displaying values in window based on the selected items from category list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.ShowNumberFormatItems">
            <summary>
            Visibilty of items in numberformat tab customized based on the selected item in category list such as Number,Currency, etc..
            </summary>
            <param name="selectedvalue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.RefreshNumberTabItems">
            <summary>
            Reset the visibilities of items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.UpdateNumberFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FormatCellsWindow_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Initilize the all the tab items values while loading the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.UnWireEvents">
            <summary>
            unhook the all the hooked events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeAlignmentTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the alignment tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.UpdateTextDecorations">
            <summary>
            
            </summary>
            <param name="hasstrikethrough"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeFontTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the font tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.ApplyFontStyles(System.Boolean,System.Boolean,System.Double,Syncfusion.XlsIO.ExcelUnderline)">
            <summary>
            Set the font styles such as font size,underline,bold or italic in formatcells window.
            </summary>
            <param name="hasbold"></param>
            <param name="hasitalic"></param>
            <param name="fontsize"></param>
            <param name="underline"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.GetBorderLineStyle(System.Int32)">
            <summary>
            returns the border style based on the selected border index in the borders collection in window.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeBorderTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the borders in format cells window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeFillTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the fill tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeProtectionTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the protection tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeNumberTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Intializes the items in number tab of format cell window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CalculateNumberFormat">
            <summary>
            Generate unique numberformats based on the selected values in number tab.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CalculateDecimalDigitsCount(System.String)">
            <summary>
            calculate the decimal digits count based on the numberformat to set into decima updown control value.
            </summary>
            <param name="numberformat"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeNegativeNumberList">
            <summary>
            Generate the negative number list values for number tab.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeValues">
            <summary>
            Load the default values while loading the format cell window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to apply the settings to xlsio range by using command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CancelButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to revert the changes after press the cancel button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.OnApplySettings">
            <summary>
            Apply the required changes into xlsio range by using commands.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.SelectedTabIndex">
            <summary>
            Need to open the window with different tab in active.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow">
            <summary>
            Interaction logic for FormatWindow.xaml
            </summary>
            <summary>
            FormatWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.#ctor">
            <summary>
            Constructor for FormatWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.ChangeColumnWidth(System.Double)">
            <summary>
            Used to Change the Column Width for the Specified range
            </summary>
            <param name="width">Width to be set for the Specified range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.ChangeRowHeight(System.Double)">
            <summary>
            Change the Row Height for the Specified range
            </summary>
            <param name="height">height to be set for the specified range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.CellFormat">
            <summary>
            Gets or sets the Format of the CurrentCell either RowHeight or ColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.Description">
            <summary>
            Gets or sets the Description for the FormatWindow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.Value">
            <summary>
            Gets or sets the value to be displayed for rowheight or columnwidth
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow">
            <summary>
            Interaction logic for GetPasswordWindow.xaml
            </summary>
            <summary>
            GetPasswordWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.#ctor">
            <summary>
            Constructor for GetPasswordWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when ok button is clicked
            </summary>
            <param name="sender">The Source</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Cancel button is clicked
            </summary>
            <param name="sender">The Source</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.Text">
            <summary>
            Gets or Sets the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.FileName">
            <summary>
            Gets or sets the Name of the File is Protected
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow">
            <summary>
            Interaction logic for GroupWindow.xaml
            </summary>
            <summary>
            GroupWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the OkButton is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Rows">
            <summary>
            Gets or Sets true if the Rows are to be Grouped else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Columns">
            <summary>
            Gets or sets true if the Columns are to be Grouped else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.NeedToGroup">
            <summary>
            Gets or Sets true if the Rows/Columns are to be grouped else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow">
            <summary>
            Interaction logic for HyperlinkWindow.xaml
            </summary>
            <summary>
            HyperlinkWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.radiobuttons_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the hyperlink okay button enable property in different usecases.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.displaytext_changed(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Commit the displaytext when changes made in display textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.emailtxt_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Encode the email address with "mailto" text.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.refbtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the default display text when change over to other buttons from place in document button.       
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.ReferenceBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Maintain the default display text in place in document option as "sheet1!A1" when 
            hyperlink display text is empty or null.        
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.address_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Enable or disable the hyperlink okay button when address was changed and encode the address with "http:"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.hyperlinkok_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the different type of hyperlink operations when okay button is pressed in hyperlink window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.hyperlinkcancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Hadle to close the window when cancel button pressed in hyperlink window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.removebtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle to remove the existing hyperlink from the currentcell range when remove 
            button pressed in hyperlink window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.hyperbrowsebtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the browse button operation in ExistingFile or webpage option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.ChangeButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the change button operation in Create New Window option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow">
            <summary>
            Interaction logic for InsertCommentWindow.xaml
            </summary>
            <summary>
            InsertCommentWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.AddComment">
            <summary>
            Used to Add a comment for the CurrentCell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.WireEvents">
            <summary>
            Used to hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.UnWireEvents">
            <summary>
            Used to Unhook the Events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.InsertCommentWindow_Closed(System.Object,System.EventArgs)">
            <summary>
            Event raised when the Window is to be closed
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.CommentTextBox_PreviewLostKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Event raised when the comment textbox loses its focus
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.InsertCommentWindow_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the insert comment window is to be loaded.
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Handle the Key Down Operations
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.SfSpreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow">
            <summary>
            Interaction logic for InsertDeleteCellsWindow.xaml
            </summary>
            <summary>
            InsertDeleteCellsWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.#ctor">
            <summary>
            Constructor for InsertDeleteCellsWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Cancel Button is clicked
            </summary>
            <param name="sender">The Source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Ok Button is clicked
            </summary>
            <param name="sender">OkButton</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.InsertDeleteCells">
            <summary>
            Gets or Sets true if the Cell is to be inserted and returns false when the Cells is to be deleted
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow">
            <summary>
            Interaction logic for NameManagerWindow.xaml
            </summary>
            <summary>
            NameManagerWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Editor_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Event Raised When the Key is Pressed when the Editor TextBox in Focus
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.EndEditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the EndEdit Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.CancelEditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the CancelEdit Button is Clicked
            </summary>
            <param name="sender">The Soruce.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Close Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameRanges_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Event raised when the Selection is changed in the DataGrid
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Delete_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the Delete Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Edit_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Edit Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.New_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the New Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ClearFilter_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the ClearFilter MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ScopedtoWorksheet_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when ScopedtoWorksheet MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameswithErrors_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the NamesWithErrors MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameswithoutErrors_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the NamesWithOutErrors Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.DefinedNames_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the DefinedNames Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.TableNames_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the TableNames Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ScopedtoWorkbook_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the ScopedtoWorkbook Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.FilterButton_MouseDown_1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Raised When the Filter Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameRanges_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Raised when the DataGrid is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameRanges_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Raised when the Double click operation is performed on the DataGrid
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ApplyFilter">
            <summary>
            To Apply Filter for the Data used in DataGrid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ComputeValue(Syncfusion.XlsIO.IName)">
            <summary>
            To Compute the Value for the Given Name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Handle the Key Down Operations
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Commit_textValue">
            <summary>
            Commit the values entered to edit name range or create a new namerange
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.UpdateNameRangeReference(Syncfusion.XlsIO.IName,Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange)">
            <summary>
            Update edited name ranges of the workbook.
            </summary>
            <param name="name">Specified Name which have to update</param>
            <param name="selectedItem">Selected item of the NameRanges grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.AllFilter(System.Object)">
            <summary>
            Filters the name ranges
            </summary>
            <param name="filter"></param>
            <returns>Filtered results</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.DataGrid_SelectedIndex">
            <summary>
            Gets or sets the DataGrid Selected Item's index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.SelectedAddress">
            <summary>
            Gets or sets the SelectedAddress from the gridselected item.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.PropertyChanged">
            <summary>
            Property changed handler listens to the changes made to the properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange.OnPropertyChanged(System.String)">
            <summary>
            Holds the comment of NamedRanges used.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange.Name">
            <summary>
            Holds the data of Name of NamedRanges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange.RefersTo">
            <summary>
            Holds the data of CellAddress of NamedRanges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameRange.Scope">
            <summary>
            Holds the data of Scope of NamedRanges.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow">
            <summary>
            Interaction logic for NewNameRangeWindow.xaml
            </summary>
            <summary>
            NewNameRangeWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.DisplayMessageBox">
            <summary>
            Displaying error message when try to inserting a name range that has been already exist in the name collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.RangeToAddress(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Converts the Grid Range to the Address (e.g) 'Sheet1' !$A$1
            </summary>
            <param name="range">Current Grid Range</param>
            <returns>returns the string value as Address (e.g) 'Sheeet1' !$A$1</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.GetCellRef(System.Int32,System.Int32)">
            <summary>
            Get Cell Reference of the specified row,col index. 
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.OnClosed(System.EventArgs)">
            <summary>
            Used to Show the NameManagerWindow when the current window is Closed
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.NameManagerWindow">
            <summary>
            Gets or sets the instance for the NameManagerWindow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.RefersTO">
            <summary>
            Gets or sets the Cell Address for the Named Ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.ComboBox_SelectedItem">
            <summary>
            Gets or Sets the the Combox SelectedItem , i.e Scope for the NamedRanges.    
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.NamedRangeText">
            <summary>
            Gets or Sets the Name of the Selected NamedRanges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.RangeAddress">
            <summary>
            Gets or sets the Cell address of the Selected NamedRanges.
            for ex: RangeAddress = "=Sheet1!$A$1".
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.Scope">
            <summary>
            Gets or sets the Scope for the Named Ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.IsEditName">
            <summary>
            gets or sets true if the NameRange is to be Edited else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow">
            <summary>
            Interaction logic for OutlineSettingsWindow.xaml
            </summary>
            <summary>
            OutlineSettingsWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the OkButton is Clicked
            </summary>
            <param name="sender">The Soruce.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.IsSummaryColumnAtRight">
            <summary>
            Gets or Sets true if the Summary Column to displayed at the right 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow">
            <summary>
            Interaction logic for ProtectSheetCommand.xaml
            </summary>
            <summary>
            ProtectSheetWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.#ctor">
            <summary>
            Constructor for ProtectSheetCommand
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.GetProtectSheetOptions">
            <summary>
            To get the protect sheet options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when cancel button is clicked in protect window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when ok button is clicked in protect window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.UnlockedChkBox_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when unlock selected cells checkbox is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.LockedChkBox_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when locked selected cells checkbox is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.OnLoaded">
            <summary>
            This function is called when the window is loaded
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.OnApplySettings">
            <summary>
            This function is invoked to apply the protection to the sheet based on options
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.UnWireEvents">
            <summary>
            To unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.WireEvents">
            <summary>
            To hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow">
            <summary>
            Interaction logic for ProtectWorkbookWindow.xaml
            </summary>
            <summary>
            ProtectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.#ctor">
            <summary>
            Constructor for ProtectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the Ok Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.IsStructure">
            <summary>
            Gets or Sets true if the Structure is to be Protected else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.IsWindows">
            <summary>
            Gets or Set true if the Window is to be protected else false
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow">
            <summary>
            Interaction logic for UnHideWindow.xaml
            </summary>
            <summary>
            UnHideWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.#ctor">
            <summary>
            Constructor for UnHide Window
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Cancel Button is Clicked.
            </summary>
            <param name="sender">The Source of the Event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Ok Button is clicked.
            </summary>
            <param name="sender">The source of the Event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.sheetListBox_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event raised when the ListBoxItem is double clicked
            </summary>
            <param name="sender">The Source of the Event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectSheetWindow">
            <summary>
            Interaction logic for UnprotectSheet.xaml
            </summary>
            <summary>
            UnprotectSheetWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectSheetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow">
            <summary>
            Interaction logic for UnprotectWorkbookWindow.xaml
            </summary>
            <summary>
            UnprotectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.#ctor">
            <summary>
            Constructor for UnprotectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Ok Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Accounting">
            <summary>
              Looks up a localized string similar to Accounting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Alignment">
            <summary>
              Looks up a localized string similar to Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AllBorder">
            <summary>
              Looks up a localized string similar to All Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Allow">
            <summary>
              Looks up a localized string similar to Allow :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.And">
            <summary>
              Looks up a localized string similar to and.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AngleClockwise">
            <summary>
              Looks up a localized string similar to Angle Clockwise.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AngleCounterclockwise">
            <summary>
              Looks up a localized string similar to Angle Counterclockwise.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AnyValue">
            <summary>
              Looks up a localized string similar to Any value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AutoFitColumnWidth">
            <summary>
              Looks up a localized string similar to AutoFit Column Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AutoFitRowHeight">
            <summary>
              Looks up a localized string similar to AutoFit Row Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AvailableTemplate">
            <summary>
              Looks up a localized string similar to Available Template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Between">
            <summary>
              Looks up a localized string similar to Between....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Between_Lower">
            <summary>
              Looks up a localized string similar to between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BetweenWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are BETWEEN:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BetweenWindowTitle">
            <summary>
              Looks up a localized string similar to Between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BlankWorkbook">
            <summary>
              Looks up a localized string similar to Blank workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BlankWorkbookDescription">
            <summary>
              Looks up a localized string similar to Creates an Empty Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Border">
            <summary>
              Looks up a localized string similar to Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BottomAlign">
            <summary>
              Looks up a localized string similar to BottomAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BottomBorder">
            <summary>
              Looks up a localized string similar to Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Caption">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Caution">
            <summary>
              Looks up a localized string similar to Caution: If you lose or forget the password, it cannot be recovered. It is advisable to keep a list of passwords and their corresponding document names in a safe place.(Remember that passwords are case sensitive.).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Cells">
            <summary>
              Looks up a localized string similar to Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CellSize">
            <summary>
              Looks up a localized string similar to Cell Size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CellStyles">
            <summary>
              Looks up a localized string similar to Cell Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CenterAlign">
            <summary>
              Looks up a localized string similar to CenterAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Directional">
            <summary>
              Looks up a localized string similar to Directional.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Indicators">
            <summary>
              Looks up a localized string similar to Indicators.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Ratings">
            <summary>
              Looks up a localized string similar to Ratings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Shapes">
            <summary>
              Looks up a localized string similar to Shapes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Change">
            <summary>
              Looks up a localized string similar to Change....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearAll">
            <summary>
              Looks up a localized string similar to Clear All.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearFilter">
            <summary>
              Looks up a localized string similar to Clear Filter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearRules">
            <summary>
              Looks up a localized string similar to Clear Rules.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearRules_FromEntireSheet">
            <summary>
              Looks up a localized string similar to Clear Rules from Entire Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearRules_FromSelectedCells">
            <summary>
              Looks up a localized string similar to Clear Rules from Selected Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Clipboard">
            <summary>
              Looks up a localized string similar to Clipboard.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColorScales">
            <summary>
              Looks up a localized string similar to Color Scales.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Columns">
            <summary>
              Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColumnWidth">
            <summary>
              Looks up a localized string similar to Column Width....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColumnWidthDescription">
            <summary>
              Looks up a localized string similar to Column width:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColumnWidthTitle">
            <summary>
              Looks up a localized string similar to Column Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CommaStyle">
            <summary>
              Looks up a localized string similar to CommaStyle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Comment">
            <summary>
              Looks up a localized string similar to Comment:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Comments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ConditionalFormatting">
            <summary>
              Looks up a localized string similar to Conditional Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ConditionValueError">
            <summary>
              Looks up a localized string similar to Please enter only numeric values, cannot apply condition value as string value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ContainsTextDescription">
            <summary>
              Looks up a localized string similar to Format cells that contain the text:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ContainsTextTitle">
            <summary>
              Looks up a localized string similar to Text That Contains.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_ClearContents">
            <summary>
              Looks up a localized string similar to Clear Contents.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_DefineName">
            <summary>
              Looks up a localized string similar to Define Name....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_Delete">
            <summary>
              Looks up a localized string similar to Delete....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_DeleteComment">
            <summary>
              Looks up a localized string similar to Delete Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_EditComment">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_EditHyperlink">
            <summary>
              Looks up a localized string similar to Edit Hyperlink....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_FormatCells">
            <summary>
              Looks up a localized string similar to Format Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_Hyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_Insert">
            <summary>
              Looks up a localized string similar to Insert....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_InsertComment">
            <summary>
              Looks up a localized string similar to Insert Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_KeepTextOnly">
            <summary>
              Looks up a localized string similar to Keep Text Only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_OpenHyperlink">
            <summary>
              Looks up a localized string similar to Open Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteAll">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteFormat">
            <summary>
              Looks up a localized string similar to Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteFormulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteOptions">
            <summary>
              Looks up a localized string similar to PasteOptions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteValues">
            <summary>
              Looks up a localized string similar to Values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_RemoveHyperlink">
            <summary>
              Looks up a localized string similar to Remove Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_ValuesAndFormatting">
            <summary>
              Looks up a localized string similar to Values &amp; Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Currency">
            <summary>
              Looks up a localized string similar to Currency.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Custom">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Data">
            <summary>
              Looks up a localized string similar to DATA.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DataBars">
            <summary>
              Looks up a localized string similar to Data Bars.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Datatitle">
            <summary>
              Looks up a localized string similar to Data :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Datatools">
            <summary>
              Looks up a localized string similar to Data Tools.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DataValidation">
            <summary>
              Looks up a localized string similar to Data Validation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Date">
            <summary>
              Looks up a localized string similar to Date :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateAndTime">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateError">
            <summary>
              Looks up a localized string similar to The date you entered for the Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateOccuring">
            <summary>
              Looks up a localized string similar to A Date Occurring....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateOccuringDescription">
            <summary>
              Looks up a localized string similar to Format cells that contain a date occurring:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateOccuringTitle">
            <summary>
              Looks up a localized string similar to A Date Occurring.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Decimal">
            <summary>
              Looks up a localized string similar to Decimal.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DecreaseIndent">
            <summary>
              Looks up a localized string similar to DecreaseIndent.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefaultValidationError">
            <summary>
              Looks up a localized string similar to The value you entered is not valid.                                                                   A user has restricted values that can be entered into this cell..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefaultValidationMessage">
             <summary>
               Looks up a localized string similar to The value you entered is not valid.
            A user has restricted value that can be entered into this cell..
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefaultWidth">
            <summary>
              Looks up a localized string similar to Default Width...  .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefinedNames">
            <summary>
              Looks up a localized string similar to Defined Names.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DelCols">
            <summary>
              Looks up a localized string similar to Delete columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteCells">
            <summary>
              Looks up a localized string similar to Delete Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteColumn">
            <summary>
              Looks up a localized string similar to Delete Sheet Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteComment">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteNameRange">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete the name .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteRow">
            <summary>
              Looks up a localized string similar to Delete Sheet Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteSheet">
            <summary>
              Looks up a localized string similar to Delete Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DelRows">
            <summary>
              Looks up a localized string similar to Delete rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Direction">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Document">
            <summary>
              Looks up a localized string similar to Create New Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_AppName">
            <summary>
              Looks up a localized string similar to Add an application name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Author">
            <summary>
              Looks up a localized string similar to Add an author.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Category">
            <summary>
              Looks up a localized string similar to Add a category.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Comments">
            <summary>
              Looks up a localized string similar to Add comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Company">
            <summary>
              Looks up a localized string similar to Specify the company.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Manager">
            <summary>
              Looks up a localized string similar to Specify the manager.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Subject">
            <summary>
              Looks up a localized string similar to Specify the subject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Tag">
            <summary>
              Looks up a localized string similar to Add a tag.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Title">
            <summary>
              Looks up a localized string similar to Add a title.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperties">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_AppName">
            <summary>
              Looks up a localized string similar to AppName.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Author">
            <summary>
              Looks up a localized string similar to Author.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Category">
            <summary>
              Looks up a localized string similar to Categories.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Comments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Company">
            <summary>
              Looks up a localized string similar to Company.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Created">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_LastModified">
            <summary>
              Looks up a localized string similar to Last Modified.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_LastModifiedBy">
            <summary>
              Looks up a localized string similar to Last Modified By.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_LastPrinted">
            <summary>
              Looks up a localized string similar to Last Printed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Manager">
            <summary>
              Looks up a localized string similar to Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_RelatedDates">
            <summary>
              Looks up a localized string similar to Related Dates.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_RelatedDocuments">
            <summary>
              Looks up a localized string similar to Related Documents.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_RelatedPeople">
            <summary>
              Looks up a localized string similar to Related People.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Tag">
            <summary>
              Looks up a localized string similar to Tags.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DoubleValueError">
            <summary>
              Looks up a localized string similar to Your entry cannot be used. An integer or decimal number may be required..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Edit">
            <summary>
              Looks up a localized string similar to Edit....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditComment">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditLater">
            <summary>
              Looks up a localized string similar to Edit the new document later.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditName">
            <summary>
              Looks up a localized string similar to Edit Name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditNow">
            <summary>
              Looks up a localized string similar to Edit the new document now.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditObjs">
            <summary>
              Looks up a localized string similar to Edit objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptDescription">
            <summary>
              Looks up a localized string similar to Encrypt the contents of this file.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptDocument">
            <summary>
              Looks up a localized string similar to Encrypt Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptWithPassword">
            <summary>
              Looks up a localized string similar to Encrypt with Password.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptWithPasswordDesc">
            <summary>
              Looks up a localized string similar to Require a password to open this workbook..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDate">
            <summary>
              Looks up a localized string similar to End date :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDateError">
            <summary>
              Looks up a localized string similar to The date you entered for the End Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter a End Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDateStartDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter both a End Date and a Start Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndTime">
            <summary>
              Looks up a localized string similar to End time:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndTimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the End Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterDate">
            <summary>
              Looks up a localized string similar to You must enter a Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterEndDate">
            <summary>
              Looks up a localized string similar to You must enter a End Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterEndTime">
            <summary>
              Looks up a localized string similar to You must enter a End Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterFormula">
            <summary>
              Looks up a localized string similar to You must enter a Formula..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterLength">
            <summary>
              Looks up a localized string similar to You must enter a Length..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterMaximum">
            <summary>
              Looks up a localized string similar to You must enter a Maximum.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterMinimum">
            <summary>
              Looks up a localized string similar to You must enter a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterMinMaxValue">
            <summary>
              Looks up a localized string similar to You must enter both a Maximum and a Minimum. .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterSource">
            <summary>
              Looks up a localized string similar to You must enter a Source..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartDate">
            <summary>
              Looks up a localized string similar to You must enter a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartEndDate">
            <summary>
              Looks up a localized string similar to You must enter both an End Date and a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartEndTime">
            <summary>
              Looks up a localized string similar to You must enter both an End Time and a Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartTime">
            <summary>
              Looks up a localized string similar to You must enter a Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterTime">
            <summary>
              Looks up a localized string similar to You must enter a Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterValue">
            <summary>
              Looks up a localized string similar to You must enter a Value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EntireColumn">
            <summary>
              Looks up a localized string similar to Entire column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EntireRow">
            <summary>
              Looks up a localized string similar to Entire row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EqualTo">
            <summary>
              Looks up a localized string similar to Equal To....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Equalto_Lower">
            <summary>
              Looks up a localized string similar to equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EqualToWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are EQUAL TO:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EqualToWindowTitle">
            <summary>
              Looks up a localized string similar to Equal To.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorAlert">
            <summary>
              Looks up a localized string similar to Error Alert.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorAlertDescription">
            <summary>
              Looks up a localized string similar to When user enters invalid data, show this error alert:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorMessage">
            <summary>
              Looks up a localized string similar to Error message:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorMessage_DeleteSheet">
            <summary>
              Looks up a localized string similar to A workbook must contain atleast one visible sheet.                                  To hide, delete or move the selected sheet(s), you must first insert a new sheet or unhide a sheet which is already hidden..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EssentialXlsio">
            <summary>
              Looks up a localized string similar to EssentialXlsio.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ExceedColumnWidthWarning">
            <summary>
              Looks up a localized string similar to Column width must be between 0 and 255 characters..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ExceedRowHeightWarning">
            <summary>
              Looks up a localized string similar to Row height must be between 0 and 409.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ExistingName">
            <summary>
              Looks up a localized string similar to Cannot rename a sheet to the same name as other sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.File">
            <summary>
              Looks up a localized string similar to FILE.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Filter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Font">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FontSizeError">
            <summary>
              Looks up a localized string similar to Font size must be between 1 and 409 points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Format">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatAsTable">
            <summary>
              Looks up a localized string similar to Format as Table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatAsTableDescription">
            <summary>
              Looks up a localized string similar to Where is the data for your table?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatAsTableWindowTitle">
            <summary>
              Looks up a localized string similar to Format As Table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCellAlignment">
            <summary>
              Looks up a localized string similar to Format Cell Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Formatcells">
            <summary>
              Looks up a localized string similar to Format cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Accounting_Instruction">
            <summary>
              Looks up a localized string similar to Accounting formats line up the currency symbols and decimal points in a column..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_BackgroundColor">
            <summary>
              Looks up a localized string similar to Background Color:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Bold">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_BoldItalic">
            <summary>
              Looks up a localized string similar to BoldItalic.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Border_FooterText">
            <summary>
              Looks up a localized string similar to The selected border style can be applied by clicking the presets, preview diagram or the buttons above..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Category">
            <summary>
              Looks up a localized string similar to Category:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Color">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Currency_Instruction">
            <summary>
              Looks up a localized string similar to Currency formats are used for general monetary values. Use Accounting formats to align decimal points in a column..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Custom_Instruction">
            <summary>
              Looks up a localized string similar to Type the number format code, using one of the existing codes as a starting point..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Date">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Date_Instruction">
            <summary>
              Looks up a localized string similar to Date formats display date and time serial numbers as date values. Date formats that begin with an asterisk(*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist1">
            <summary>
              Looks up a localized string similar to * wednesday,March 14,2012.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist2">
            <summary>
              Looks up a localized string similar to 14-Mar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist3">
            <summary>
              Looks up a localized string similar to 14-Mar-12.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist4">
            <summary>
              Looks up a localized string similar to Mar-12.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist5">
            <summary>
              Looks up a localized string similar to March-12.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist6">
            <summary>
              Looks up a localized string similar to March 14,2012.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist7">
            <summary>
              Looks up a localized string similar to 14-Mar-2012.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_DecimalPlaces">
            <summary>
              Looks up a localized string similar to Decimal places:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Degrees">
            <summary>
              Looks up a localized string similar to Degrees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_DoubleUnderline">
            <summary>
              Looks up a localized string similar to Double.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Effects">
            <summary>
              Looks up a localized string similar to Effects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Fill">
            <summary>
              Looks up a localized string similar to Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Font">
            <summary>
              Looks up a localized string similar to Font:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Font_FooterText">
            <summary>
              Looks up a localized string similar to This is a true type font. The same font will be used on both your printer and your screen..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FontSize">
            <summary>
              Looks up a localized string similar to Size:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FontStyle">
            <summary>
              Looks up a localized string similar to Font Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType1">
            <summary>
              Looks up a localized string similar to Up to one digit(1/4).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType2">
            <summary>
              Looks up a localized string similar to Up to two digits(21/25).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType3">
            <summary>
              Looks up a localized string similar to Up to three digits(312/943).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType4">
            <summary>
              Looks up a localized string similar to As halves(1/2).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType5">
            <summary>
              Looks up a localized string similar to As quarters(2/4).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType6">
            <summary>
              Looks up a localized string similar to As eighths(4/8).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType7">
            <summary>
              Looks up a localized string similar to As sixteenths(8/16).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType8">
            <summary>
              Looks up a localized string similar to As tenths(3/10).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType9">
            <summary>
              Looks up a localized string similar to As hundredths(30/100).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_General_Instruction">
            <summary>
              Looks up a localized string similar to General format cells have no specific number format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_HeaderFont">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Hidden">
            <summary>
              Looks up a localized string similar to Hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Horizontal">
            <summary>
              Looks up a localized string similar to Horizontal:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Indent">
            <summary>
              Looks up a localized string similar to Indent:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Inside">
            <summary>
              Looks up a localized string similar to Inside.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Italic">
            <summary>
              Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_LeftIndent">
            <summary>
              Looks up a localized string similar to Left(Indent).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Locked">
            <summary>
              Looks up a localized string similar to Locked.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_NegativeNumber">
            <summary>
              Looks up a localized string similar to Negative number:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_NoColor">
            <summary>
              Looks up a localized string similar to No Color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_NormalFont">
            <summary>
              Looks up a localized string similar to Normal Font.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Number_Instruction">
            <summary>
              Looks up a localized string similar to Number is used for general display of numbers. Currency And Accounting offer specialized formatting for monetary value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Outline">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Percentage_Instruction">
            <summary>
              Looks up a localized string similar to Percentage formats multiply the cell value by 100 and display the result with a percent symbol..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Presets">
            <summary>
              Looks up a localized string similar to Presets.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Preview">
            <summary>
              Looks up a localized string similar to Preview.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Protection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Protection_FooterText">
            <summary>
              Looks up a localized string similar to Locking cells or hiding formulas has no effect untill you protect the worksheet(View tab,Protect sheet button)..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Regular">
            <summary>
              Looks up a localized string similar to Regular.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_RightIndent">
            <summary>
              Looks up a localized string similar to Right(Indent).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Sample">
            <summary>
              Looks up a localized string similar to Sample.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_SeparatorText">
            <summary>
              Looks up a localized string similar to Use 1000 Separator (,).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Single">
            <summary>
              Looks up a localized string similar to Single.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special_Instruction">
            <summary>
              Looks up a localized string similar to Special formats are useful for tracking list and database values..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special1">
            <summary>
              Looks up a localized string similar to Zip Code.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special2">
            <summary>
              Looks up a localized string similar to Zip Code +4.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special3">
            <summary>
              Looks up a localized string similar to Phone Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special4">
            <summary>
              Looks up a localized string similar to Social Security Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Strikethrough">
            <summary>
              Looks up a localized string similar to Strikethrough.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Symbol">
            <summary>
              Looks up a localized string similar to Symbol:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_TextAlignment">
            <summary>
              Looks up a localized string similar to Text Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_TextControl">
            <summary>
              Looks up a localized string similar to Text Control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Time_Instruction">
            <summary>
              Looks up a localized string similar to Time formats display date and time serial numbers as date values. Date formats that begin with an asterisk(*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Title">
            <summary>
              Looks up a localized string similar to Format Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Type">
            <summary>
              Looks up a localized string similar to Type:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Underline">
            <summary>
              Looks up a localized string similar to Underline:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Vertical">
            <summary>
              Looks up a localized string similar to Vertical:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCols">
            <summary>
              Looks up a localized string similar to Format columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatRows">
            <summary>
              Looks up a localized string similar to Format rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Formula">
            <summary>
              Looks up a localized string similar to Formula.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormulaBar">
            <summary>
              Looks up a localized string similar to Formula Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormulaError">
            <summary>
              Looks up a localized string similar to The formula you typed contains an error..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Formulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Fraction">
            <summary>
              Looks up a localized string similar to Fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Freeze">
            <summary>
              Looks up a localized string similar to Freeze.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeFirstColumn">
            <summary>
              Looks up a localized string similar to Freeze First Column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeFirstColumnDescription">
            <summary>
              Looks up a localized string similar to Keep the first column visible while scrolling through the rest of the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezePanes">
            <summary>
              Looks up a localized string similar to Freeze Panes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezePanesDescription">
            <summary>
              Looks up a localized string similar to Keep rows and columns visible while the rest of the worksheet scrolls(based on current selection)..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeTopRow">
            <summary>
              Looks up a localized string similar to Freeze Top Row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeTopRowDescription">
            <summary>
              Looks up a localized string similar to Keep the top row visible while scrolling through the rest of the worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FullPath">
            <summary>
              Looks up a localized string similar to FullPath:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GoodBadNeutral">
            <summary>
              Looks up a localized string similar to Good, Bad and Neutral.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GradientFill">
            <summary>
              Looks up a localized string similar to Gradient Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThan">
            <summary>
              Looks up a localized string similar to Greater Than....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThan_Lower">
            <summary>
              Looks up a localized string similar to greater than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThanOrEqualTo_Lower">
            <summary>
              Looks up a localized string similar to greater than or equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThanWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are GREATER THAN: .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThanWindowTitle">
            <summary>
              Looks up a localized string similar to Greater Than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreenFillWithDarkGreenText">
            <summary>
              Looks up a localized string similar to Green Fill with Dark Green Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Gridlines">
            <summary>
              Looks up a localized string similar to Gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Group">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_Workbook">
            <summary>
              Looks up a localized string similar to Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_www">
            <summary>
              Looks up a localized string similar to www..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_Xlsx">
            <summary>
              Looks up a localized string similar to .xlsx.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_Xlsx2">
            <summary>
              Looks up a localized string similar to (xlsx).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Headings">
            <summary>
              Looks up a localized string similar to Headings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Hide">
            <summary>
              Looks up a localized string similar to Hide.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideAndUnhide">
            <summary>
              Looks up a localized string similar to Hide &amp; Unhide.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideColumns">
            <summary>
              Looks up a localized string similar to Hide Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideRows">
            <summary>
              Looks up a localized string similar to Hide Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideSheet">
            <summary>
              Looks up a localized string similar to Hide Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HighlightCellRules">
            <summary>
              Looks up a localized string similar to Highlight Cells Rules.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_BrowseFilter">
            <summary>
              Looks up a localized string similar to Office Files.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Change">
            <summary>
              Looks up a localized string similar to Change....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_DefaultCell">
            <summary>
              Looks up a localized string similar to A1.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Document">
            <summary>
              Looks up a localized string similar to Create New Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EditLater">
            <summary>
              Looks up a localized string similar to Edit the new document later.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EditNow">
            <summary>
              Looks up a localized string similar to Edit the new document now.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EditWindowName">
            <summary>
              Looks up a localized string similar to Edit Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Exist">
            <summary>
              Looks up a localized string similar to Existing File or Web Page.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_FullPath">
            <summary>
              Looks up a localized string similar to Full path:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_HyperlinkAddress">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_InsertWindowName">
            <summary>
              Looks up a localized string similar to Insert Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_LinkTo">
            <summary>
              Looks up a localized string similar to Link to:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Mail">
            <summary>
              Looks up a localized string similar to E-mail Address.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_MailTo">
            <summary>
              Looks up a localized string similar to mailto.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Nameofnewdocument">
            <summary>
              Looks up a localized string similar to Name of new document:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Reference">
            <summary>
              Looks up a localized string similar to Place in This Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_RemoveLink">
            <summary>
              Looks up a localized string similar to Remove Link.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_ScreenTip">
            <summary>
              Looks up a localized string similar to ScreenTip:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_SelectInDocument">
            <summary>
              Looks up a localized string similar to &lt;&lt;Selection in Document&gt;&gt;.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Subject">
            <summary>
              Looks up a localized string similar to Subject:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_TexttoDisplay">
            <summary>
              Looks up a localized string similar to Text to display:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_ToolTip">
            <summary>
              Looks up a localized string similar to Click once to follow .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Typethecellreference">
            <summary>
              Looks up a localized string similar to Type the cell reference:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Whentoedit">
            <summary>
              Looks up a localized string similar to When to edit:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Home">
            <summary>
              Looks up a localized string similar to HOME.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Hyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HyperlinkAddress">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HyperlinkCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HyperlinkOk">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Hyperlinks">
            <summary>
              Looks up a localized string similar to Hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IconSets">
            <summary>
              Looks up a localized string similar to Icon Sets.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IgnoreBlank">
            <summary>
              Looks up a localized string similar to Ignore blank.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Illustrations">
            <summary>
              Looks up a localized string similar to Illustrations.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InCellDropDown">
            <summary>
              Looks up a localized string similar to In-cell Dropdown.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Incorrect">
             <summary>
               Looks up a localized string similar to You typed invalid name for a sheet. Make sure that:
            
            1. The name that you type does not exceed 31 characters.
            2. The name does not contain any of following characters:  : \ / ? * [ or ]
            3. You did not leave the name blank..
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IncreaseIndent">
            <summary>
              Looks up a localized string similar to IncreaseIndent.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Info">
            <summary>
              Looks up a localized string similar to Info.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InformationAbout">
            <summary>
              Looks up a localized string similar to Information about.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InputMessage">
            <summary>
              Looks up a localized string similar to Input Message.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Inputmessagedesc">
            <summary>
              Looks up a localized string similar to Input message:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InputmessageDescription">
            <summary>
              Looks up a localized string similar to When cell is selected, show this input message:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsCols">
            <summary>
              Looks up a localized string similar to Insert columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Insert">
            <summary>
              Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertCells">
            <summary>
              Looks up a localized string similar to Insert Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertColumn">
            <summary>
              Looks up a localized string similar to Insert Sheet Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertDeleteCellsError">
            <summary>
              Looks up a localized string similar to Unable to perform this action on multiple ranges. Select a single range and try again..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertRow">
            <summary>
              Looks up a localized string similar to Insert Sheet Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertSheet">
            <summary>
              Looks up a localized string similar to Insert Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsHyper">
            <summary>
              Looks up a localized string similar to Insert hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsRows">
            <summary>
              Looks up a localized string similar to Insert rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Inthelast7days">
            <summary>
              Looks up a localized string similar to In the last 7 days.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IsSummaryColumnAtRight">
            <summary>
              Looks up a localized string similar to Summary columns to right of detail.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IsSummaryRowBelow">
            <summary>
              Looks up a localized string similar to Summary rows below detail.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LastMonth">
            <summary>
              Looks up a localized string similar to Last Month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LastWeek">
            <summary>
              Looks up a localized string similar to Last Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LeftAlign">
            <summary>
              Looks up a localized string similar to LeftAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LeftBorder">
            <summary>
              Looks up a localized string similar to Left Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Length">
            <summary>
              Looks up a localized string similar to Length:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThan">
            <summary>
              Looks up a localized string similar to Less Than....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Lessthan_Lower">
            <summary>
              Looks up a localized string similar to less than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThanOrEqualTo_Lower">
            <summary>
              Looks up a localized string similar to less than or equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThanWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are LESS THAN:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThanWindowTitle">
            <summary>
              Looks up a localized string similar to Less Than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LightRedFill">
            <summary>
              Looks up a localized string similar to Light Red Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LightRedFillWithDarkRedText">
            <summary>
              Looks up a localized string similar to Light Red Fill with Dark Red Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Links">
            <summary>
              Looks up a localized string similar to Links.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LinkTo">
            <summary>
              Looks up a localized string similar to LinkTo:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.List">
            <summary>
              Looks up a localized string similar to List.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LockCell">
            <summary>
              Looks up a localized string similar to Lock Cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Locked">
            <summary>
              Looks up a localized string similar to Select locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LongDate">
            <summary>
              Looks up a localized string similar to Long Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Mail">
            <summary>
              Looks up a localized string similar to E-Mail Address.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Maximum">
            <summary>
              Looks up a localized string similar to Maximum :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MaximumErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Maximum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MaxNumericValueError">
            <summary>
              Looks up a localized string similar to The Maximum must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MergeAcross">
            <summary>
              Looks up a localized string similar to Merge Across.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MergeAndCenter">
            <summary>
              Looks up a localized string similar to Merge &amp; Center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MergeCells">
            <summary>
              Looks up a localized string similar to Merge Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MiddleAlign">
            <summary>
              Looks up a localized string similar to MiddleAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Minimum">
            <summary>
              Looks up a localized string similar to Minimum :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinimumErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinimumMaximumErrorText">
            <summary>
              Looks up a localized string similar to You must enter both a Maximum and a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinMaxDateError">
            <summary>
              Looks up a localized string similar to The End Date must be greater than or equal to the Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinMaxError">
            <summary>
              Looks up a localized string similar to The Maximum must be greater than or equal to the Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinMaxTimeError">
            <summary>
              Looks up a localized string similar to The End Time must be greater than or equal to Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinNumericValueError">
            <summary>
              Looks up a localized string similar to The Minimum must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MoreBorders">
            <summary>
              Looks up a localized string similar to More Borders....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MultipleSelectionsError">
            <summary>
              Looks up a localized string similar to The command you chose cannot be performed with multiple selections. Select a single range and click the command again..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Name">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameAlreadyExist">
            <summary>
              Looks up a localized string similar to The name entered already exists. Enter a unique name..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameManager">
            <summary>
              Looks up a localized string similar to Name Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Nameofnewdocument">
            <summary>
              Looks up a localized string similar to Name of new document:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameRangeError">
            <summary>
              Looks up a localized string similar to A named range you specified cannot be found..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NamesScopedtoWorkbook">
            <summary>
              Looks up a localized string similar to Names Scoped to Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NamesScopedtoWorksheet">
            <summary>
              Looks up a localized string similar to Names Scoped to Worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameswithErrors">
            <summary>
              Looks up a localized string similar to Names with Errors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameswithoutErrors">
            <summary>
              Looks up a localized string similar to Names without Errors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.New">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NewComment">
            <summary>
              Looks up a localized string similar to New Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NewName">
            <summary>
              Looks up a localized string similar to New....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NewNameRange">
            <summary>
              Looks up a localized string similar to New Name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NextMonth">
            <summary>
              Looks up a localized string similar to Next Month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NextWeek">
            <summary>
              Looks up a localized string similar to Next Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NoBorder">
            <summary>
              Looks up a localized string similar to No Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotBetween">
            <summary>
              Looks up a localized string similar to Not Between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Notbetween_Lower">
            <summary>
              Looks up a localized string similar to not between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotBetweenWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are NOT BETWEEN:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotBetweenWindowTitle">
            <summary>
              Looks up a localized string similar to Not Between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotEqualTo_Lower">
            <summary>
              Looks up a localized string similar to not equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotSavedYet">
            <summary>
              Looks up a localized string similar to Not saved yet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Number">
            <summary>
              Looks up a localized string similar to Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NumberFormat">
            <summary>
              Looks up a localized string similar to Number Format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NumericValueError">
            <summary>
              Looks up a localized string similar to The Value must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Ok">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Open">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.OpenFileLocation">
            <summary>
              Looks up a localized string similar to Open File Location.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.OrganizeSheets">
            <summary>
              Looks up a localized string similar to Organize Sheets.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Others">
            <summary>
              Looks up a localized string similar to Others.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Outline">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.OutSideBorder">
            <summary>
              Looks up a localized string similar to Outside Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Password">
            <summary>
              Looks up a localized string similar to Password (optional):.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PasswordTitle">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PasswordtoUnProtect">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PasteOptions">
            <summary>
              Looks up a localized string similar to Paste Options:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Percentage">
            <summary>
              Looks up a localized string similar to Percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Permissions">
            <summary>
              Looks up a localized string similar to Permissions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PermissionsDescription">
            <summary>
              Looks up a localized string similar to PermissionsDescription.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Picture">
            <summary>
              Looks up a localized string similar to Picture.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Protect">
            <summary>
              Looks up a localized string similar to Protect Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectCurrentSheet">
            <summary>
              Looks up a localized string similar to Protect Current Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectCurrentSheetDesc">
            <summary>
              Looks up a localized string similar to Control what types of changes people can make to the current sheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Protection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Deletecolumns">
            <summary>
              Looks up a localized string similar to Delete columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Deleterows">
            <summary>
              Looks up a localized string similar to Delete rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_EditObjects">
            <summary>
              Looks up a localized string similar to Edit objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Formatcells">
            <summary>
              Looks up a localized string similar to Format cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Formatcolumns">
            <summary>
              Looks up a localized string similar to Format columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Formatrows">
            <summary>
              Looks up a localized string similar to Format rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Insertcolumns">
            <summary>
              Looks up a localized string similar to Insert columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_InsertHyperlink">
            <summary>
              Looks up a localized string similar to Insert hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Insertrows">
            <summary>
              Looks up a localized string similar to Insert rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Locked">
            <summary>
              Looks up a localized string similar to Select locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Unlocked">
            <summary>
              Looks up a localized string similar to Select unlocked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheet">
            <summary>
              Looks up a localized string similar to Protect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetDesc">
            <summary>
              Looks up a localized string similar to Protect worksheet and contents of locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetDescription">
            <summary>
              Looks up a localized string similar to Password to unprotect sheet:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetLabel">
            <summary>
              Looks up a localized string similar to Allow all users of this worksheet to:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetLarge">
            <summary>
              Looks up a localized string similar to Protect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbook">
            <summary>
              Looks up a localized string similar to Protect Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookDescription">
            <summary>
              Looks up a localized string similar to Protect workbook for.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookDescriptionText">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookStructure">
            <summary>
              Looks up a localized string similar to Protect Workbook Structure.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookStructureDesc">
            <summary>
              Looks up a localized string similar to Prevent unwanted changes to the structure of the workbook, such as adding sheets..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookText">
            <summary>
              Looks up a localized string similar to Control what type of changes people can make to this workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookTitle">
            <summary>
              Looks up a localized string similar to Protect Structure and Windows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RedBorder">
            <summary>
              Looks up a localized string similar to Red Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RedText">
            <summary>
              Looks up a localized string similar to Red Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Reference">
            <summary>
              Looks up a localized string similar to Place in This Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReferenceError">
            <summary>
              Looks up a localized string similar to This type of reference cannot be used in a Data Validation formula.  Change the reference to a single cell, or use a reference with worksheet function, such as =SUM(A1:E5)..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Refers_To">
            <summary>
              Looks up a localized string similar to Refers to:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RemoveLink">
            <summary>
              Looks up a localized string similar to RemoveLink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Rename">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RenameSheet">
            <summary>
              Looks up a localized string similar to Rename Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Retry">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RightAlign">
            <summary>
              Looks up a localized string similar to RightAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RightBorder">
            <summary>
              Looks up a localized string similar to Right Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RotateTextDown">
            <summary>
              Looks up a localized string similar to Rotate Text Down.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RotateTextUp">
            <summary>
              Looks up a localized string similar to Rotate Text Up.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RowHeight">
            <summary>
              Looks up a localized string similar to Row Height....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RowHeightDescription">
            <summary>
              Looks up a localized string similar to Row height:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RowHeightTitle">
            <summary>
              Looks up a localized string similar to Row Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Rows">
            <summary>
              Looks up a localized string similar to Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Save">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SaveAs">
            <summary>
              Looks up a localized string similar to Save As.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SaveChanges">
            <summary>
              Looks up a localized string similar to Do you want to save changes you made to the name reference?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Scientific">
            <summary>
              Looks up a localized string similar to Scientific.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Scope">
            <summary>
              Looks up a localized string similar to Scope:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ScreenTip">
            <summary>
              Looks up a localized string similar to ScreenTip:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SelectAll">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Settings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Sheet">
            <summary>
              Looks up a localized string similar to Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SheetProtected">
            <summary>
              Looks up a localized string similar to The Cell that you are trying to change is Protected and therefore read only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShortDate">
            <summary>
              Looks up a localized string similar to Short Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Show">
            <summary>
              Looks up a localized string similar to Show.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowAllProperties">
            <summary>
              Looks up a localized string similar to Show All Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowErrorMessage">
            <summary>
              Looks up a localized string similar to Show error alert after invalid data is entered.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowFewerProperties">
            <summary>
              Looks up a localized string similar to Show Fewer Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowInputMessage">
            <summary>
              Looks up a localized string similar to Show input message when cell is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SolidFill">
            <summary>
              Looks up a localized string similar to Solid Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Source">
            <summary>
              Looks up a localized string similar to Source :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SourceErrorText">
            <summary>
              Looks up a localized string similar to You must enter the Source..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Special">
            <summary>
              Looks up a localized string similar to Special.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StandardWidth">
            <summary>
              Looks up a localized string similar to Standard Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StandardWidthError">
            <summary>
              Looks up a localized string similar to Your entry cannot be used. An integer or decimal number may be required..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StandardWidthText">
            <summary>
              Looks up a localized string similar to Standard column width:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartDate">
            <summary>
              Looks up a localized string similar to Start date :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartDateError">
            <summary>
              Looks up a localized string similar to The date you entered for the Start Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartTime">
            <summary>
              Looks up a localized string similar to Start time:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartTimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the Start Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Stop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.String1">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Structure">
            <summary>
              Looks up a localized string similar to Structure.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Styles">
            <summary>
              Looks up a localized string similar to Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormat_CheckBoxContent">
            <summary>
              Looks up a localized string similar to My table has headers.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatDark">
            <summary>
              Looks up a localized string similar to Dark.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatLight">
            <summary>
              Looks up a localized string similar to Light.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatMedium">
            <summary>
              Looks up a localized string similar to Medium.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatTextBlockText">
            <summary>
              Looks up a localized string similar to Where is the data for your table?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableNames">
            <summary>
              Looks up a localized string similar to Table Names.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TextContains">
            <summary>
              Looks up a localized string similar to Text that Contains....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TextLength">
            <summary>
              Looks up a localized string similar to Text Length.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TexttoDisplay">
            <summary>
              Looks up a localized string similar to Text to Display:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThemedCellStyles">
            <summary>
              Looks up a localized string similar to Themed Cell Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThickBottomBorder">
            <summary>
              Looks up a localized string similar to Thick Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThickBoxBorder">
            <summary>
              Looks up a localized string similar to Thick Box Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThisMonth">
            <summary>
              Looks up a localized string similar to This Month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThisWeek">
            <summary>
              Looks up a localized string similar to This Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Time">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Title">
            <summary>
              Looks up a localized string similar to Title:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TitlesAndHeadings">
            <summary>
              Looks up a localized string similar to Titles and Headings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Today">
            <summary>
              Looks up a localized string similar to Today.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Tomorrow">
            <summary>
              Looks up a localized string similar to Tomorrow.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopAlign">
            <summary>
              Looks up a localized string similar to TopAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopAndBottomBorder">
            <summary>
              Looks up a localized string similar to Top And Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopandThickBottomBorder">
            <summary>
              Looks up a localized string similar to Top and Thick Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopBorder">
            <summary>
              Looks up a localized string similar to Top Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Typethecellreference">
            <summary>
              Looks up a localized string similar to Type the cell reference:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnfreezePanes">
            <summary>
              Looks up a localized string similar to Unfreeze Panes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnfreezePanesDescription">
            <summary>
              Looks up a localized string similar to Unlock all rows and columns to scroll through the entire worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Ungroup">
            <summary>
              Looks up a localized string similar to Ungroup.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UngroupError">
            <summary>
              Looks up a localized string similar to Cannot ungroup. To start an outline, select the detail rows or columns and group them..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHide">
            <summary>
              Looks up a localized string similar to UnHide....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideColumns">
            <summary>
              Looks up a localized string similar to Unhide Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideDescription">
            <summary>
              Looks up a localized string similar to Select the Sheet to be hided.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideRows">
            <summary>
              Looks up a localized string similar to Unhide Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideSheet">
            <summary>
              Looks up a localized string similar to Unhide Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnhideSheet_Title">
            <summary>
              Looks up a localized string similar to Unhide.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideSheetDescription">
            <summary>
              Looks up a localized string similar to Unhide Sheet:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Unlocked">
            <summary>
              Looks up a localized string similar to Select unlocked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnMergeCells">
            <summary>
              Looks up a localized string similar to Unmerge Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnProtect">
            <summary>
              Looks up a localized string similar to UnProtect Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnProtectSheet">
            <summary>
              Looks up a localized string similar to Unprotect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnProtectSheetDesc">
            <summary>
              Looks up a localized string similar to Enter Password to UnProtect the Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnprotectWorkbookTitle">
            <summary>
              Looks up a localized string similar to Unprotect Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Validation_Edit_NameRanges">
            <summary>
              Looks up a localized string similar to The name you entered is invalid. Reasons for this can include :                  1.The name does not begin with a letter or underscore.                              2.The name contains white spaces or special characters.                          3.The name conflicts with an Excel built-in name or the name of another object in the workbook..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Validation_Edit_NameRanges_Refers_To">
            <summary>
              Looks up a localized string similar to The Formula you typed contains an error..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationCriteria">
            <summary>
              Looks up a localized string similar to Validation criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ClipboardPaste">
            <summary>
              Looks up a localized string similar to The data you&apos;re pasting isn&apos;t the same size as your selection, Do you want to paste anyway?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ContainsMutidatavalidation1">
            <summary>
              Looks up a localized string similar to The selection contains more than one type of validation..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ContainsMutidatavalidation2">
            <summary>
              Looks up a localized string similar to Erase current settings and continue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ContainsValidationWithNormalCell">
            <summary>
              Looks up a localized string similar to The selection contains some cells without Data Validation settings. Do you want to extend Data Validation to these results?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_CreateFiles">
            <summary>
              Looks up a localized string similar to No procedure for creating files of this type is registered with the shell.Do you want to create an empty file.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_CutTablePartially">
            <summary>
              Looks up a localized string similar to This operation is not allowed.The operation is attempting to shift cells in a table on your worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_DeleteSheet">
            <summary>
              Looks up a localized string similar to You can&apos;t undo deleting sheets, and you might be removing some data. If you don&apos;t need it, click OK..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_EnteredInvalidData">
            <summary>
              Looks up a localized string similar to The value you entered is not a valid number, date, time or string .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_EnterValidRange">
            <summary>
              Looks up a localized string similar to Enter a valid Range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_FileExist1">
            <summary>
              Looks up a localized string similar to You already have a file named.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_FileExist2">
            <summary>
              Looks up a localized string similar to Do you want to replace it with this one.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_FileOpen">
            <summary>
              Looks up a localized string similar to Cannot open the specified file..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InavalidFile">
            <summary>
              Looks up a localized string similar to Invalid file name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InCorrectPassword">
            <summary>
              Looks up a localized string similar to The password you supplied is not correct. Verify that the CAPS LOCK key is off and be sure to use correct capitalization..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InvalidFileVersion">
            <summary>
              Looks up a localized string similar to File version is not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InvalidRerence">
            <summary>
              Looks up a localized string similar to Reference is not valid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MergeCells">
            <summary>
              Looks up a localized string similar to We can&apos;t do that to a merged cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MergeCutCells">
            <summary>
              Looks up a localized string similar to This operation will cause some merged cells to unmerge, Do you wish to continue?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MergedTableFormat">
            <summary>
              Looks up a localized string similar to This operation was not allowed. Merging over the table format cells was restricted..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MultipleSelections">
            <summary>
              Looks up a localized string similar to That command cannot be used on multiple selections.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_NotEnoughSpaceToPaste">
            <summary>
              Looks up a localized string similar to We can&apos;t paste because the Copy area and paste area aren&apos;t the same size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ReadOnlyCells">
            <summary>
              Looks up a localized string similar to The cell that you are trying to change is on a protected sheet and therefore readonly..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_SaveChanges">
            <summary>
              Looks up a localized string similar to Do you want to save changes that you made to this file?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_TableFormatInvalidFormula">
            <summary>
              Looks up a localized string similar to We found problem with this formula. We couldn&apos;t find a range reference or a defined name..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_TableFormatInvalidRange">
            <summary>
              Looks up a localized string similar to This operation is not allowed. The operation is attempting to shift cells in a table on your worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidNameRange">
            <summary>
              Looks up a localized string similar to You must enter a Valid reference you want to go to, or type a valid name for selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Value">
            <summary>
              Looks up a localized string similar to Value:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValueErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.View">
            <summary>
              Looks up a localized string similar to VIEW.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Visibility">
            <summary>
              Looks up a localized string similar to Visisbility.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Warning_GroupingWholeTable">
            <summary>
              Looks up a localized string similar to Cannot Group the Whole Table. To start an outline, select the detail rows or columns and group them..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Web">
            <summary>
              Looks up a localized string similar to Existing File or Web Page.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Whentoedit">
            <summary>
              Looks up a localized string similar to When to edit:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WholeNumber">
            <summary>
              Looks up a localized string similar to Whole number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WholeNumberError">
            <summary>
              Looks up a localized string similar to Decimal values cannot be used for Whole Number conditions..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Window">
            <summary>
              Looks up a localized string similar to Window.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Windows">
            <summary>
              Looks up a localized string similar to Windows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.With">
            <summary>
              Looks up a localized string similar to with.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WrapText">
            <summary>
              Looks up a localized string similar to Wrap Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WrongPassword">
            <summary>
              Looks up a localized string similar to The Password you supplied is not correct. Verify that CAPSLOCK is off and try again.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.YellowFillWithDarkYellowText">
            <summary>
              Looks up a localized string similar to Yellow Fill with Dark Yellow Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Yesterday">
            <summary>
              Looks up a localized string similar to Yesterday.
            </summary>
        </member>
    </members>
</doc>
